{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { cloneElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Popover from '../popover';\nimport Avatar from './Avatar';\nimport AvatarContext from './AvatarContext';\nimport useStyle from './style';\n\nvar AvatarContextProvider = function AvatarContextProvider(props) {\n  var _React$useContext = React.useContext(AvatarContext),\n      size = _React$useContext.size,\n      shape = _React$useContext.shape;\n\n  var avatarContextValue = React.useMemo(function () {\n    return {\n      size: props.size || size,\n      shape: props.shape || shape\n    };\n  }, [props.size, props.shape, size, shape]);\n  return /*#__PURE__*/React.createElement(AvatarContext.Provider, {\n    value: avatarContextValue\n  }, props.children);\n};\n\nvar AvatarGroup = function AvatarGroup(props) {\n  var _a, _b, _c, _d;\n\n  var _React$useContext2 = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext2.getPrefixCls,\n      direction = _React$useContext2.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      rootClassName = props.rootClassName,\n      style = props.style,\n      maxCount = props.maxCount,\n      maxStyle = props.maxStyle,\n      size = props.size,\n      shape = props.shape,\n      maxPopoverPlacement = props.maxPopoverPlacement,\n      maxPopoverTrigger = props.maxPopoverTrigger,\n      children = props.children,\n      max = props.max;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var warning = devUseWarning('Avatar.Group');\n    [['maxCount', 'max={{ count: number }}'], ['maxStyle', 'max={{ style: CSSProperties }}'], ['maxPopoverPlacement', 'max={{ popover: PopoverProps }}'], ['maxPopoverTrigger', 'max={{ popover: PopoverProps }}']].forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          deprecatedName = _ref2[0],\n          newName = _ref2[1];\n\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n\n  var prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  var groupPrefixCls = \"\".concat(prefixCls, \"-group\");\n  var rootCls = useCSSVarCls(prefixCls);\n\n  var _useStyle = useStyle(prefixCls, rootCls),\n      _useStyle2 = _slicedToArray(_useStyle, 3),\n      wrapCSSVar = _useStyle2[0],\n      hashId = _useStyle2[1],\n      cssVarCls = _useStyle2[2];\n\n  var cls = classNames(groupPrefixCls, _defineProperty({}, \"\".concat(groupPrefixCls, \"-rtl\"), direction === 'rtl'), cssVarCls, rootCls, className, rootClassName, hashId);\n  var childrenWithProps = toArray(children).map(function (child, index) {\n    return cloneElement(child, {\n      // eslint-disable-next-line react/no-array-index-key\n      key: \"avatar-key-\".concat(index)\n    });\n  });\n  var mergeCount = (max === null || max === void 0 ? void 0 : max.count) || maxCount;\n  var numOfChildren = childrenWithProps.length;\n\n  if (mergeCount && mergeCount < numOfChildren) {\n    var childrenShow = childrenWithProps.slice(0, mergeCount);\n    var childrenHidden = childrenWithProps.slice(mergeCount, numOfChildren);\n    var mergeStyle = (max === null || max === void 0 ? void 0 : max.style) || maxStyle;\n    var mergePopoverTrigger = ((_a = max === null || max === void 0 ? void 0 : max.popover) === null || _a === void 0 ? void 0 : _a.trigger) || maxPopoverTrigger || 'hover';\n    var mergePopoverPlacement = ((_b = max === null || max === void 0 ? void 0 : max.popover) === null || _b === void 0 ? void 0 : _b.placement) || maxPopoverPlacement || 'top';\n    var mergeProps = Object.assign(Object.assign({\n      content: childrenHidden\n    }, max === null || max === void 0 ? void 0 : max.popover), {\n      classNames: {\n        root: classNames(\"\".concat(groupPrefixCls, \"-popover\"), (_d = (_c = max === null || max === void 0 ? void 0 : max.popover) === null || _c === void 0 ? void 0 : _c.classNames) === null || _d === void 0 ? void 0 : _d.root)\n      },\n      placement: mergePopoverPlacement,\n      trigger: mergePopoverTrigger\n    });\n    childrenShow.push( /*#__PURE__*/React.createElement(Popover, Object.assign({\n      key: \"avatar-popover-key\",\n      destroyOnHidden: true\n    }, mergeProps), /*#__PURE__*/React.createElement(Avatar, {\n      style: mergeStyle\n    }, \"+\".concat(numOfChildren - mergeCount))));\n    return wrapCSSVar( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n      shape: shape,\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, childrenShow)));\n  }\n\n  return wrapCSSVar( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n    shape: shape,\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, childrenWithProps)));\n};\n\nexport default AvatarGroup;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/avatar/AvatarGroup.js"],"names":["React","classNames","toArray","cloneElement","devUseWarning","ConfigContext","useCSSVarCls","Popover","Avatar","AvatarContext","useStyle","AvatarContextProvider","props","useContext","size","shape","avatarContextValue","useMemo","createElement","Provider","value","children","AvatarGroup","_a","_b","_c","_d","getPrefixCls","direction","customizePrefixCls","prefixCls","className","rootClassName","style","maxCount","maxStyle","maxPopoverPlacement","maxPopoverTrigger","max","process","env","NODE_ENV","warning","forEach","deprecatedName","newName","deprecated","groupPrefixCls","rootCls","wrapCSSVar","hashId","cssVarCls","cls","childrenWithProps","map","child","index","key","mergeCount","count","numOfChildren","length","childrenShow","slice","childrenHidden","mergeStyle","mergePopoverTrigger","popover","trigger","mergePopoverPlacement","placement","mergeProps","Object","assign","content","root","push","destroyOnHidden"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { cloneElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Popover from '../popover';\nimport Avatar from './Avatar';\nimport AvatarContext from './AvatarContext';\nimport useStyle from './style';\nconst AvatarContextProvider = props => {\n  const {\n    size,\n    shape\n  } = React.useContext(AvatarContext);\n  const avatarContextValue = React.useMemo(() => ({\n    size: props.size || size,\n    shape: props.shape || shape\n  }), [props.size, props.shape, size, shape]);\n  return /*#__PURE__*/React.createElement(AvatarContext.Provider, {\n    value: avatarContextValue\n  }, props.children);\n};\nconst AvatarGroup = props => {\n  var _a, _b, _c, _d;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    maxCount,\n    maxStyle,\n    size,\n    shape,\n    maxPopoverPlacement,\n    maxPopoverTrigger,\n    children,\n    max\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Avatar.Group');\n    [['maxCount', 'max={{ count: number }}'], ['maxStyle', 'max={{ style: CSSProperties }}'], ['maxPopoverPlacement', 'max={{ popover: PopoverProps }}'], ['maxPopoverTrigger', 'max={{ popover: PopoverProps }}']].forEach(([deprecatedName, newName]) => {\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n  const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const cls = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, cssVarCls, rootCls, className, rootClassName, hashId);\n  const childrenWithProps = toArray(children).map((child, index) => cloneElement(child, {\n    // eslint-disable-next-line react/no-array-index-key\n    key: `avatar-key-${index}`\n  }));\n  const mergeCount = (max === null || max === void 0 ? void 0 : max.count) || maxCount;\n  const numOfChildren = childrenWithProps.length;\n  if (mergeCount && mergeCount < numOfChildren) {\n    const childrenShow = childrenWithProps.slice(0, mergeCount);\n    const childrenHidden = childrenWithProps.slice(mergeCount, numOfChildren);\n    const mergeStyle = (max === null || max === void 0 ? void 0 : max.style) || maxStyle;\n    const mergePopoverTrigger = ((_a = max === null || max === void 0 ? void 0 : max.popover) === null || _a === void 0 ? void 0 : _a.trigger) || maxPopoverTrigger || 'hover';\n    const mergePopoverPlacement = ((_b = max === null || max === void 0 ? void 0 : max.popover) === null || _b === void 0 ? void 0 : _b.placement) || maxPopoverPlacement || 'top';\n    const mergeProps = Object.assign(Object.assign({\n      content: childrenHidden\n    }, max === null || max === void 0 ? void 0 : max.popover), {\n      classNames: {\n        root: classNames(`${groupPrefixCls}-popover`, (_d = (_c = max === null || max === void 0 ? void 0 : max.popover) === null || _c === void 0 ? void 0 : _c.classNames) === null || _d === void 0 ? void 0 : _d.root)\n      },\n      placement: mergePopoverPlacement,\n      trigger: mergePopoverTrigger\n    });\n    childrenShow.push(/*#__PURE__*/React.createElement(Popover, Object.assign({\n      key: \"avatar-popover-key\",\n      destroyOnHidden: true\n    }, mergeProps), /*#__PURE__*/React.createElement(Avatar, {\n      style: mergeStyle\n    }, `+${numOfChildren - mergeCount}`)));\n    return wrapCSSVar(/*#__PURE__*/React.createElement(AvatarContextProvider, {\n      shape: shape,\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, childrenShow)));\n  }\n  return wrapCSSVar(/*#__PURE__*/React.createElement(AvatarContextProvider, {\n    shape: shape,\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, childrenWithProps)));\n};\nexport default AvatarGroup;"]},"metadata":{},"sourceType":"module"}