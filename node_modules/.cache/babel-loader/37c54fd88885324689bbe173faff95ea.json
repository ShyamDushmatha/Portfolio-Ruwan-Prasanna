{"ast":null,"code":"\"use client\";\n\nimport React, { forwardRef } from 'react';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport IconWrapper from './IconWrapper';\nvar InnerLoadingIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      iconClassName = props.iconClassName;\n  var mergedIconCls = classNames(\"\".concat(prefixCls, \"-loading-icon\"), className);\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    prefixCls: prefixCls,\n    className: mergedIconCls,\n    style: style,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: iconClassName\n  }));\n});\n\nvar getCollapsedWidth = function getCollapsedWidth() {\n  return {\n    width: 0,\n    opacity: 0,\n    transform: 'scale(0)'\n  };\n};\n\nvar getRealWidth = function getRealWidth(node) {\n  return {\n    width: node.scrollWidth,\n    opacity: 1,\n    transform: 'scale(1)'\n  };\n};\n\nvar DefaultLoadingIcon = function DefaultLoadingIcon(props) {\n  var prefixCls = props.prefixCls,\n      loading = props.loading,\n      existIcon = props.existIcon,\n      className = props.className,\n      style = props.style,\n      mount = props.mount;\n  var visible = !!loading;\n\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: style\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // Used for minus flex gap style only\n    motionName: \"\".concat(prefixCls, \"-loading-icon-motion\"),\n    motionAppear: !mount,\n    motionEnter: !mount,\n    motionLeave: !mount,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, function (_ref, ref) {\n    var motionCls = _ref.className,\n        motionStyle = _ref.style;\n    var mergedStyle = Object.assign(Object.assign({}, style), motionStyle);\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: classNames(className, motionCls),\n      style: mergedStyle,\n      ref: ref\n    });\n  });\n};\n\nexport default DefaultLoadingIcon;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/button/DefaultLoadingIcon.js"],"names":["React","forwardRef","LoadingOutlined","classNames","CSSMotion","IconWrapper","InnerLoadingIcon","props","ref","prefixCls","className","style","iconClassName","mergedIconCls","createElement","getCollapsedWidth","width","opacity","transform","getRealWidth","node","scrollWidth","DefaultLoadingIcon","loading","existIcon","mount","visible","motionName","motionAppear","motionEnter","motionLeave","removeOnLeave","onAppearStart","onAppearActive","onEnterStart","onEnterActive","onLeaveStart","onLeaveActive","motionCls","motionStyle","mergedStyle","Object","assign"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { forwardRef } from 'react';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport IconWrapper from './IconWrapper';\nconst InnerLoadingIcon = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    style,\n    iconClassName\n  } = props;\n  const mergedIconCls = classNames(`${prefixCls}-loading-icon`, className);\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    prefixCls: prefixCls,\n    className: mergedIconCls,\n    style: style,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: iconClassName\n  }));\n});\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\nconst DefaultLoadingIcon = props => {\n  const {\n    prefixCls,\n    loading,\n    existIcon,\n    className,\n    style,\n    mount\n  } = props;\n  const visible = !!loading;\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: style\n    });\n  }\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // Used for minus flex gap style only\n    motionName: `${prefixCls}-loading-icon-motion`,\n    motionAppear: !mount,\n    motionEnter: !mount,\n    motionLeave: !mount,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, ({\n    className: motionCls,\n    style: motionStyle\n  }, ref) => {\n    const mergedStyle = Object.assign(Object.assign({}, style), motionStyle);\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: classNames(className, motionCls),\n      style: mergedStyle,\n      ref: ref\n    });\n  });\n};\nexport default DefaultLoadingIcon;"]},"metadata":{},"sourceType":"module"}