{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport ConfigProvider, { ConfigContext } from '../config-provider';\nexport function withPureRenderTheme(Component) {\n  return function (props) {\n    return /*#__PURE__*/React.createElement(ConfigProvider, {\n      theme: {\n        token: {\n          motion: false,\n          zIndexPopupBase: 0\n        }\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props)));\n  };\n}\n/* istanbul ignore next */\n\nvar genPurePanel = function genPurePanel(Component, alignPropName, postProps, defaultPrefixCls, getDropdownCls) {\n  var PurePanel = function PurePanel(props) {\n    var customizePrefixCls = props.prefixCls,\n        style = props.style;\n    var holderRef = React.useRef(null);\n\n    var _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        popupHeight = _React$useState2[0],\n        setPopupHeight = _React$useState2[1];\n\n    var _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        popupWidth = _React$useState4[0],\n        setPopupWidth = _React$useState4[1];\n\n    var _useMergedState = useMergedState(false, {\n      value: props.open\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        open = _useMergedState2[0],\n        setOpen = _useMergedState2[1];\n\n    var _React$useContext = React.useContext(ConfigContext),\n        getPrefixCls = _React$useContext.getPrefixCls;\n\n    var prefixCls = getPrefixCls(defaultPrefixCls || 'select', customizePrefixCls);\n    React.useEffect(function () {\n      // We do not care about ssr\n      setOpen(true);\n\n      if (typeof ResizeObserver !== 'undefined') {\n        var resizeObserver = new ResizeObserver(function (entries) {\n          var element = entries[0].target;\n          setPopupHeight(element.offsetHeight + 8);\n          setPopupWidth(element.offsetWidth);\n        });\n        var interval = setInterval(function () {\n          var _a;\n\n          var dropdownCls = getDropdownCls ? \".\".concat(getDropdownCls(prefixCls)) : \".\".concat(prefixCls, \"-dropdown\");\n          var popup = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(dropdownCls);\n\n          if (popup) {\n            clearInterval(interval);\n            resizeObserver.observe(popup);\n          }\n        }, 10);\n        return function () {\n          clearInterval(interval);\n          resizeObserver.disconnect();\n        };\n      }\n    }, []);\n    var mergedProps = Object.assign(Object.assign({}, props), {\n      style: Object.assign(Object.assign({}, style), {\n        margin: 0\n      }),\n      open: open,\n      visible: open,\n      getPopupContainer: function getPopupContainer() {\n        return holderRef.current;\n      }\n    });\n\n    if (postProps) {\n      mergedProps = postProps(mergedProps);\n    }\n\n    if (alignPropName) {\n      Object.assign(mergedProps, _defineProperty({}, alignPropName, {\n        overflow: {\n          adjustX: false,\n          adjustY: false\n        }\n      }));\n    }\n\n    var mergedStyle = {\n      paddingBottom: popupHeight,\n      position: 'relative',\n      minWidth: popupWidth\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: holderRef,\n      style: mergedStyle\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, mergedProps)));\n  };\n\n  return withPureRenderTheme(PurePanel);\n};\n\nexport default genPurePanel;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/_util/PurePanel.js"],"names":["React","useMergedState","ConfigProvider","ConfigContext","withPureRenderTheme","Component","props","createElement","theme","token","motion","zIndexPopupBase","Object","assign","genPurePanel","alignPropName","postProps","defaultPrefixCls","getDropdownCls","PurePanel","customizePrefixCls","prefixCls","style","holderRef","useRef","useState","popupHeight","setPopupHeight","popupWidth","setPopupWidth","value","open","setOpen","useContext","getPrefixCls","useEffect","ResizeObserver","resizeObserver","entries","element","target","offsetHeight","offsetWidth","interval","setInterval","_a","dropdownCls","popup","current","querySelector","clearInterval","observe","disconnect","mergedProps","margin","visible","getPopupContainer","overflow","adjustX","adjustY","mergedStyle","paddingBottom","position","minWidth","ref"],"mappings":"AAAA;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,cAAP,IAAyBC,aAAzB,QAA8C,oBAA9C;AACA,OAAO,SAASC,mBAAT,CAA6BC,SAA7B,EAAwC;AAC7C,SAAO,UAAAC,KAAK;AAAA,WAAK,aAAaN,KAAK,CAACO,aAAN,CAAoBL,cAApB,EAAoC;AAChEM,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,KADH;AAELC,UAAAA,eAAe,EAAE;AAFZ;AADF;AADyD,KAApC,EAO3B,aAAaX,KAAK,CAACO,aAAN,CAAoBF,SAApB,EAA+BO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,CAA/B,CAPc,CAAlB;AAAA,GAAZ;AAQD;AACD;;AACA,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACT,SAAD,EAAYU,aAAZ,EAA2BC,SAA3B,EAAsCC,gBAAtC,EAAwDC,cAAxD,EAA2E;AAC9F,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAb,KAAK,EAAI;AACzB,QACac,kBADb,GAGId,KAHJ,CACEe,SADF;AAAA,QAEEC,KAFF,GAGIhB,KAHJ,CAEEgB,KAFF;AAIA,QAAMC,SAAS,GAAGvB,KAAK,CAACwB,MAAN,CAAa,IAAb,CAAlB;;AACA,0BAAsCxB,KAAK,CAACyB,QAAN,CAAe,CAAf,CAAtC;AAAA;AAAA,QAAOC,WAAP;AAAA,QAAoBC,cAApB;;AACA,2BAAoC3B,KAAK,CAACyB,QAAN,CAAe,CAAf,CAApC;AAAA;AAAA,QAAOG,UAAP;AAAA,QAAmBC,aAAnB;;AACA,0BAAwB5B,cAAc,CAAC,KAAD,EAAQ;AAC5C6B,MAAAA,KAAK,EAAExB,KAAK,CAACyB;AAD+B,KAAR,CAAtC;AAAA;AAAA,QAAOA,IAAP;AAAA,QAAaC,OAAb;;AAGA,4BAEIhC,KAAK,CAACiC,UAAN,CAAiB9B,aAAjB,CAFJ;AAAA,QACE+B,YADF,qBACEA,YADF;;AAGA,QAAMb,SAAS,GAAGa,YAAY,CAACjB,gBAAgB,IAAI,QAArB,EAA+BG,kBAA/B,CAA9B;AACApB,IAAAA,KAAK,CAACmC,SAAN,CAAgB,YAAM;AACpB;AACAH,MAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,UAAI,OAAOI,cAAP,KAA0B,WAA9B,EAA2C;AACzC,YAAMC,cAAc,GAAG,IAAID,cAAJ,CAAmB,UAAAE,OAAO,EAAI;AACnD,cAAMC,OAAO,GAAGD,OAAO,CAAC,CAAD,CAAP,CAAWE,MAA3B;AACAb,UAAAA,cAAc,CAACY,OAAO,CAACE,YAAR,GAAuB,CAAxB,CAAd;AACAZ,UAAAA,aAAa,CAACU,OAAO,CAACG,WAAT,CAAb;AACD,SAJsB,CAAvB;AAKA,YAAMC,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjC,cAAIC,EAAJ;;AACA,cAAMC,WAAW,GAAG5B,cAAc,cAAOA,cAAc,CAACG,SAAD,CAArB,eAAyCA,SAAzC,cAAlC;AACA,cAAM0B,KAAK,GAAG,CAACF,EAAE,GAAGtB,SAAS,CAACyB,OAAhB,MAA6B,IAA7B,IAAqCH,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACI,aAAH,CAAiBH,WAAjB,CAA5E;;AACA,cAAIC,KAAJ,EAAW;AACTG,YAAAA,aAAa,CAACP,QAAD,CAAb;AACAN,YAAAA,cAAc,CAACc,OAAf,CAAuBJ,KAAvB;AACD;AACF,SAR2B,EAQzB,EARyB,CAA5B;AASA,eAAO,YAAM;AACXG,UAAAA,aAAa,CAACP,QAAD,CAAb;AACAN,UAAAA,cAAc,CAACe,UAAf;AACD,SAHD;AAID;AACF,KAvBD,EAuBG,EAvBH;AAwBA,QAAIC,WAAW,GAAGzC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,CAAd,EAAwC;AACxDgB,MAAAA,KAAK,EAAEV,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBS,KAAlB,CAAd,EAAwC;AAC7CgC,QAAAA,MAAM,EAAE;AADqC,OAAxC,CADiD;AAIxDvB,MAAAA,IAAI,EAAJA,IAJwD;AAKxDwB,MAAAA,OAAO,EAAExB,IAL+C;AAMxDyB,MAAAA,iBAAiB,EAAE;AAAA,eAAMjC,SAAS,CAACyB,OAAhB;AAAA;AANqC,KAAxC,CAAlB;;AAQA,QAAIhC,SAAJ,EAAe;AACbqC,MAAAA,WAAW,GAAGrC,SAAS,CAACqC,WAAD,CAAvB;AACD;;AACD,QAAItC,aAAJ,EAAmB;AACjBH,MAAAA,MAAM,CAACC,MAAP,CAAcwC,WAAd,sBACGtC,aADH,EACmB;AACf0C,QAAAA,QAAQ,EAAE;AACRC,UAAAA,OAAO,EAAE,KADD;AAERC,UAAAA,OAAO,EAAE;AAFD;AADK,OADnB;AAQD;;AACD,QAAMC,WAAW,GAAG;AAClBC,MAAAA,aAAa,EAAEnC,WADG;AAElBoC,MAAAA,QAAQ,EAAE,UAFQ;AAGlBC,MAAAA,QAAQ,EAAEnC;AAHQ,KAApB;AAKA,WAAO,aAAa5B,KAAK,CAACO,aAAN,CAAoB,KAApB,EAA2B;AAC7CyD,MAAAA,GAAG,EAAEzC,SADwC;AAE7CD,MAAAA,KAAK,EAAEsC;AAFsC,KAA3B,EAGjB,aAAa5D,KAAK,CAACO,aAAN,CAAoBF,SAApB,EAA+BO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwC,WAAlB,CAA/B,CAHI,CAApB;AAID,GArED;;AAsEA,SAAOjD,mBAAmB,CAACe,SAAD,CAA1B;AACD,CAxED;;AAyEA,eAAeL,YAAf","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport ConfigProvider, { ConfigContext } from '../config-provider';\nexport function withPureRenderTheme(Component) {\n  return props => (/*#__PURE__*/React.createElement(ConfigProvider, {\n    theme: {\n      token: {\n        motion: false,\n        zIndexPopupBase: 0\n      }\n    }\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props))));\n}\n/* istanbul ignore next */\nconst genPurePanel = (Component, alignPropName, postProps, defaultPrefixCls, getDropdownCls) => {\n  const PurePanel = props => {\n    const {\n      prefixCls: customizePrefixCls,\n      style\n    } = props;\n    const holderRef = React.useRef(null);\n    const [popupHeight, setPopupHeight] = React.useState(0);\n    const [popupWidth, setPopupWidth] = React.useState(0);\n    const [open, setOpen] = useMergedState(false, {\n      value: props.open\n    });\n    const {\n      getPrefixCls\n    } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls(defaultPrefixCls || 'select', customizePrefixCls);\n    React.useEffect(() => {\n      // We do not care about ssr\n      setOpen(true);\n      if (typeof ResizeObserver !== 'undefined') {\n        const resizeObserver = new ResizeObserver(entries => {\n          const element = entries[0].target;\n          setPopupHeight(element.offsetHeight + 8);\n          setPopupWidth(element.offsetWidth);\n        });\n        const interval = setInterval(() => {\n          var _a;\n          const dropdownCls = getDropdownCls ? `.${getDropdownCls(prefixCls)}` : `.${prefixCls}-dropdown`;\n          const popup = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(dropdownCls);\n          if (popup) {\n            clearInterval(interval);\n            resizeObserver.observe(popup);\n          }\n        }, 10);\n        return () => {\n          clearInterval(interval);\n          resizeObserver.disconnect();\n        };\n      }\n    }, []);\n    let mergedProps = Object.assign(Object.assign({}, props), {\n      style: Object.assign(Object.assign({}, style), {\n        margin: 0\n      }),\n      open,\n      visible: open,\n      getPopupContainer: () => holderRef.current\n    });\n    if (postProps) {\n      mergedProps = postProps(mergedProps);\n    }\n    if (alignPropName) {\n      Object.assign(mergedProps, {\n        [alignPropName]: {\n          overflow: {\n            adjustX: false,\n            adjustY: false\n          }\n        }\n      });\n    }\n    const mergedStyle = {\n      paddingBottom: popupHeight,\n      position: 'relative',\n      minWidth: popupWidth\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: holderRef,\n      style: mergedStyle\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, mergedProps)));\n  };\n  return withPureRenderTheme(PurePanel);\n};\nexport default genPurePanel;"]},"metadata":{},"sourceType":"module"}