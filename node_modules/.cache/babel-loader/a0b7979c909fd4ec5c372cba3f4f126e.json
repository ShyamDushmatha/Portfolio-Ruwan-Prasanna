{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isPresetColor } from '../_util/colors';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style/ribbon';\n\nvar Ribbon = function Ribbon(props) {\n  var _classNames;\n\n  var className = props.className,\n      customizePrefixCls = props.prefixCls,\n      style = props.style,\n      color = props.color,\n      children = props.children,\n      text = props.text,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'end' : _props$placement,\n      rootClassName = props.rootClassName;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  var wrapperCls = \"\".concat(prefixCls, \"-wrapper\");\n\n  var _useStyle = useStyle(prefixCls, wrapperCls),\n      _useStyle2 = _slicedToArray(_useStyle, 3),\n      wrapCSSVar = _useStyle2[0],\n      hashId = _useStyle2[1],\n      cssVarCls = _useStyle2[2];\n\n  var colorInPreset = isPresetColor(color, false);\n  var ribbonCls = classNames(prefixCls, \"\".concat(prefixCls, \"-placement-\").concat(placement), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-color-\").concat(color), colorInPreset), _classNames), className);\n  var colorStyle = {};\n  var cornerColorStyle = {};\n\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(wrapperCls, rootClassName, hashId, cssVarCls)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-text\")\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-corner\"),\n    style: cornerColorStyle\n  }))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\n\nexport default Ribbon;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/badge/Ribbon.js"],"names":["React","classNames","isPresetColor","ConfigContext","useStyle","Ribbon","props","className","customizePrefixCls","prefixCls","style","color","children","text","placement","rootClassName","useContext","getPrefixCls","direction","wrapperCls","wrapCSSVar","hashId","cssVarCls","colorInPreset","ribbonCls","colorStyle","cornerColorStyle","background","createElement","Object","assign","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isPresetColor } from '../_util/colors';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style/ribbon';\nconst Ribbon = props => {\n  const {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end',\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const wrapperCls = `${prefixCls}-wrapper`;\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, wrapperCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(wrapperCls, rootClassName, hashId, cssVarCls)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;"]},"metadata":{},"sourceType":"module"}