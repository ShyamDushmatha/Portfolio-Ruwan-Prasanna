{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useContext, useMemo } from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport ContextIsolator from '../_util/ContextIsolator';\nimport genPurePanel from '../_util/PurePanel';\nimport { getStatusClassNames } from '../_util/statusUtils';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider/context';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../form/context';\nimport Popover from '../popover';\nimport { useCompactItemContext } from '../space/Compact';\nimport { AggregationColor } from './color';\nimport ColorPickerPanel from './ColorPickerPanel';\nimport ColorTrigger from './components/ColorTrigger';\nimport useModeColor from './hooks/useModeColor';\nimport useStyle from './style';\nimport { genAlphaColor, generateColor, getColorAlpha } from './util';\n\nvar ColorPicker = function ColorPicker(props) {\n  var _classNames;\n\n  var mode = props.mode,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      format = props.format,\n      defaultFormat = props.defaultFormat,\n      _props$allowClear = props.allowClear,\n      allowClear = _props$allowClear === void 0 ? false : _props$allowClear,\n      presets = props.presets,\n      children = props.children,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? 'click' : _props$trigger,\n      open = props.open,\n      disabled = props.disabled,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomLeft' : _props$placement,\n      _props$arrow = props.arrow,\n      arrow = _props$arrow === void 0 ? true : _props$arrow,\n      panelRender = props.panelRender,\n      showText = props.showText,\n      style = props.style,\n      className = props.className,\n      customizeSize = props.size,\n      rootClassName = props.rootClassName,\n      customizePrefixCls = props.prefixCls,\n      styles = props.styles,\n      _props$disabledAlpha = props.disabledAlpha,\n      disabledAlpha = _props$disabledAlpha === void 0 ? false : _props$disabledAlpha,\n      onFormatChange = props.onFormatChange,\n      onChange = props.onChange,\n      onClear = props.onClear,\n      onOpenChange = props.onOpenChange,\n      onChangeComplete = props.onChangeComplete,\n      getPopupContainer = props.getPopupContainer,\n      _props$autoAdjustOver = props.autoAdjustOverflow,\n      autoAdjustOverflow = _props$autoAdjustOver === void 0 ? true : _props$autoAdjustOver,\n      destroyTooltipOnHide = props.destroyTooltipOnHide,\n      destroyOnHidden = props.destroyOnHidden,\n      disabledFormat = props.disabledFormat,\n      rest = __rest(props, [\"mode\", \"value\", \"defaultValue\", \"format\", \"defaultFormat\", \"allowClear\", \"presets\", \"children\", \"trigger\", \"open\", \"disabled\", \"placement\", \"arrow\", \"panelRender\", \"showText\", \"style\", \"className\", \"size\", \"rootClassName\", \"prefixCls\", \"styles\", \"disabledAlpha\", \"onFormatChange\", \"onChange\", \"onClear\", \"onOpenChange\", \"onChangeComplete\", \"getPopupContainer\", \"autoAdjustOverflow\", \"destroyTooltipOnHide\", \"destroyOnHidden\", \"disabledFormat\"]);\n\n  var _useContext = useContext(ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls,\n      direction = _useContext.direction,\n      colorPicker = _useContext.colorPicker;\n\n  var contextDisabled = useContext(DisabledContext);\n  var mergedDisabled = disabled !== null && disabled !== void 0 ? disabled : contextDisabled;\n\n  var _useMergedState = useMergedState(false, {\n    value: open,\n    postState: function postState(openData) {\n      return !mergedDisabled && openData;\n    },\n    onChange: onOpenChange\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      popupOpen = _useMergedState2[0],\n      setPopupOpen = _useMergedState2[1];\n\n  var _useMergedState3 = useMergedState(format, {\n    value: format,\n    defaultValue: defaultFormat,\n    onChange: onFormatChange\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      formatValue = _useMergedState4[0],\n      setFormatValue = _useMergedState4[1];\n\n  var prefixCls = getPrefixCls('color-picker', customizePrefixCls); // ================== Value & Mode =================\n\n  var _useModeColor = useModeColor(defaultValue, value, mode),\n      _useModeColor2 = _slicedToArray(_useModeColor, 5),\n      mergedColor = _useModeColor2[0],\n      setColor = _useModeColor2[1],\n      modeState = _useModeColor2[2],\n      setModeState = _useModeColor2[3],\n      modeOptions = _useModeColor2[4];\n\n  var isAlphaColor = useMemo(function () {\n    return getColorAlpha(mergedColor) < 100;\n  }, [mergedColor]); // ==================== Change =====================\n  // To enhance user experience, we cache the gradient color when switch from gradient to single\n  // If user not modify single color, we will use the cached gradient color.\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cachedGradientColor = _React$useState2[0],\n      setCachedGradientColor = _React$useState2[1];\n\n  var onInternalChangeComplete = function onInternalChangeComplete(color) {\n    if (onChangeComplete) {\n      var changeColor = generateColor(color); // ignore alpha color\n\n      if (disabledAlpha && isAlphaColor) {\n        changeColor = genAlphaColor(color);\n      }\n\n      onChangeComplete(changeColor);\n    }\n  };\n\n  var onInternalChange = function onInternalChange(data, changeFromPickerDrag) {\n    var color = generateColor(data); // ignore alpha color\n\n    if (disabledAlpha && isAlphaColor) {\n      color = genAlphaColor(color);\n    }\n\n    setColor(color);\n    setCachedGradientColor(null); // Trigger change event\n\n    if (onChange) {\n      onChange(color, color.toCssString());\n    } // Only for drag-and-drop color picking\n\n\n    if (!changeFromPickerDrag) {\n      onInternalChangeComplete(color);\n    }\n  }; // =================== Gradient ====================\n\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      activeIndex = _React$useState4[0],\n      setActiveIndex = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      gradientDragging = _React$useState6[0],\n      setGradientDragging = _React$useState6[1]; // Mode change should also trigger color change\n\n\n  var onInternalModeChange = function onInternalModeChange(newMode) {\n    setModeState(newMode);\n\n    if (newMode === 'single' && mergedColor.isGradient()) {\n      setActiveIndex(0);\n      onInternalChange(new AggregationColor(mergedColor.getColors()[0].color)); // Should after `onInternalChange` since it will clear the cached color\n\n      setCachedGradientColor(mergedColor);\n    } else if (newMode === 'gradient' && !mergedColor.isGradient()) {\n      var baseColor = isAlphaColor ? genAlphaColor(mergedColor) : mergedColor;\n      onInternalChange(new AggregationColor(cachedGradientColor || [{\n        percent: 0,\n        color: baseColor\n      }, {\n        percent: 100,\n        color: baseColor\n      }]));\n    }\n  }; // ================== Form Status ==================\n\n\n  var _React$useContext = React.useContext(FormItemInputContext),\n      contextStatus = _React$useContext.status; // ==================== Compact ====================\n\n\n  var _useCompactItemContex = useCompactItemContext(prefixCls, direction),\n      compactSize = _useCompactItemContex.compactSize,\n      compactItemClassnames = _useCompactItemContex.compactItemClassnames; // ===================== Style =====================\n\n\n  var mergedSize = useSize(function (ctx) {\n    var _a;\n\n    return (_a = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a !== void 0 ? _a : ctx;\n  });\n  var rootCls = useCSSVarCls(prefixCls);\n\n  var _useStyle = useStyle(prefixCls, rootCls),\n      _useStyle2 = _slicedToArray(_useStyle, 3),\n      wrapCSSVar = _useStyle2[0],\n      hashId = _useStyle2[1],\n      cssVarCls = _useStyle2[2];\n\n  var rtlCls = _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction);\n\n  var mergedRootCls = classNames(rootClassName, cssVarCls, rootCls, rtlCls);\n  var mergedCls = classNames(getStatusClassNames(prefixCls, contextStatus), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), mergedSize === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), mergedSize === 'large'), _classNames), compactItemClassnames, colorPicker === null || colorPicker === void 0 ? void 0 : colorPicker.className, mergedRootCls, className, hashId);\n  var mergedPopupCls = classNames(prefixCls, mergedRootCls); // ===================== Warning ======================\n\n  if (process.env.NODE_ENV !== 'production') {\n    var warning = devUseWarning('ColorPicker');\n    process.env.NODE_ENV !== \"production\" ? warning(!(disabledAlpha && isAlphaColor), 'usage', '`disabledAlpha` will make the alpha to be 100% when use alpha color.') : void 0;\n  }\n\n  var popoverProps = {\n    open: popupOpen,\n    trigger: trigger,\n    placement: placement,\n    arrow: arrow,\n    rootClassName: rootClassName,\n    getPopupContainer: getPopupContainer,\n    autoAdjustOverflow: autoAdjustOverflow,\n    destroyOnHidden: destroyOnHidden !== null && destroyOnHidden !== void 0 ? destroyOnHidden : !!destroyTooltipOnHide\n  };\n  var mergedStyle = Object.assign(Object.assign({}, colorPicker === null || colorPicker === void 0 ? void 0 : colorPicker.style), style); // ============================ zIndex ============================\n\n  return wrapCSSVar( /*#__PURE__*/React.createElement(Popover, Object.assign({\n    style: styles === null || styles === void 0 ? void 0 : styles.popup,\n    styles: {\n      body: styles === null || styles === void 0 ? void 0 : styles.popupOverlayInner\n    },\n    onOpenChange: function onOpenChange(visible) {\n      if (!visible || !mergedDisabled) {\n        setPopupOpen(visible);\n      }\n    },\n    content: /*#__PURE__*/React.createElement(ContextIsolator, {\n      form: true\n    }, /*#__PURE__*/React.createElement(ColorPickerPanel, {\n      mode: modeState,\n      onModeChange: onInternalModeChange,\n      modeOptions: modeOptions,\n      prefixCls: prefixCls,\n      value: mergedColor,\n      allowClear: allowClear,\n      disabled: mergedDisabled,\n      disabledAlpha: disabledAlpha,\n      presets: presets,\n      panelRender: panelRender,\n      format: formatValue,\n      onFormatChange: setFormatValue,\n      onChange: onInternalChange,\n      onChangeComplete: onInternalChangeComplete,\n      onClear: onClear,\n      activeIndex: activeIndex,\n      onActive: setActiveIndex,\n      gradientDragging: gradientDragging,\n      onGradientDragging: setGradientDragging,\n      disabledFormat: disabledFormat\n    })),\n    classNames: {\n      root: mergedPopupCls\n    }\n  }, popoverProps), children || /*#__PURE__*/React.createElement(ColorTrigger, Object.assign({\n    activeIndex: popupOpen ? activeIndex : -1,\n    open: popupOpen,\n    className: mergedCls,\n    style: mergedStyle,\n    prefixCls: prefixCls,\n    disabled: mergedDisabled,\n    showText: showText,\n    format: formatValue\n  }, rest, {\n    color: mergedColor\n  }))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\n\nvar PurePanel = genPurePanel(ColorPicker, undefined, function (props) {\n  return Object.assign(Object.assign({}, props), {\n    placement: 'bottom',\n    autoAdjustOverflow: false\n  });\n}, 'color-picker',\n/* istanbul ignore next */\nfunction (prefixCls) {\n  return prefixCls;\n});\nColorPicker._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/color-picker/ColorPicker.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","useContext","useMemo","classNames","useMergedState","ContextIsolator","genPurePanel","getStatusClassNames","devUseWarning","ConfigContext","DisabledContext","useCSSVarCls","useSize","FormItemInputContext","Popover","useCompactItemContext","AggregationColor","ColorPickerPanel","ColorTrigger","useModeColor","useStyle","genAlphaColor","generateColor","getColorAlpha","ColorPicker","props","mode","value","defaultValue","format","defaultFormat","allowClear","presets","children","trigger","open","disabled","placement","arrow","panelRender","showText","style","className","customizeSize","size","rootClassName","customizePrefixCls","prefixCls","styles","disabledAlpha","onFormatChange","onChange","onClear","onOpenChange","onChangeComplete","getPopupContainer","autoAdjustOverflow","destroyTooltipOnHide","destroyOnHidden","disabledFormat","rest","getPrefixCls","direction","colorPicker","contextDisabled","mergedDisabled","postState","openData","popupOpen","setPopupOpen","formatValue","setFormatValue","mergedColor","setColor","modeState","setModeState","modeOptions","isAlphaColor","useState","cachedGradientColor","setCachedGradientColor","onInternalChangeComplete","color","changeColor","onInternalChange","data","changeFromPickerDrag","toCssString","activeIndex","setActiveIndex","gradientDragging","setGradientDragging","onInternalModeChange","newMode","isGradient","getColors","baseColor","percent","contextStatus","status","compactSize","compactItemClassnames","mergedSize","ctx","_a","rootCls","wrapCSSVar","hashId","cssVarCls","rtlCls","mergedRootCls","mergedCls","mergedPopupCls","process","env","NODE_ENV","warning","popoverProps","mergedStyle","assign","createElement","popup","body","popupOverlayInner","visible","content","form","onModeChange","onActive","onGradientDragging","root","displayName","PurePanel","undefined","_InternalPanelDoNotUseOrYouWillBeFired"],"mappings":"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","sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { useContext, useMemo } from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport ContextIsolator from '../_util/ContextIsolator';\nimport genPurePanel from '../_util/PurePanel';\nimport { getStatusClassNames } from '../_util/statusUtils';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider/context';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../form/context';\nimport Popover from '../popover';\nimport { useCompactItemContext } from '../space/Compact';\nimport { AggregationColor } from './color';\nimport ColorPickerPanel from './ColorPickerPanel';\nimport ColorTrigger from './components/ColorTrigger';\nimport useModeColor from './hooks/useModeColor';\nimport useStyle from './style';\nimport { genAlphaColor, generateColor, getColorAlpha } from './util';\nconst ColorPicker = props => {\n  const {\n      mode,\n      value,\n      defaultValue,\n      format,\n      defaultFormat,\n      allowClear = false,\n      presets,\n      children,\n      trigger = 'click',\n      open,\n      disabled,\n      placement = 'bottomLeft',\n      arrow = true,\n      panelRender,\n      showText,\n      style,\n      className,\n      size: customizeSize,\n      rootClassName,\n      prefixCls: customizePrefixCls,\n      styles,\n      disabledAlpha = false,\n      onFormatChange,\n      onChange,\n      onClear,\n      onOpenChange,\n      onChangeComplete,\n      getPopupContainer,\n      autoAdjustOverflow = true,\n      destroyTooltipOnHide,\n      destroyOnHidden,\n      disabledFormat\n    } = props,\n    rest = __rest(props, [\"mode\", \"value\", \"defaultValue\", \"format\", \"defaultFormat\", \"allowClear\", \"presets\", \"children\", \"trigger\", \"open\", \"disabled\", \"placement\", \"arrow\", \"panelRender\", \"showText\", \"style\", \"className\", \"size\", \"rootClassName\", \"prefixCls\", \"styles\", \"disabledAlpha\", \"onFormatChange\", \"onChange\", \"onClear\", \"onOpenChange\", \"onChangeComplete\", \"getPopupContainer\", \"autoAdjustOverflow\", \"destroyTooltipOnHide\", \"destroyOnHidden\", \"disabledFormat\"]);\n  const {\n    getPrefixCls,\n    direction,\n    colorPicker\n  } = useContext(ConfigContext);\n  const contextDisabled = useContext(DisabledContext);\n  const mergedDisabled = disabled !== null && disabled !== void 0 ? disabled : contextDisabled;\n  const [popupOpen, setPopupOpen] = useMergedState(false, {\n    value: open,\n    postState: openData => !mergedDisabled && openData,\n    onChange: onOpenChange\n  });\n  const [formatValue, setFormatValue] = useMergedState(format, {\n    value: format,\n    defaultValue: defaultFormat,\n    onChange: onFormatChange\n  });\n  const prefixCls = getPrefixCls('color-picker', customizePrefixCls);\n  // ================== Value & Mode =================\n  const [mergedColor, setColor, modeState, setModeState, modeOptions] = useModeColor(defaultValue, value, mode);\n  const isAlphaColor = useMemo(() => getColorAlpha(mergedColor) < 100, [mergedColor]);\n  // ==================== Change =====================\n  // To enhance user experience, we cache the gradient color when switch from gradient to single\n  // If user not modify single color, we will use the cached gradient color.\n  const [cachedGradientColor, setCachedGradientColor] = React.useState(null);\n  const onInternalChangeComplete = color => {\n    if (onChangeComplete) {\n      let changeColor = generateColor(color);\n      // ignore alpha color\n      if (disabledAlpha && isAlphaColor) {\n        changeColor = genAlphaColor(color);\n      }\n      onChangeComplete(changeColor);\n    }\n  };\n  const onInternalChange = (data, changeFromPickerDrag) => {\n    let color = generateColor(data);\n    // ignore alpha color\n    if (disabledAlpha && isAlphaColor) {\n      color = genAlphaColor(color);\n    }\n    setColor(color);\n    setCachedGradientColor(null);\n    // Trigger change event\n    if (onChange) {\n      onChange(color, color.toCssString());\n    }\n    // Only for drag-and-drop color picking\n    if (!changeFromPickerDrag) {\n      onInternalChangeComplete(color);\n    }\n  };\n  // =================== Gradient ====================\n  const [activeIndex, setActiveIndex] = React.useState(0);\n  const [gradientDragging, setGradientDragging] = React.useState(false);\n  // Mode change should also trigger color change\n  const onInternalModeChange = newMode => {\n    setModeState(newMode);\n    if (newMode === 'single' && mergedColor.isGradient()) {\n      setActiveIndex(0);\n      onInternalChange(new AggregationColor(mergedColor.getColors()[0].color));\n      // Should after `onInternalChange` since it will clear the cached color\n      setCachedGradientColor(mergedColor);\n    } else if (newMode === 'gradient' && !mergedColor.isGradient()) {\n      const baseColor = isAlphaColor ? genAlphaColor(mergedColor) : mergedColor;\n      onInternalChange(new AggregationColor(cachedGradientColor || [{\n        percent: 0,\n        color: baseColor\n      }, {\n        percent: 100,\n        color: baseColor\n      }]));\n    }\n  };\n  // ================== Form Status ==================\n  const {\n    status: contextStatus\n  } = React.useContext(FormItemInputContext);\n  // ==================== Compact ====================\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  // ===================== Style =====================\n  const mergedSize = useSize(ctx => {\n    var _a;\n    return (_a = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a !== void 0 ? _a : ctx;\n  });\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const rtlCls = {\n    [`${prefixCls}-rtl`]: direction\n  };\n  const mergedRootCls = classNames(rootClassName, cssVarCls, rootCls, rtlCls);\n  const mergedCls = classNames(getStatusClassNames(prefixCls, contextStatus), {\n    [`${prefixCls}-sm`]: mergedSize === 'small',\n    [`${prefixCls}-lg`]: mergedSize === 'large'\n  }, compactItemClassnames, colorPicker === null || colorPicker === void 0 ? void 0 : colorPicker.className, mergedRootCls, className, hashId);\n  const mergedPopupCls = classNames(prefixCls, mergedRootCls);\n  // ===================== Warning ======================\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('ColorPicker');\n    process.env.NODE_ENV !== \"production\" ? warning(!(disabledAlpha && isAlphaColor), 'usage', '`disabledAlpha` will make the alpha to be 100% when use alpha color.') : void 0;\n  }\n  const popoverProps = {\n    open: popupOpen,\n    trigger,\n    placement,\n    arrow,\n    rootClassName,\n    getPopupContainer,\n    autoAdjustOverflow,\n    destroyOnHidden: destroyOnHidden !== null && destroyOnHidden !== void 0 ? destroyOnHidden : !!destroyTooltipOnHide\n  };\n  const mergedStyle = Object.assign(Object.assign({}, colorPicker === null || colorPicker === void 0 ? void 0 : colorPicker.style), style);\n  // ============================ zIndex ============================\n  return wrapCSSVar(/*#__PURE__*/React.createElement(Popover, Object.assign({\n    style: styles === null || styles === void 0 ? void 0 : styles.popup,\n    styles: {\n      body: styles === null || styles === void 0 ? void 0 : styles.popupOverlayInner\n    },\n    onOpenChange: visible => {\n      if (!visible || !mergedDisabled) {\n        setPopupOpen(visible);\n      }\n    },\n    content: /*#__PURE__*/React.createElement(ContextIsolator, {\n      form: true\n    }, /*#__PURE__*/React.createElement(ColorPickerPanel, {\n      mode: modeState,\n      onModeChange: onInternalModeChange,\n      modeOptions: modeOptions,\n      prefixCls: prefixCls,\n      value: mergedColor,\n      allowClear: allowClear,\n      disabled: mergedDisabled,\n      disabledAlpha: disabledAlpha,\n      presets: presets,\n      panelRender: panelRender,\n      format: formatValue,\n      onFormatChange: setFormatValue,\n      onChange: onInternalChange,\n      onChangeComplete: onInternalChangeComplete,\n      onClear: onClear,\n      activeIndex: activeIndex,\n      onActive: setActiveIndex,\n      gradientDragging: gradientDragging,\n      onGradientDragging: setGradientDragging,\n      disabledFormat: disabledFormat\n    })),\n    classNames: {\n      root: mergedPopupCls\n    }\n  }, popoverProps), children || (/*#__PURE__*/React.createElement(ColorTrigger, Object.assign({\n    activeIndex: popupOpen ? activeIndex : -1,\n    open: popupOpen,\n    className: mergedCls,\n    style: mergedStyle,\n    prefixCls: prefixCls,\n    disabled: mergedDisabled,\n    showText: showText,\n    format: formatValue\n  }, rest, {\n    color: mergedColor\n  })))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\nconst PurePanel = genPurePanel(ColorPicker, undefined, props => Object.assign(Object.assign({}, props), {\n  placement: 'bottom',\n  autoAdjustOverflow: false\n}), 'color-picker', /* istanbul ignore next */\nprefixCls => prefixCls);\nColorPicker._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default ColorPicker;"]},"metadata":{},"sourceType":"module"}