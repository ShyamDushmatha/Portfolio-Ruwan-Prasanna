{"ast":null,"code":"import _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { NotificationPlacements } from '../interface';\nvar placementAlignProperty = {\n  topLeft: 'left',\n  topRight: 'right',\n  bottomLeft: 'left',\n  bottomRight: 'right',\n  top: 'left',\n  bottom: 'left'\n};\n\nvar genPlacementStackStyle = function genPlacementStackStyle(token, placement) {\n  var _$concat$concat;\n\n  var componentCls = token.componentCls;\n  return _defineProperty({}, \"\".concat(componentCls, \"-\").concat(placement), _defineProperty({}, \"&\".concat(componentCls, \"-stack > \").concat(componentCls, \"-notice-wrapper\"), (_$concat$concat = {}, _defineProperty(_$concat$concat, placement.startsWith('top') ? 'top' : 'bottom', 0), _defineProperty(_$concat$concat, placementAlignProperty[placement], {\n    value: 0,\n    _skip_check_: true\n  }), _$concat$concat)));\n};\n\nvar genStackChildrenStyle = function genStackChildrenStyle(token) {\n  var childrenStyle = {};\n\n  for (var i = 1; i < token.notificationStackLayer; i++) {\n    childrenStyle[\"&:nth-last-child(\".concat(i + 1, \")\")] = _defineProperty({\n      overflow: 'hidden'\n    }, \"& > \".concat(token.componentCls, \"-notice\"), {\n      opacity: 0,\n      transition: \"opacity \".concat(token.motionDurationMid)\n    });\n  }\n\n  return Object.assign(_defineProperty({}, \"&:not(:nth-last-child(-n+\".concat(token.notificationStackLayer, \"))\"), {\n    opacity: 0,\n    overflow: 'hidden',\n    color: 'transparent',\n    pointerEvents: 'none'\n  }), childrenStyle);\n};\n\nvar genStackedNoticeStyle = function genStackedNoticeStyle(token) {\n  var childrenStyle = {};\n\n  for (var i = 1; i < token.notificationStackLayer; i++) {\n    childrenStyle[\"&:nth-last-child(\".concat(i + 1, \")\")] = {\n      background: token.colorBgBlur,\n      backdropFilter: 'blur(10px)',\n      '-webkit-backdrop-filter': 'blur(10px)'\n    };\n  }\n\n  return Object.assign({}, childrenStyle);\n};\n\nvar genStackStyle = function genStackStyle(token) {\n  var _Object$assign2;\n\n  var componentCls = token.componentCls;\n  return Object.assign((_Object$assign2 = {}, _defineProperty(_Object$assign2, \"\".concat(componentCls, \"-stack\"), _defineProperty({}, \"& > \".concat(componentCls, \"-notice-wrapper\"), Object.assign({\n    transition: \"transform \".concat(token.motionDurationSlow, \", backdrop-filter 0s\"),\n    willChange: 'transform, opacity',\n    position: 'absolute'\n  }, genStackChildrenStyle(token)))), _defineProperty(_Object$assign2, \"\".concat(componentCls, \"-stack:not(\").concat(componentCls, \"-stack-expanded)\"), _defineProperty({}, \"& > \".concat(componentCls, \"-notice-wrapper\"), Object.assign({}, genStackedNoticeStyle(token)))), _defineProperty(_Object$assign2, \"\".concat(componentCls, \"-stack\").concat(componentCls, \"-stack-expanded\"), _defineProperty({}, \"& > \".concat(componentCls, \"-notice-wrapper\"), {\n    '&:not(:nth-last-child(-n + 1))': _defineProperty({\n      opacity: 1,\n      overflow: 'unset',\n      color: 'inherit',\n      pointerEvents: 'auto'\n    }, \"& > \".concat(token.componentCls, \"-notice\"), {\n      opacity: 1\n    }),\n    '&:after': {\n      content: '\"\"',\n      position: 'absolute',\n      height: token.margin,\n      width: '100%',\n      insetInline: 0,\n      bottom: token.calc(token.margin).mul(-1).equal(),\n      background: 'transparent',\n      pointerEvents: 'auto'\n    }\n  })), _Object$assign2), NotificationPlacements.map(function (placement) {\n    return genPlacementStackStyle(token, placement);\n  }).reduce(function (acc, cur) {\n    return Object.assign(Object.assign({}, acc), cur);\n  }, {}));\n};\n\nexport default genStackStyle;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/notification/style/stack.js"],"names":["NotificationPlacements","placementAlignProperty","topLeft","topRight","bottomLeft","bottomRight","top","bottom","genPlacementStackStyle","token","placement","componentCls","startsWith","value","_skip_check_","genStackChildrenStyle","childrenStyle","i","notificationStackLayer","overflow","opacity","transition","motionDurationMid","Object","assign","color","pointerEvents","genStackedNoticeStyle","background","colorBgBlur","backdropFilter","genStackStyle","motionDurationSlow","willChange","position","content","height","margin","width","insetInline","calc","mul","equal","map","reduce","acc","cur"],"mappings":"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","sourcesContent":["import { NotificationPlacements } from '../interface';\nconst placementAlignProperty = {\n  topLeft: 'left',\n  topRight: 'right',\n  bottomLeft: 'left',\n  bottomRight: 'right',\n  top: 'left',\n  bottom: 'left'\n};\nconst genPlacementStackStyle = (token, placement) => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-${placement}`]: {\n      [`&${componentCls}-stack > ${componentCls}-notice-wrapper`]: {\n        [placement.startsWith('top') ? 'top' : 'bottom']: 0,\n        [placementAlignProperty[placement]]: {\n          value: 0,\n          _skip_check_: true\n        }\n      }\n    }\n  };\n};\nconst genStackChildrenStyle = token => {\n  const childrenStyle = {};\n  for (let i = 1; i < token.notificationStackLayer; i++) {\n    childrenStyle[`&:nth-last-child(${i + 1})`] = {\n      overflow: 'hidden',\n      [`& > ${token.componentCls}-notice`]: {\n        opacity: 0,\n        transition: `opacity ${token.motionDurationMid}`\n      }\n    };\n  }\n  return Object.assign({\n    [`&:not(:nth-last-child(-n+${token.notificationStackLayer}))`]: {\n      opacity: 0,\n      overflow: 'hidden',\n      color: 'transparent',\n      pointerEvents: 'none'\n    }\n  }, childrenStyle);\n};\nconst genStackedNoticeStyle = token => {\n  const childrenStyle = {};\n  for (let i = 1; i < token.notificationStackLayer; i++) {\n    childrenStyle[`&:nth-last-child(${i + 1})`] = {\n      background: token.colorBgBlur,\n      backdropFilter: 'blur(10px)',\n      '-webkit-backdrop-filter': 'blur(10px)'\n    };\n  }\n  return Object.assign({}, childrenStyle);\n};\nconst genStackStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return Object.assign({\n    [`${componentCls}-stack`]: {\n      [`& > ${componentCls}-notice-wrapper`]: Object.assign({\n        transition: `transform ${token.motionDurationSlow}, backdrop-filter 0s`,\n        willChange: 'transform, opacity',\n        position: 'absolute'\n      }, genStackChildrenStyle(token))\n    },\n    [`${componentCls}-stack:not(${componentCls}-stack-expanded)`]: {\n      [`& > ${componentCls}-notice-wrapper`]: Object.assign({}, genStackedNoticeStyle(token))\n    },\n    [`${componentCls}-stack${componentCls}-stack-expanded`]: {\n      [`& > ${componentCls}-notice-wrapper`]: {\n        '&:not(:nth-last-child(-n + 1))': {\n          opacity: 1,\n          overflow: 'unset',\n          color: 'inherit',\n          pointerEvents: 'auto',\n          [`& > ${token.componentCls}-notice`]: {\n            opacity: 1\n          }\n        },\n        '&:after': {\n          content: '\"\"',\n          position: 'absolute',\n          height: token.margin,\n          width: '100%',\n          insetInline: 0,\n          bottom: token.calc(token.margin).mul(-1).equal(),\n          background: 'transparent',\n          pointerEvents: 'auto'\n        }\n      }\n    }\n  }, NotificationPlacements.map(placement => genPlacementStackStyle(token, placement)).reduce((acc, cur) => Object.assign(Object.assign({}, acc), cur), {}));\n};\nexport default genStackStyle;"]},"metadata":{},"sourceType":"module"}