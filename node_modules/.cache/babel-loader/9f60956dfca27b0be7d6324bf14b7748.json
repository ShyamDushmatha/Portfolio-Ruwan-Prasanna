{"ast":null,"code":"import _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Keyframes, unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nvar skeletonClsLoading = new Keyframes(\"ant-skeleton-loading\", {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\n\nvar genSkeletonElementCommonSize = function genSkeletonElementCommonSize(size) {\n  return {\n    height: size,\n    lineHeight: unit(size)\n  };\n};\n\nvar genSkeletonElementAvatarSize = function genSkeletonElementAvatarSize(size) {\n  return Object.assign({\n    width: size\n  }, genSkeletonElementCommonSize(size));\n};\n\nvar genSkeletonColor = function genSkeletonColor(token) {\n  return {\n    background: token.skeletonLoadingBackground,\n    backgroundSize: '400% 100%',\n    animationName: skeletonClsLoading,\n    animationDuration: token.skeletonLoadingMotionDuration,\n    animationTimingFunction: 'ease',\n    animationIterationCount: 'infinite'\n  };\n};\n\nvar genSkeletonElementInputSize = function genSkeletonElementInputSize(size, calc) {\n  return Object.assign({\n    width: calc(size).mul(5).equal(),\n    minWidth: calc(size).mul(5).equal()\n  }, genSkeletonElementCommonSize(size));\n};\n\nvar genSkeletonElementAvatar = function genSkeletonElementAvatar(token) {\n  var _ref;\n\n  var skeletonAvatarCls = token.skeletonAvatarCls,\n      gradientFromColor = token.gradientFromColor,\n      controlHeight = token.controlHeight,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM;\n  return _ref = {}, _defineProperty(_ref, skeletonAvatarCls, Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: gradientFromColor\n  }, genSkeletonElementAvatarSize(controlHeight))), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-lg\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG))), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-sm\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))), _ref;\n};\n\nvar genSkeletonElementInput = function genSkeletonElementInput(token) {\n  var _ref2;\n\n  var controlHeight = token.controlHeight,\n      borderRadiusSM = token.borderRadiusSM,\n      skeletonInputCls = token.skeletonInputCls,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM,\n      gradientFromColor = token.gradientFromColor,\n      calc = token.calc;\n  return _ref2 = {}, _defineProperty(_ref2, skeletonInputCls, Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: gradientFromColor,\n    borderRadius: borderRadiusSM\n  }, genSkeletonElementInputSize(controlHeight, calc))), _defineProperty(_ref2, \"\".concat(skeletonInputCls, \"-lg\"), Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc))), _defineProperty(_ref2, \"\".concat(skeletonInputCls, \"-sm\"), Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))), _ref2;\n};\n\nvar genSkeletonElementImageSize = function genSkeletonElementImageSize(size) {\n  return Object.assign({\n    width: size\n  }, genSkeletonElementCommonSize(size));\n};\n\nvar genSkeletonElementImage = function genSkeletonElementImage(token) {\n  var _Object$assign, _ref3;\n\n  var skeletonImageCls = token.skeletonImageCls,\n      imageSizeBase = token.imageSizeBase,\n      gradientFromColor = token.gradientFromColor,\n      borderRadiusSM = token.borderRadiusSM,\n      calc = token.calc;\n  return _ref3 = {}, _defineProperty(_ref3, skeletonImageCls, Object.assign(Object.assign({\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    verticalAlign: 'middle',\n    background: gradientFromColor,\n    borderRadius: borderRadiusSM\n  }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), (_Object$assign = {}, _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-path\"), {\n    fill: '#bfbfbf'\n  }), _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-svg\"), Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n    maxWidth: calc(imageSizeBase).mul(4).equal(),\n    maxHeight: calc(imageSizeBase).mul(4).equal()\n  })), _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-svg\").concat(skeletonImageCls, \"-svg-circle\"), {\n    borderRadius: '50%'\n  }), _Object$assign))), _defineProperty(_ref3, \"\".concat(skeletonImageCls).concat(skeletonImageCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _ref3;\n};\n\nvar genSkeletonElementButtonShape = function genSkeletonElementButtonShape(token, size, buttonCls) {\n  var _ref4;\n\n  var skeletonButtonCls = token.skeletonButtonCls;\n  return _ref4 = {}, _defineProperty(_ref4, \"\".concat(buttonCls).concat(skeletonButtonCls, \"-circle\"), {\n    width: size,\n    minWidth: size,\n    borderRadius: '50%'\n  }), _defineProperty(_ref4, \"\".concat(buttonCls).concat(skeletonButtonCls, \"-round\"), {\n    borderRadius: size\n  }), _ref4;\n};\n\nvar genSkeletonElementButtonSize = function genSkeletonElementButtonSize(size, calc) {\n  return Object.assign({\n    width: calc(size).mul(2).equal(),\n    minWidth: calc(size).mul(2).equal()\n  }, genSkeletonElementCommonSize(size));\n};\n\nvar genSkeletonElementButton = function genSkeletonElementButton(token) {\n  var borderRadiusSM = token.borderRadiusSM,\n      skeletonButtonCls = token.skeletonButtonCls,\n      controlHeight = token.controlHeight,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM,\n      gradientFromColor = token.gradientFromColor,\n      calc = token.calc;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(_defineProperty({}, skeletonButtonCls, Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: gradientFromColor,\n    borderRadius: borderRadiusSM,\n    width: calc(controlHeight).mul(2).equal(),\n    minWidth: calc(controlHeight).mul(2).equal()\n  }, genSkeletonElementButtonSize(controlHeight, calc))), genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), _defineProperty({}, \"\".concat(skeletonButtonCls, \"-lg\"), Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc)))), genSkeletonElementButtonShape(token, controlHeightLG, \"\".concat(skeletonButtonCls, \"-lg\"))), _defineProperty({}, \"\".concat(skeletonButtonCls, \"-sm\"), Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc)))), genSkeletonElementButtonShape(token, controlHeightSM, \"\".concat(skeletonButtonCls, \"-sm\")));\n}; // =============================== Base ===============================\n\n\nvar genBaseStyle = function genBaseStyle(token) {\n  var _$concat, _$concat2, _componentCls, _$concat$concat2, _ref5;\n\n  var componentCls = token.componentCls,\n      skeletonAvatarCls = token.skeletonAvatarCls,\n      skeletonTitleCls = token.skeletonTitleCls,\n      skeletonParagraphCls = token.skeletonParagraphCls,\n      skeletonButtonCls = token.skeletonButtonCls,\n      skeletonInputCls = token.skeletonInputCls,\n      skeletonImageCls = token.skeletonImageCls,\n      controlHeight = token.controlHeight,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM,\n      gradientFromColor = token.gradientFromColor,\n      padding = token.padding,\n      marginSM = token.marginSM,\n      borderRadius = token.borderRadius,\n      titleHeight = token.titleHeight,\n      blockRadius = token.blockRadius,\n      paragraphLiHeight = token.paragraphLiHeight,\n      controlHeightXS = token.controlHeightXS,\n      paragraphMarginTop = token.paragraphMarginTop;\n  return _ref5 = {}, _defineProperty(_ref5, componentCls, (_componentCls = {\n    display: 'table',\n    width: '100%'\n  }, _defineProperty(_componentCls, \"\".concat(componentCls, \"-header\"), (_$concat = {\n    display: 'table-cell',\n    paddingInlineEnd: padding,\n    verticalAlign: 'top'\n  }, _defineProperty(_$concat, skeletonAvatarCls, Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: gradientFromColor\n  }, genSkeletonElementAvatarSize(controlHeight))), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-lg\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG))), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-sm\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))), _$concat)), _defineProperty(_componentCls, \"\".concat(componentCls, \"-content\"), (_$concat2 = {\n    display: 'table-cell',\n    width: '100%',\n    verticalAlign: 'top'\n  }, _defineProperty(_$concat2, skeletonTitleCls, _defineProperty({\n    width: '100%',\n    height: titleHeight,\n    background: gradientFromColor,\n    borderRadius: blockRadius\n  }, \"+ \".concat(skeletonParagraphCls), {\n    marginBlockStart: controlHeightSM\n  })), _defineProperty(_$concat2, skeletonParagraphCls, {\n    padding: 0,\n    '> li': {\n      width: '100%',\n      height: paragraphLiHeight,\n      listStyle: 'none',\n      background: gradientFromColor,\n      borderRadius: blockRadius,\n      '+ li': {\n        marginBlockStart: controlHeightXS\n      }\n    }\n  }), _defineProperty(_$concat2, \"\".concat(skeletonParagraphCls, \"> li:last-child:not(:first-child):not(:nth-child(2))\"), {\n    width: '61%'\n  }), _$concat2)), _defineProperty(_componentCls, \"&-round \".concat(componentCls, \"-content\"), _defineProperty({}, \"\".concat(skeletonTitleCls, \", \").concat(skeletonParagraphCls, \" > li\"), {\n    borderRadius: borderRadius\n  })), _componentCls)), _defineProperty(_ref5, \"\".concat(componentCls, \"-with-avatar \").concat(componentCls, \"-content\"), _defineProperty({}, skeletonTitleCls, _defineProperty({\n    marginBlockStart: marginSM\n  }, \"+ \".concat(skeletonParagraphCls), {\n    marginBlockStart: paragraphMarginTop\n  }))), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-element\"), Object.assign(Object.assign(Object.assign(Object.assign({\n    display: 'inline-block',\n    width: 'auto'\n  }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token))), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-block\"), (_$concat$concat2 = {\n    width: '100%'\n  }, _defineProperty(_$concat$concat2, skeletonButtonCls, {\n    width: '100%'\n  }), _defineProperty(_$concat$concat2, skeletonInputCls, {\n    width: '100%'\n  }), _$concat$concat2)), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-active\"), _defineProperty({}, \"\\n        \".concat(skeletonTitleCls, \",\\n        \").concat(skeletonParagraphCls, \" > li,\\n        \").concat(skeletonAvatarCls, \",\\n        \").concat(skeletonButtonCls, \",\\n        \").concat(skeletonInputCls, \",\\n        \").concat(skeletonImageCls, \"\\n      \"), Object.assign({}, genSkeletonColor(token)))), _ref5;\n}; // ============================== Export ==============================\n\n\nexport var prepareComponentToken = function prepareComponentToken(token) {\n  var colorFillContent = token.colorFillContent,\n      colorFill = token.colorFill;\n  var gradientFromColor = colorFillContent;\n  var gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor: gradientFromColor,\n    gradientToColor: gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexport default genStyleHooks('Skeleton', function (token) {\n  var componentCls = token.componentCls,\n      calc = token.calc;\n  var skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: \"\".concat(componentCls, \"-avatar\"),\n    skeletonTitleCls: \"\".concat(componentCls, \"-title\"),\n    skeletonParagraphCls: \"\".concat(componentCls, \"-paragraph\"),\n    skeletonButtonCls: \"\".concat(componentCls, \"-button\"),\n    skeletonInputCls: \"\".concat(componentCls, \"-input\"),\n    skeletonImageCls: \"\".concat(componentCls, \"-image\"),\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: \"linear-gradient(90deg, \".concat(token.gradientFromColor, \" 25%, \").concat(token.gradientToColor, \" 37%, \").concat(token.gradientFromColor, \" 63%)\"),\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/skeleton/style/index.js"],"names":["Keyframes","unit","genStyleHooks","mergeToken","skeletonClsLoading","backgroundPosition","genSkeletonElementCommonSize","size","height","lineHeight","genSkeletonElementAvatarSize","Object","assign","width","genSkeletonColor","token","background","skeletonLoadingBackground","backgroundSize","animationName","animationDuration","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","genSkeletonElementInputSize","calc","mul","equal","minWidth","genSkeletonElementAvatar","skeletonAvatarCls","gradientFromColor","controlHeight","controlHeightLG","controlHeightSM","display","verticalAlign","borderRadius","genSkeletonElementInput","borderRadiusSM","skeletonInputCls","genSkeletonElementImageSize","genSkeletonElementImage","skeletonImageCls","imageSizeBase","alignItems","justifyContent","fill","maxWidth","maxHeight","genSkeletonElementButtonShape","buttonCls","skeletonButtonCls","genSkeletonElementButtonSize","genSkeletonElementButton","genBaseStyle","componentCls","skeletonTitleCls","skeletonParagraphCls","padding","marginSM","titleHeight","blockRadius","paragraphLiHeight","controlHeightXS","paragraphMarginTop","paddingInlineEnd","marginBlockStart","listStyle","prepareComponentToken","colorFillContent","colorFill","gradientToColor","color","colorGradientEnd","marginLG","marginXXS","skeletonToken","deprecatedTokens"],"mappings":"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","sourcesContent":["import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: unit(size)\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = (size, calc) => Object.assign({\n  width: calc(size).mul(5).equal(),\n  minWidth: calc(size).mul(5).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    gradientFromColor,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [skeletonAvatarCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return {\n    [skeletonInputCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight, calc)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    gradientFromColor,\n    borderRadiusSM,\n    calc\n  } = token;\n  return {\n    [skeletonImageCls]: Object.assign(Object.assign({\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'middle',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: calc(imageSizeBase).mul(4).equal(),\n        maxHeight: calc(imageSizeBase).mul(4).equal()\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = (size, calc) => Object.assign({\n  width: calc(size).mul(2).equal(),\n  minWidth: calc(size).mul(2).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [skeletonButtonCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM,\n      width: calc(controlHeight).mul(2).equal(),\n      minWidth: calc(controlHeight).mul(2).equal()\n    }, genSkeletonElementButtonSize(controlHeight, calc))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    padding,\n    marginSM,\n    borderRadius,\n    titleHeight,\n    blockRadius,\n    paragraphLiHeight,\n    controlHeightXS,\n    paragraphMarginTop\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [skeletonAvatarCls]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: gradientFromColor\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [skeletonTitleCls]: {\n          width: '100%',\n          height: titleHeight,\n          background: gradientFromColor,\n          borderRadius: blockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [skeletonParagraphCls]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: paragraphLiHeight,\n            listStyle: 'none',\n            background: gradientFromColor,\n            borderRadius: blockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [skeletonTitleCls]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: paragraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [skeletonButtonCls]: {\n        width: '100%'\n      },\n      [skeletonInputCls]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  const gradientFromColor = colorFillContent;\n  const gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor,\n    gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexport default genStyleHooks('Skeleton', token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});"]},"metadata":{},"sourceType":"module"}