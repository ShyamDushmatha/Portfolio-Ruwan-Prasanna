{"ast":null,"code":"\"use client\";\n\nimport React from 'react';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport Button from '../button';\nimport Spin from '../spin';\nvar defaultSpin = /*#__PURE__*/React.createElement(Spin, null);\nexport default function QRcodeStatus(_ref) {\n  var prefixCls = _ref.prefixCls,\n      locale = _ref.locale,\n      onRefresh = _ref.onRefresh,\n      statusRender = _ref.statusRender,\n      status = _ref.status;\n  var defaultExpiredNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefixCls, \"-expired\")\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh));\n  var defaultScannedNode = /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefixCls, \"-scanned\")\n  }, locale === null || locale === void 0 ? void 0 : locale.scanned);\n  var defaultNodes = {\n    expired: defaultExpiredNode,\n    loading: defaultSpin,\n    scanned: defaultScannedNode\n  };\n\n  var defaultStatusRender = function defaultStatusRender(info) {\n    return defaultNodes[info.status];\n  };\n\n  var mergedStatusRender = statusRender !== null && statusRender !== void 0 ? statusRender : defaultStatusRender;\n  return mergedStatusRender({\n    status: status,\n    locale: locale,\n    onRefresh: onRefresh\n  });\n}","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/qr-code/QrcodeStatus.js"],"names":["React","ReloadOutlined","Button","Spin","defaultSpin","createElement","QRcodeStatus","prefixCls","locale","onRefresh","statusRender","status","defaultExpiredNode","Fragment","className","expired","type","icon","onClick","refresh","defaultScannedNode","scanned","defaultNodes","loading","defaultStatusRender","info","mergedStatusRender"],"mappings":"AAAA;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,IAAMC,WAAW,GAAG,aAAaJ,KAAK,CAACK,aAAN,CAAoBF,IAApB,EAA0B,IAA1B,CAAjC;AACA,eAAe,SAASG,YAAT,OAMZ;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,MACC,QADDA,MACC;AACD,MAAMC,kBAAkB,GAAG,aAAaZ,KAAK,CAACK,aAAN,CAAoBL,KAAK,CAACa,QAA1B,EAAoC,IAApC,EAA0C,aAAab,KAAK,CAACK,aAAN,CAAoB,GAApB,EAAyB;AACtHS,IAAAA,SAAS,YAAKP,SAAL;AAD6G,GAAzB,EAE5FC,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACO,OAFqC,CAAvD,EAE4BN,SAAS,IAAK,aAAaT,KAAK,CAACK,aAAN,CAAoBH,MAApB,EAA4B;AACzHc,IAAAA,IAAI,EAAE,MADmH;AAEzHC,IAAAA,IAAI,EAAE,aAAajB,KAAK,CAACK,aAAN,CAAoBJ,cAApB,EAAoC,IAApC,CAFsG;AAGzHiB,IAAAA,OAAO,EAAET;AAHgH,GAA5B,EAI5FD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACW,OAJqC,CAFvD,CAAxC;AAOA,MAAMC,kBAAkB,GAAG,aAAapB,KAAK,CAACK,aAAN,CAAoB,GAApB,EAAyB;AAC/DS,IAAAA,SAAS,YAAKP,SAAL;AADsD,GAAzB,EAErCC,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACa,OAFlB,CAAxC;AAGA,MAAMC,YAAY,GAAG;AACnBP,IAAAA,OAAO,EAAEH,kBADU;AAEnBW,IAAAA,OAAO,EAAEnB,WAFU;AAGnBiB,IAAAA,OAAO,EAAED;AAHU,GAArB;;AAKA,MAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,IAAI;AAAA,WAAIH,YAAY,CAACG,IAAI,CAACd,MAAN,CAAhB;AAAA,GAAhC;;AACA,MAAMe,kBAAkB,GAAGhB,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmDA,YAAnD,GAAkEc,mBAA7F;AACA,SAAOE,kBAAkB,CAAC;AACxBf,IAAAA,MAAM,EAANA,MADwB;AAExBH,IAAAA,MAAM,EAANA,MAFwB;AAGxBC,IAAAA,SAAS,EAATA;AAHwB,GAAD,CAAzB;AAKD","sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport Button from '../button';\nimport Spin from '../spin';\nconst defaultSpin = /*#__PURE__*/React.createElement(Spin, null);\nexport default function QRcodeStatus({\n  prefixCls,\n  locale,\n  onRefresh,\n  statusRender,\n  status\n}) {\n  const defaultExpiredNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && (/*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh)));\n  const defaultScannedNode = /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-scanned`\n  }, locale === null || locale === void 0 ? void 0 : locale.scanned);\n  const defaultNodes = {\n    expired: defaultExpiredNode,\n    loading: defaultSpin,\n    scanned: defaultScannedNode\n  };\n  const defaultStatusRender = info => defaultNodes[info.status];\n  const mergedStatusRender = statusRender !== null && statusRender !== void 0 ? statusRender : defaultStatusRender;\n  return mergedStatusRender({\n    status,\n    locale,\n    onRefresh\n  });\n}"]},"metadata":{},"sourceType":"module"}