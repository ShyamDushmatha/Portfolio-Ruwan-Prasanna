{"ast":null,"code":"import _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { resetComponent } from '../../style';\nimport { genPresetColor, genStyleHooks } from '../../theme/internal'; // ============================== Ribbon ==============================\n\nvar genRibbonStyle = function genRibbonStyle(token) {\n  var _Object$assign, _Object$assign2, _ref3;\n\n  var antCls = token.antCls,\n      badgeFontHeight = token.badgeFontHeight,\n      marginXS = token.marginXS,\n      badgeRibbonOffset = token.badgeRibbonOffset,\n      calc = token.calc;\n  var ribbonPrefixCls = \"\".concat(antCls, \"-ribbon\");\n  var ribbonWrapperPrefixCls = \"\".concat(antCls, \"-ribbon-wrapper\");\n  var statusRibbonPreset = genPresetColor(token, function (colorKey, _ref) {\n    var darkColor = _ref.darkColor;\n    return _defineProperty({}, \"&\".concat(ribbonPrefixCls, \"-color-\").concat(colorKey), {\n      background: darkColor,\n      color: darkColor\n    });\n  });\n  return _ref3 = {}, _defineProperty(_ref3, ribbonWrapperPrefixCls, {\n    position: 'relative'\n  }), _defineProperty(_ref3, ribbonPrefixCls, Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    position: 'absolute',\n    top: marginXS,\n    padding: \"0 \".concat(unit(token.paddingXS)),\n    color: token.colorPrimary,\n    lineHeight: unit(badgeFontHeight),\n    whiteSpace: 'nowrap',\n    backgroundColor: token.colorPrimary,\n    borderRadius: token.borderRadiusSM\n  }, _defineProperty(_Object$assign, \"\".concat(ribbonPrefixCls, \"-text\"), {\n    color: token.badgeTextColor\n  }), _defineProperty(_Object$assign, \"\".concat(ribbonPrefixCls, \"-corner\"), {\n    position: 'absolute',\n    top: '100%',\n    width: badgeRibbonOffset,\n    height: badgeRibbonOffset,\n    color: 'currentcolor',\n    border: \"\".concat(unit(calc(badgeRibbonOffset).div(2).equal()), \" solid\"),\n    transform: token.badgeRibbonCornerTransform,\n    transformOrigin: 'top',\n    filter: token.badgeRibbonCornerFilter\n  }), _Object$assign)), statusRibbonPreset), (_Object$assign2 = {}, _defineProperty(_Object$assign2, \"&\".concat(ribbonPrefixCls, \"-placement-end\"), _defineProperty({\n    insetInlineEnd: calc(badgeRibbonOffset).mul(-1).equal(),\n    borderEndEndRadius: 0\n  }, \"\".concat(ribbonPrefixCls, \"-corner\"), {\n    insetInlineEnd: 0,\n    borderInlineEndColor: 'transparent',\n    borderBlockEndColor: 'transparent'\n  })), _defineProperty(_Object$assign2, \"&\".concat(ribbonPrefixCls, \"-placement-start\"), _defineProperty({\n    insetInlineStart: calc(badgeRibbonOffset).mul(-1).equal(),\n    borderEndStartRadius: 0\n  }, \"\".concat(ribbonPrefixCls, \"-corner\"), {\n    insetInlineStart: 0,\n    borderBlockEndColor: 'transparent',\n    borderInlineStartColor: 'transparent'\n  })), _defineProperty(_Object$assign2, '&-rtl', {\n    direction: 'rtl'\n  }), _Object$assign2))), _ref3;\n}; // ============================== Export ==============================\n\n\nexport default genStyleHooks(['Badge', 'Ribbon'], function (token) {\n  var badgeToken = prepareToken(token);\n  return genRibbonStyle(badgeToken);\n}, prepareComponentToken);","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/badge/style/ribbon.js"],"names":["unit","prepareComponentToken","prepareToken","resetComponent","genPresetColor","genStyleHooks","genRibbonStyle","token","antCls","badgeFontHeight","marginXS","badgeRibbonOffset","calc","ribbonPrefixCls","ribbonWrapperPrefixCls","statusRibbonPreset","colorKey","darkColor","background","color","position","Object","assign","top","padding","paddingXS","colorPrimary","lineHeight","whiteSpace","backgroundColor","borderRadius","borderRadiusSM","badgeTextColor","width","height","border","div","equal","transform","badgeRibbonCornerTransform","transformOrigin","filter","badgeRibbonCornerFilter","insetInlineEnd","mul","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","insetInlineStart","borderEndStartRadius","borderInlineStartColor","direction","badgeToken"],"mappings":"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","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { resetComponent } from '../../style';\nimport { genPresetColor, genStyleHooks } from '../../theme/internal';\n// ============================== Ribbon ==============================\nconst genRibbonStyle = token => {\n  const {\n    antCls,\n    badgeFontHeight,\n    marginXS,\n    badgeRibbonOffset,\n    calc\n  } = token;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusRibbonPreset = genPresetColor(token, (colorKey, {\n    darkColor\n  }) => ({\n    [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n      background: darkColor,\n      color: darkColor\n    }\n  }));\n  return {\n    [ribbonWrapperPrefixCls]: {\n      position: 'relative'\n    },\n    [ribbonPrefixCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${unit(token.paddingXS)}`,\n      color: token.colorPrimary,\n      lineHeight: unit(badgeFontHeight),\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.badgeTextColor\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${unit(calc(badgeRibbonOffset).div(2).equal())} solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks(['Badge', 'Ribbon'], token => {\n  const badgeToken = prepareToken(token);\n  return genRibbonStyle(badgeToken);\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}