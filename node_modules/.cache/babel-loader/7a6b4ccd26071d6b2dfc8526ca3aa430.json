{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useMemo } from 'react';\nimport { ColorBlock, Color as RcColor } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport { useToken } from '../../theme/internal';\nimport { generateColor } from '../util';\n\nvar genPresetColor = function genPresetColor(list) {\n  return list.map(function (value) {\n    value.colors = value.colors.map(generateColor);\n    return value;\n  });\n};\n\nexport var isBright = function isBright(value, bgColorToken) {\n  var _value$toRgb = value.toRgb(),\n      r = _value$toRgb.r,\n      g = _value$toRgb.g,\n      b = _value$toRgb.b,\n      a = _value$toRgb.a;\n\n  var hsv = new RcColor(value.toRgbString()).onBackground(bgColorToken).toHsv();\n\n  if (a <= 0.5) {\n    // Adapted to dark mode\n    return hsv.v > 0.5;\n  }\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\n\nvar genCollapsePanelKey = function genCollapsePanelKey(preset, index) {\n  var _a;\n\n  var mergedKey = (_a = preset.key) !== null && _a !== void 0 ? _a : index;\n  return \"panel-\".concat(mergedKey);\n};\n\nvar ColorPresets = function ColorPresets(_ref) {\n  var prefixCls = _ref.prefixCls,\n      presets = _ref.presets,\n      color = _ref.value,\n      onChange = _ref.onChange;\n\n  var _useLocale = useLocale('ColorPicker'),\n      _useLocale2 = _slicedToArray(_useLocale, 1),\n      locale = _useLocale2[0];\n\n  var _useToken = useToken(),\n      _useToken2 = _slicedToArray(_useToken, 2),\n      token = _useToken2[1];\n\n  var _useMergedState = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 1),\n      presetsValue = _useMergedState2[0];\n\n  var colorPresetsPrefixCls = \"\".concat(prefixCls, \"-presets\");\n  var activeKeys = useMemo(function () {\n    return presetsValue.reduce(function (acc, preset, index) {\n      var _preset$defaultOpen = preset.defaultOpen,\n          defaultOpen = _preset$defaultOpen === void 0 ? true : _preset$defaultOpen;\n\n      if (defaultOpen) {\n        acc.push(genCollapsePanelKey(preset, index));\n      }\n\n      return acc;\n    }, []);\n  }, [presetsValue]);\n\n  var handleClick = function handleClick(colorValue) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n\n  var items = presetsValue.map(function (preset, index) {\n    var _a;\n\n    return {\n      key: genCollapsePanelKey(preset, index),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(colorPresetsPrefixCls, \"-label\")\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      children: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(colorPresetsPrefixCls, \"-items\")\n      }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map(function (presetColor, index) {\n        var _classNames;\n\n        return /*#__PURE__*/React.createElement(ColorBlock // eslint-disable-next-line react/no-array-index-key\n        , {\n          // eslint-disable-next-line react/no-array-index-key\n          key: \"preset-\".concat(index, \"-\").concat(presetColor.toHexString()),\n          color: generateColor(presetColor).toRgbString(),\n          prefixCls: prefixCls,\n          className: classNames(\"\".concat(colorPresetsPrefixCls, \"-color\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(colorPresetsPrefixCls, \"-color-checked\"), presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString())), _defineProperty(_classNames, \"\".concat(colorPresetsPrefixCls, \"-color-bright\"), isBright(presetColor, token.colorBgElevated)), _classNames)),\n          onClick: function onClick() {\n            return handleClick(presetColor);\n          }\n        });\n      }) : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(colorPresetsPrefixCls, \"-empty\")\n      }, locale.presetEmpty))\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPresetsPrefixCls\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: activeKeys,\n    ghost: true,\n    items: items\n  }));\n};\n\nexport default ColorPresets;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/color-picker/components/ColorPresets.js"],"names":["React","useMemo","ColorBlock","Color","RcColor","classNames","useMergedState","Collapse","useLocale","useToken","generateColor","genPresetColor","list","map","value","colors","isBright","bgColorToken","toRgb","r","g","b","a","hsv","toRgbString","onBackground","toHsv","v","genCollapsePanelKey","preset","index","_a","mergedKey","key","ColorPresets","prefixCls","presets","color","onChange","locale","token","postState","presetsValue","colorPresetsPrefixCls","activeKeys","reduce","acc","defaultOpen","push","handleClick","colorValue","items","label","createElement","className","children","Array","isArray","length","presetColor","toHexString","colorBgElevated","onClick","presetEmpty","defaultActiveKey","ghost"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { useMemo } from 'react';\nimport { ColorBlock, Color as RcColor } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport { useToken } from '../../theme/internal';\nimport { generateColor } from '../util';\nconst genPresetColor = list => list.map(value => {\n  value.colors = value.colors.map(generateColor);\n  return value;\n});\nexport const isBright = (value, bgColorToken) => {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = value.toRgb();\n  const hsv = new RcColor(value.toRgbString()).onBackground(bgColorToken).toHsv();\n  if (a <= 0.5) {\n    // Adapted to dark mode\n    return hsv.v > 0.5;\n  }\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\nconst genCollapsePanelKey = (preset, index) => {\n  var _a;\n  const mergedKey = (_a = preset.key) !== null && _a !== void 0 ? _a : index;\n  return `panel-${mergedKey}`;\n};\nconst ColorPresets = ({\n  prefixCls,\n  presets,\n  value: color,\n  onChange\n}) => {\n  const [locale] = useLocale('ColorPicker');\n  const [, token] = useToken();\n  const [presetsValue] = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  });\n  const colorPresetsPrefixCls = `${prefixCls}-presets`;\n  const activeKeys = useMemo(() => presetsValue.reduce((acc, preset, index) => {\n    const {\n      defaultOpen = true\n    } = preset;\n    if (defaultOpen) {\n      acc.push(genCollapsePanelKey(preset, index));\n    }\n    return acc;\n  }, []), [presetsValue]);\n  const handleClick = colorValue => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n  const items = presetsValue.map((preset, index) => {\n    var _a;\n    return {\n      key: genCollapsePanelKey(preset, index),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-label`\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      children: (/*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-items`\n      }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map((presetColor, index) => (/*#__PURE__*/React.createElement(ColorBlock\n      // eslint-disable-next-line react/no-array-index-key\n      , {\n        // eslint-disable-next-line react/no-array-index-key\n        key: `preset-${index}-${presetColor.toHexString()}`,\n        color: generateColor(presetColor).toRgbString(),\n        prefixCls: prefixCls,\n        className: classNames(`${colorPresetsPrefixCls}-color`, {\n          [`${colorPresetsPrefixCls}-color-checked`]: presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString()),\n          [`${colorPresetsPrefixCls}-color-bright`]: isBright(presetColor, token.colorBgElevated)\n        }),\n        onClick: () => handleClick(presetColor)\n      }))) : (/*#__PURE__*/React.createElement(\"span\", {\n        className: `${colorPresetsPrefixCls}-empty`\n      }, locale.presetEmpty))))\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPresetsPrefixCls\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: activeKeys,\n    ghost: true,\n    items: items\n  }));\n};\nexport default ColorPresets;"]},"metadata":{},"sourceType":"module"}