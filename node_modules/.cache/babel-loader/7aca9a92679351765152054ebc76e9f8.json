{"ast":null,"code":"import _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { initComponentToken, initInputToken } from './token'; // =============================== OTP ================================\n\nvar genOTPStyle = function genOTPStyle(token) {\n  var _$concat, _componentCls;\n\n  var componentCls = token.componentCls,\n      paddingXS = token.paddingXS;\n  return _defineProperty({}, componentCls, (_componentCls = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    flexWrap: 'nowrap',\n    columnGap: paddingXS\n  }, _defineProperty(_componentCls, \"\".concat(componentCls, \"-input-wrapper\"), (_$concat = {\n    position: 'relative'\n  }, _defineProperty(_$concat, \"\".concat(componentCls, \"-mask-icon\"), {\n    position: 'absolute',\n    zIndex: '1',\n    top: '50%',\n    right: '50%',\n    transform: 'translate(50%, -50%)',\n    pointerEvents: 'none'\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-mask-input\"), {\n    color: 'transparent',\n    caretColor: 'var(--ant-color-text)'\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-mask-input[type=number]::-webkit-inner-spin-button\"), {\n    '-webkit-appearance': 'none',\n    margin: 0\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-mask-input[type=number]\"), {\n    '-moz-appearance': 'textfield'\n  }), _$concat)), _defineProperty(_componentCls, '&-rtl', {\n    direction: 'rtl'\n  }), _defineProperty(_componentCls, \"\".concat(componentCls, \"-input\"), {\n    textAlign: 'center',\n    paddingInline: token.paddingXXS\n  }), _defineProperty(_componentCls, \"&\".concat(componentCls, \"-sm \").concat(componentCls, \"-input\"), {\n    paddingInline: token.calc(token.paddingXXS).div(2).equal()\n  }), _defineProperty(_componentCls, \"&\".concat(componentCls, \"-lg \").concat(componentCls, \"-input\"), {\n    paddingInline: token.paddingXS\n  }), _componentCls));\n}; // ============================== Export ==============================\n\n\nexport default genStyleHooks(['Input', 'OTP'], function (token) {\n  var inputToken = mergeToken(token, initInputToken(token));\n  return [genOTPStyle(inputToken)];\n}, initComponentToken);","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/input/style/otp.js"],"names":["genStyleHooks","mergeToken","initComponentToken","initInputToken","genOTPStyle","token","componentCls","paddingXS","display","alignItems","flexWrap","columnGap","position","zIndex","top","right","transform","pointerEvents","color","caretColor","margin","direction","textAlign","paddingInline","paddingXXS","calc","div","equal","inputToken"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,sBAA1C;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,SAAnD,C,CACA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA;;AAC3B,MACEC,YADF,GAGID,KAHJ,CACEC,YADF;AAAA,MAEEC,SAFF,GAGIF,KAHJ,CAEEE,SAFF;AAIA,6BACGD,YADH;AAEIE,IAAAA,OAAO,EAAE,aAFb;AAGIC,IAAAA,UAAU,EAAE,QAHhB;AAIIC,IAAAA,QAAQ,EAAE,QAJd;AAKIC,IAAAA,SAAS,EAAEJ;AALf,8CAMQD,YANR;AAOMM,IAAAA,QAAQ,EAAE;AAPhB,yCAQUN,YARV,iBAQqC;AAC7BM,IAAAA,QAAQ,EAAE,UADmB;AAE7BC,IAAAA,MAAM,EAAE,GAFqB;AAG7BC,IAAAA,GAAG,EAAE,KAHwB;AAI7BC,IAAAA,KAAK,EAAE,KAJsB;AAK7BC,IAAAA,SAAS,EAAE,sBALkB;AAM7BC,IAAAA,aAAa,EAAE;AANc,GARrC,uCAgBUX,YAhBV,kBAgBsC;AAC9BY,IAAAA,KAAK,EAAE,aADuB;AAE9BC,IAAAA,UAAU,EAAE;AAFkB,GAhBtC,uCAoBUb,YApBV,0DAoB8E;AACtE,0BAAsB,MADgD;AAEtEc,IAAAA,MAAM,EAAE;AAF8D,GApB9E,uCAwBUd,YAxBV,+BAwBmD;AAC3C,uBAAmB;AADwB,GAxBnD,8CA4BI,OA5BJ,EA4Ba;AACPe,IAAAA,SAAS,EAAE;AADJ,GA5Bb,4CA+BQf,YA/BR,aA+B+B;AACzBgB,IAAAA,SAAS,EAAE,QADc;AAEzBC,IAAAA,aAAa,EAAElB,KAAK,CAACmB;AAFI,GA/B/B,6CAoCSlB,YApCT,iBAoC4BA,YApC5B,aAoCmD;AAC7CiB,IAAAA,aAAa,EAAElB,KAAK,CAACoB,IAAN,CAAWpB,KAAK,CAACmB,UAAjB,EAA6BE,GAA7B,CAAiC,CAAjC,EAAoCC,KAApC;AAD8B,GApCnD,6CAuCSrB,YAvCT,iBAuC4BA,YAvC5B,aAuCmD;AAC7CiB,IAAAA,aAAa,EAAElB,KAAK,CAACE;AADwB,GAvCnD;AA4CD,CAjDD,C,CAkDA;;;AACA,eAAeP,aAAa,CAAC,CAAC,OAAD,EAAU,KAAV,CAAD,EAAmB,UAAAK,KAAK,EAAI;AACtD,MAAMuB,UAAU,GAAG3B,UAAU,CAACI,KAAD,EAAQF,cAAc,CAACE,KAAD,CAAtB,CAA7B;AACA,SAAO,CAACD,WAAW,CAACwB,UAAD,CAAZ,CAAP;AACD,CAH2B,EAGzB1B,kBAHyB,CAA5B","sourcesContent":["import { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { initComponentToken, initInputToken } from './token';\n// =============================== OTP ================================\nconst genOTPStyle = token => {\n  const {\n    componentCls,\n    paddingXS\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      flexWrap: 'nowrap',\n      columnGap: paddingXS,\n      [`${componentCls}-input-wrapper`]: {\n        position: 'relative',\n        [`${componentCls}-mask-icon`]: {\n          position: 'absolute',\n          zIndex: '1',\n          top: '50%',\n          right: '50%',\n          transform: 'translate(50%, -50%)',\n          pointerEvents: 'none'\n        },\n        [`${componentCls}-mask-input`]: {\n          color: 'transparent',\n          caretColor: 'var(--ant-color-text)'\n        },\n        [`${componentCls}-mask-input[type=number]::-webkit-inner-spin-button`]: {\n          '-webkit-appearance': 'none',\n          margin: 0\n        },\n        [`${componentCls}-mask-input[type=number]`]: {\n          '-moz-appearance': 'textfield'\n        }\n      },\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${componentCls}-input`]: {\n        textAlign: 'center',\n        paddingInline: token.paddingXXS\n      },\n      // ================= Size =================\n      [`&${componentCls}-sm ${componentCls}-input`]: {\n        paddingInline: token.calc(token.paddingXXS).div(2).equal()\n      },\n      [`&${componentCls}-lg ${componentCls}-input`]: {\n        paddingInline: token.paddingXS\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks(['Input', 'OTP'], token => {\n  const inputToken = mergeToken(token, initInputToken(token));\n  return [genOTPStyle(inputToken)];\n}, initComponentToken);"]},"metadata":{},"sourceType":"module"}