{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nvar viewSize = 100;\nvar borderWidth = viewSize / 5;\nvar radius = viewSize / 2 - borderWidth / 2;\nvar circumference = radius * 2 * Math.PI;\nvar position = 50;\n\nvar CustomCircle = function CustomCircle(props) {\n  var dotClassName = props.dotClassName,\n      style = props.style,\n      hasCircleCls = props.hasCircleCls;\n  return /*#__PURE__*/React.createElement(\"circle\", {\n    className: classNames(\"\".concat(dotClassName, \"-circle\"), _defineProperty({}, \"\".concat(dotClassName, \"-circle-bg\"), hasCircleCls)),\n    r: radius,\n    cx: position,\n    cy: position,\n    strokeWidth: borderWidth,\n    style: style\n  });\n};\n\nvar Progress = function Progress(_ref) {\n  var percent = _ref.percent,\n      prefixCls = _ref.prefixCls;\n  var dotClassName = \"\".concat(prefixCls, \"-dot\");\n  var holderClassName = \"\".concat(dotClassName, \"-holder\");\n  var hideClassName = \"\".concat(holderClassName, \"-hidden\");\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      render = _React$useState2[0],\n      setRender = _React$useState2[1]; // ==================== Visible =====================\n\n\n  useLayoutEffect(function () {\n    if (percent !== 0) {\n      setRender(true);\n    }\n  }, [percent !== 0]); // ==================== Progress ====================\n\n  var safePtg = Math.max(Math.min(percent, 100), 0); // ===================== Render =====================\n\n  if (!render) {\n    return null;\n  }\n\n  var circleStyle = {\n    strokeDashoffset: \"\".concat(circumference / 4),\n    strokeDasharray: \"\".concat(circumference * safePtg / 100, \" \").concat(circumference * (100 - safePtg) / 100)\n  };\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(holderClassName, \"\".concat(dotClassName, \"-progress\"), safePtg <= 0 && hideClassName)\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 \".concat(viewSize, \" \").concat(viewSize),\n    // biome-ignore lint/a11y/noNoninteractiveElementToInteractiveRole: progressbar could be readonly\n    role: \"progressbar\",\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100,\n    \"aria-valuenow\": safePtg\n  }, /*#__PURE__*/React.createElement(CustomCircle, {\n    dotClassName: dotClassName,\n    hasCircleCls: true\n  }), /*#__PURE__*/React.createElement(CustomCircle, {\n    dotClassName: dotClassName,\n    style: circleStyle\n  })));\n};\n\nexport default Progress;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/spin/Indicator/Progress.js"],"names":["React","classNames","useLayoutEffect","viewSize","borderWidth","radius","circumference","Math","PI","position","CustomCircle","props","dotClassName","style","hasCircleCls","createElement","className","r","cx","cy","strokeWidth","Progress","percent","prefixCls","holderClassName","hideClassName","useState","render","setRender","safePtg","max","min","circleStyle","strokeDashoffset","strokeDasharray","viewBox","role"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nconst viewSize = 100;\nconst borderWidth = viewSize / 5;\nconst radius = viewSize / 2 - borderWidth / 2;\nconst circumference = radius * 2 * Math.PI;\nconst position = 50;\nconst CustomCircle = props => {\n  const {\n    dotClassName,\n    style,\n    hasCircleCls\n  } = props;\n  return /*#__PURE__*/React.createElement(\"circle\", {\n    className: classNames(`${dotClassName}-circle`, {\n      [`${dotClassName}-circle-bg`]: hasCircleCls\n    }),\n    r: radius,\n    cx: position,\n    cy: position,\n    strokeWidth: borderWidth,\n    style: style\n  });\n};\nconst Progress = ({\n  percent,\n  prefixCls\n}) => {\n  const dotClassName = `${prefixCls}-dot`;\n  const holderClassName = `${dotClassName}-holder`;\n  const hideClassName = `${holderClassName}-hidden`;\n  const [render, setRender] = React.useState(false);\n  // ==================== Visible =====================\n  useLayoutEffect(() => {\n    if (percent !== 0) {\n      setRender(true);\n    }\n  }, [percent !== 0]);\n  // ==================== Progress ====================\n  const safePtg = Math.max(Math.min(percent, 100), 0);\n  // ===================== Render =====================\n  if (!render) {\n    return null;\n  }\n  const circleStyle = {\n    strokeDashoffset: `${circumference / 4}`,\n    strokeDasharray: `${circumference * safePtg / 100} ${circumference * (100 - safePtg) / 100}`\n  };\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(holderClassName, `${dotClassName}-progress`, safePtg <= 0 && hideClassName)\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: `0 0 ${viewSize} ${viewSize}`,\n    // biome-ignore lint/a11y/noNoninteractiveElementToInteractiveRole: progressbar could be readonly\n    role: \"progressbar\",\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100,\n    \"aria-valuenow\": safePtg\n  }, /*#__PURE__*/React.createElement(CustomCircle, {\n    dotClassName: dotClassName,\n    hasCircleCls: true\n  }), /*#__PURE__*/React.createElement(CustomCircle, {\n    dotClassName: dotClassName,\n    style: circleStyle\n  })));\n};\nexport default Progress;"]},"metadata":{},"sourceType":"module"}