{"ast":null,"code":"import _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genSpaceCompactStyle from './compact';\n\nvar genSpaceStyle = function genSpaceStyle(token) {\n  var _componentCls;\n\n  var componentCls = token.componentCls,\n      antCls = token.antCls;\n  return _defineProperty({}, componentCls, (_componentCls = {\n    display: 'inline-flex',\n    '&-rtl': {\n      direction: 'rtl'\n    },\n    '&-vertical': {\n      flexDirection: 'column'\n    },\n    '&-align': {\n      flexDirection: 'column',\n      '&-center': {\n        alignItems: 'center'\n      },\n      '&-start': {\n        alignItems: 'flex-start'\n      },\n      '&-end': {\n        alignItems: 'flex-end'\n      },\n      '&-baseline': {\n        alignItems: 'baseline'\n      }\n    }\n  }, _defineProperty(_componentCls, \"\".concat(componentCls, \"-item:empty\"), {\n    display: 'none'\n  }), _defineProperty(_componentCls, \"\".concat(componentCls, \"-item > \").concat(antCls, \"-badge-not-a-wrapper:only-child\"), {\n    display: 'block'\n  }), _componentCls));\n};\n\nvar genSpaceGapStyle = function genSpaceGapStyle(token) {\n  var componentCls = token.componentCls;\n  return _defineProperty({}, componentCls, {\n    '&-gap-row-small': {\n      rowGap: token.spaceGapSmallSize\n    },\n    '&-gap-row-middle': {\n      rowGap: token.spaceGapMiddleSize\n    },\n    '&-gap-row-large': {\n      rowGap: token.spaceGapLargeSize\n    },\n    '&-gap-col-small': {\n      columnGap: token.spaceGapSmallSize\n    },\n    '&-gap-col-middle': {\n      columnGap: token.spaceGapMiddleSize\n    },\n    '&-gap-col-large': {\n      columnGap: token.spaceGapLargeSize\n    }\n  });\n}; // ============================== Export ==============================\n\n\nexport var prepareComponentToken = function prepareComponentToken() {\n  return {};\n};\nexport default genStyleHooks('Space', function (token) {\n  var spaceToken = mergeToken(token, {\n    spaceGapSmallSize: token.paddingXS,\n    spaceGapMiddleSize: token.padding,\n    spaceGapLargeSize: token.paddingLG\n  });\n  return [genSpaceStyle(spaceToken), genSpaceGapStyle(spaceToken), genSpaceCompactStyle(spaceToken)];\n}, function () {\n  return {};\n}, {\n  // Space component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/40315\n  resetStyle: false\n});","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/space/style/index.js"],"names":["genStyleHooks","mergeToken","genSpaceCompactStyle","genSpaceStyle","token","componentCls","antCls","display","direction","flexDirection","alignItems","genSpaceGapStyle","rowGap","spaceGapSmallSize","spaceGapMiddleSize","spaceGapLargeSize","columnGap","prepareComponentToken","spaceToken","paddingXS","padding","paddingLG","resetStyle"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,sBAA1C;AACA,OAAOC,oBAAP,MAAiC,WAAjC;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA;;AAC7B,MACEC,YADF,GAGID,KAHJ,CACEC,YADF;AAAA,MAEEC,MAFF,GAGIF,KAHJ,CAEEE,MAFF;AAIA,6BACGD,YADH;AAEIE,IAAAA,OAAO,EAAE,aAFb;AAGI,aAAS;AACPC,MAAAA,SAAS,EAAE;AADJ,KAHb;AAMI,kBAAc;AACZC,MAAAA,aAAa,EAAE;AADH,KANlB;AASI,eAAW;AACTA,MAAAA,aAAa,EAAE,QADN;AAET,kBAAY;AACVC,QAAAA,UAAU,EAAE;AADF,OAFH;AAKT,iBAAW;AACTA,QAAAA,UAAU,EAAE;AADH,OALF;AAQT,eAAS;AACPA,QAAAA,UAAU,EAAE;AADL,OARA;AAWT,oBAAc;AACZA,QAAAA,UAAU,EAAE;AADA;AAXL;AATf,8CAwBQL,YAxBR,kBAwBoC;AAC9BE,IAAAA,OAAO,EAAE;AADqB,GAxBpC,4CA4BQF,YA5BR,qBA4B+BC,MA5B/B,sCA4ByE;AACnEC,IAAAA,OAAO,EAAE;AAD0D,GA5BzE;AAiCD,CAtCD;;AAuCA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAP,KAAK,EAAI;AAChC,MACEC,YADF,GAEID,KAFJ,CACEC,YADF;AAGA,6BACGA,YADH,EACkB;AACd,uBAAmB;AACjBO,MAAAA,MAAM,EAAER,KAAK,CAACS;AADG,KADL;AAId,wBAAoB;AAClBD,MAAAA,MAAM,EAAER,KAAK,CAACU;AADI,KAJN;AAOd,uBAAmB;AACjBF,MAAAA,MAAM,EAAER,KAAK,CAACW;AADG,KAPL;AAUd,uBAAmB;AACjBC,MAAAA,SAAS,EAAEZ,KAAK,CAACS;AADA,KAVL;AAad,wBAAoB;AAClBG,MAAAA,SAAS,EAAEZ,KAAK,CAACU;AADC,KAbN;AAgBd,uBAAmB;AACjBE,MAAAA,SAAS,EAAEZ,KAAK,CAACW;AADA;AAhBL,GADlB;AAsBD,CA1BD,C,CA2BA;;;AACA,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAO,EAAP;AAAA,CAA9B;AACP,eAAejB,aAAa,CAAC,OAAD,EAAU,UAAAI,KAAK,EAAI;AAC7C,MAAMc,UAAU,GAAGjB,UAAU,CAACG,KAAD,EAAQ;AACnCS,IAAAA,iBAAiB,EAAET,KAAK,CAACe,SADU;AAEnCL,IAAAA,kBAAkB,EAAEV,KAAK,CAACgB,OAFS;AAGnCL,IAAAA,iBAAiB,EAAEX,KAAK,CAACiB;AAHU,GAAR,CAA7B;AAKA,SAAO,CAAClB,aAAa,CAACe,UAAD,CAAd,EAA4BP,gBAAgB,CAACO,UAAD,CAA5C,EAA0DhB,oBAAoB,CAACgB,UAAD,CAA9E,CAAP;AACD,CAP2B,EAOzB;AAAA,SAAO,EAAP;AAAA,CAPyB,EAOb;AACb;AACA;AACAI,EAAAA,UAAU,EAAE;AAHC,CAPa,CAA5B","sourcesContent":["import { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genSpaceCompactStyle from './compact';\nconst genSpaceStyle = token => {\n  const {\n    componentCls,\n    antCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-align': {\n        flexDirection: 'column',\n        '&-center': {\n          alignItems: 'center'\n        },\n        '&-start': {\n          alignItems: 'flex-start'\n        },\n        '&-end': {\n          alignItems: 'flex-end'\n        },\n        '&-baseline': {\n          alignItems: 'baseline'\n        }\n      },\n      [`${componentCls}-item:empty`]: {\n        display: 'none'\n      },\n      // https://github.com/ant-design/ant-design/issues/47875\n      [`${componentCls}-item > ${antCls}-badge-not-a-wrapper:only-child`]: {\n        display: 'block'\n      }\n    }\n  };\n};\nconst genSpaceGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-row-small': {\n        rowGap: token.spaceGapSmallSize\n      },\n      '&-gap-row-middle': {\n        rowGap: token.spaceGapMiddleSize\n      },\n      '&-gap-row-large': {\n        rowGap: token.spaceGapLargeSize\n      },\n      '&-gap-col-small': {\n        columnGap: token.spaceGapSmallSize\n      },\n      '&-gap-col-middle': {\n        columnGap: token.spaceGapMiddleSize\n      },\n      '&-gap-col-large': {\n        columnGap: token.spaceGapLargeSize\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = () => ({});\nexport default genStyleHooks('Space', token => {\n  const spaceToken = mergeToken(token, {\n    spaceGapSmallSize: token.paddingXS,\n    spaceGapMiddleSize: token.padding,\n    spaceGapLargeSize: token.paddingLG\n  });\n  return [genSpaceStyle(spaceToken), genSpaceGapStyle(spaceToken), genSpaceCompactStyle(spaceToken)];\n}, () => ({}), {\n  // Space component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/40315\n  resetStyle: false\n});"]},"metadata":{},"sourceType":"module"}