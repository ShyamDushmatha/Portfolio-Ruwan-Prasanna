{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport CaretDownOutlined from \"@ant-design/icons/es/icons/CaretDownOutlined\";\nimport CaretUpOutlined from \"@ant-design/icons/es/icons/CaretUpOutlined\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport Tooltip from '../../tooltip';\nimport { getColumnKey, getColumnPos, renderColumnTitle, safeColumnTitle } from '../util';\nvar ASCEND = 'ascend';\nvar DESCEND = 'descend';\n\nvar getMultiplePriority = function getMultiplePriority(column) {\n  if (typeof column.sorter === 'object' && typeof column.sorter.multiple === 'number') {\n    return column.sorter.multiple;\n  }\n\n  return false;\n};\n\nvar getSortFunction = function getSortFunction(sorter) {\n  if (typeof sorter === 'function') {\n    return sorter;\n  }\n\n  if (sorter && typeof sorter === 'object' && sorter.compare) {\n    return sorter.compare;\n  }\n\n  return false;\n};\n\nvar nextSortDirection = function nextSortDirection(sortDirections, current) {\n  if (!current) {\n    return sortDirections[0];\n  }\n\n  return sortDirections[sortDirections.indexOf(current) + 1];\n};\n\nvar collectSortStates = function collectSortStates(columns, init, pos) {\n  var sortStates = [];\n\n  var pushState = function pushState(column, columnPos) {\n    sortStates.push({\n      column: column,\n      key: getColumnKey(column, columnPos),\n      multiplePriority: getMultiplePriority(column),\n      sortOrder: column.sortOrder\n    });\n  };\n\n  (columns || []).forEach(function (column, index) {\n    var columnPos = getColumnPos(index, pos);\n\n    if (column.children) {\n      if ('sortOrder' in column) {\n        // Controlled\n        pushState(column, columnPos);\n      }\n\n      sortStates = [].concat(_toConsumableArray(sortStates), _toConsumableArray(collectSortStates(column.children, init, columnPos)));\n    } else if (column.sorter) {\n      if ('sortOrder' in column) {\n        // Controlled\n        pushState(column, columnPos);\n      } else if (init && column.defaultSortOrder) {\n        // Default sorter\n        sortStates.push({\n          column: column,\n          key: getColumnKey(column, columnPos),\n          multiplePriority: getMultiplePriority(column),\n          sortOrder: column.defaultSortOrder\n        });\n      }\n    }\n  });\n  return sortStates;\n};\n\nvar injectSorter = function injectSorter(prefixCls, columns, sorterStates, triggerSorter, defaultSortDirections, tableLocale, tableShowSorterTooltip, pos) {\n  var finalColumns = (columns || []).map(function (column, index) {\n    var columnPos = getColumnPos(index, pos);\n    var newColumn = column;\n\n    if (newColumn.sorter) {\n      var sortDirections = newColumn.sortDirections || defaultSortDirections;\n      var showSorterTooltip = newColumn.showSorterTooltip === undefined ? tableShowSorterTooltip : newColumn.showSorterTooltip;\n      var columnKey = getColumnKey(newColumn, columnPos);\n      var sorterState = sorterStates.find(function (_ref) {\n        var key = _ref.key;\n        return key === columnKey;\n      });\n      var sortOrder = sorterState ? sorterState.sortOrder : null;\n      var nextSortOrder = nextSortDirection(sortDirections, sortOrder);\n      var sorter;\n\n      if (column.sortIcon) {\n        sorter = column.sortIcon({\n          sortOrder: sortOrder\n        });\n      } else {\n        var upNode = sortDirections.includes(ASCEND) && /*#__PURE__*/React.createElement(CaretUpOutlined, {\n          className: classNames(\"\".concat(prefixCls, \"-column-sorter-up\"), {\n            active: sortOrder === ASCEND\n          })\n        });\n        var downNode = sortDirections.includes(DESCEND) && /*#__PURE__*/React.createElement(CaretDownOutlined, {\n          className: classNames(\"\".concat(prefixCls, \"-column-sorter-down\"), {\n            active: sortOrder === DESCEND\n          })\n        });\n        sorter = /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(\"\".concat(prefixCls, \"-column-sorter\"), _defineProperty({}, \"\".concat(prefixCls, \"-column-sorter-full\"), !!(upNode && downNode)))\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-column-sorter-inner\"),\n          \"aria-hidden\": \"true\"\n        }, upNode, downNode));\n      }\n\n      var _ref2 = tableLocale || {},\n          cancelSort = _ref2.cancelSort,\n          triggerAsc = _ref2.triggerAsc,\n          triggerDesc = _ref2.triggerDesc;\n\n      var sortTip = cancelSort;\n\n      if (nextSortOrder === DESCEND) {\n        sortTip = triggerDesc;\n      } else if (nextSortOrder === ASCEND) {\n        sortTip = triggerAsc;\n      }\n\n      var tooltipProps = typeof showSorterTooltip === 'object' ? Object.assign({\n        title: sortTip\n      }, showSorterTooltip) : {\n        title: sortTip\n      };\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        className: classNames(newColumn.className, _defineProperty({}, \"\".concat(prefixCls, \"-column-sort\"), sortOrder)),\n        title: function title(renderProps) {\n          var columnSortersClass = \"\".concat(prefixCls, \"-column-sorters\");\n          var renderColumnTitleWrapper = /*#__PURE__*/React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-column-title\")\n          }, renderColumnTitle(column.title, renderProps));\n          var renderSortTitle = /*#__PURE__*/React.createElement(\"div\", {\n            className: columnSortersClass\n          }, renderColumnTitleWrapper, sorter);\n\n          if (showSorterTooltip) {\n            if (typeof showSorterTooltip !== 'boolean' && (showSorterTooltip === null || showSorterTooltip === void 0 ? void 0 : showSorterTooltip.target) === 'sorter-icon') {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: \"\".concat(columnSortersClass, \" \").concat(prefixCls, \"-column-sorters-tooltip-target-sorter\")\n              }, renderColumnTitleWrapper, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps), sorter));\n            }\n\n            return /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps), renderSortTitle);\n          }\n\n          return renderSortTitle;\n        },\n        onHeaderCell: function onHeaderCell(col) {\n          var _a;\n\n          var cell = ((_a = column.onHeaderCell) === null || _a === void 0 ? void 0 : _a.call(column, col)) || {};\n          var originOnClick = cell.onClick;\n          var originOKeyDown = cell.onKeyDown;\n\n          cell.onClick = function (event) {\n            triggerSorter({\n              column: column,\n              key: columnKey,\n              sortOrder: nextSortOrder,\n              multiplePriority: getMultiplePriority(column)\n            });\n            originOnClick === null || originOnClick === void 0 ? void 0 : originOnClick(event);\n          };\n\n          cell.onKeyDown = function (event) {\n            if (event.keyCode === KeyCode.ENTER) {\n              triggerSorter({\n                column: column,\n                key: columnKey,\n                sortOrder: nextSortOrder,\n                multiplePriority: getMultiplePriority(column)\n              });\n              originOKeyDown === null || originOKeyDown === void 0 ? void 0 : originOKeyDown(event);\n            }\n          };\n\n          var renderTitle = safeColumnTitle(column.title, {});\n          var displayTitle = renderTitle === null || renderTitle === void 0 ? void 0 : renderTitle.toString(); // Inform the screen-reader so it can tell the visually impaired user which column is sorted\n\n          if (sortOrder) {\n            cell['aria-sort'] = sortOrder === 'ascend' ? 'ascending' : 'descending';\n          }\n\n          cell['aria-label'] = displayTitle || '';\n          cell.className = classNames(cell.className, \"\".concat(prefixCls, \"-column-has-sorters\"));\n          cell.tabIndex = 0;\n\n          if (column.ellipsis) {\n            cell.title = (renderTitle !== null && renderTitle !== void 0 ? renderTitle : '').toString();\n          }\n\n          return cell;\n        }\n      });\n    }\n\n    if ('children' in newColumn) {\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        children: injectSorter(prefixCls, newColumn.children, sorterStates, triggerSorter, defaultSortDirections, tableLocale, tableShowSorterTooltip, columnPos)\n      });\n    }\n\n    return newColumn;\n  });\n  return finalColumns;\n};\n\nvar stateToInfo = function stateToInfo(sorterState) {\n  var column = sorterState.column,\n      sortOrder = sorterState.sortOrder;\n  return {\n    column: column,\n    order: sortOrder,\n    field: column.dataIndex,\n    columnKey: column.key\n  };\n};\n\nvar generateSorterInfo = function generateSorterInfo(sorterStates) {\n  var activeSorters = sorterStates.filter(function (_ref3) {\n    var sortOrder = _ref3.sortOrder;\n    return sortOrder;\n  }).map(stateToInfo); // =========== Legacy compatible support ===========\n  // https://github.com/ant-design/ant-design/pull/19226\n\n  if (activeSorters.length === 0 && sorterStates.length) {\n    var lastIndex = sorterStates.length - 1;\n    return Object.assign(Object.assign({}, stateToInfo(sorterStates[lastIndex])), {\n      column: undefined,\n      order: undefined,\n      field: undefined,\n      columnKey: undefined\n    });\n  }\n\n  if (activeSorters.length <= 1) {\n    return activeSorters[0] || {};\n  }\n\n  return activeSorters;\n};\n\nexport var getSortData = function getSortData(data, sortStates, childrenColumnName) {\n  var innerSorterStates = sortStates.slice().sort(function (a, b) {\n    return b.multiplePriority - a.multiplePriority;\n  });\n  var cloneData = data.slice();\n  var runningSorters = innerSorterStates.filter(function (_ref4) {\n    var sorter = _ref4.column.sorter,\n        sortOrder = _ref4.sortOrder;\n    return getSortFunction(sorter) && sortOrder;\n  }); // Skip if no sorter needed\n\n  if (!runningSorters.length) {\n    return cloneData;\n  }\n\n  return cloneData.sort(function (record1, record2) {\n    for (var i = 0; i < runningSorters.length; i += 1) {\n      var sorterState = runningSorters[i];\n      var sorter = sorterState.column.sorter,\n          sortOrder = sorterState.sortOrder;\n      var compareFn = getSortFunction(sorter);\n\n      if (compareFn && sortOrder) {\n        var compareResult = compareFn(record1, record2, sortOrder);\n\n        if (compareResult !== 0) {\n          return sortOrder === ASCEND ? compareResult : -compareResult;\n        }\n      }\n    }\n\n    return 0;\n  }).map(function (record) {\n    var subRecords = record[childrenColumnName];\n\n    if (subRecords) {\n      return Object.assign(Object.assign({}, record), _defineProperty({}, childrenColumnName, getSortData(subRecords, sortStates, childrenColumnName)));\n    }\n\n    return record;\n  });\n};\n\nvar useFilterSorter = function useFilterSorter(props) {\n  var prefixCls = props.prefixCls,\n      mergedColumns = props.mergedColumns,\n      sortDirections = props.sortDirections,\n      tableLocale = props.tableLocale,\n      showSorterTooltip = props.showSorterTooltip,\n      onSorterChange = props.onSorterChange;\n\n  var _React$useState = React.useState(function () {\n    return collectSortStates(mergedColumns, true);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sortStates = _React$useState2[0],\n      setSortStates = _React$useState2[1];\n\n  var getColumnKeys = function getColumnKeys(columns, pos) {\n    var newKeys = [];\n    columns.forEach(function (item, index) {\n      var columnPos = getColumnPos(index, pos);\n      newKeys.push(getColumnKey(item, columnPos));\n\n      if (Array.isArray(item.children)) {\n        var childKeys = getColumnKeys(item.children, columnPos);\n        newKeys.push.apply(newKeys, _toConsumableArray(childKeys));\n      }\n    });\n    return newKeys;\n  };\n\n  var mergedSorterStates = React.useMemo(function () {\n    var validate = true;\n    var collectedStates = collectSortStates(mergedColumns, false); // Return if not controlled\n\n    if (!collectedStates.length) {\n      var mergedColumnsKeys = getColumnKeys(mergedColumns);\n      return sortStates.filter(function (_ref5) {\n        var key = _ref5.key;\n        return mergedColumnsKeys.includes(key);\n      });\n    }\n\n    var validateStates = [];\n\n    function patchStates(state) {\n      if (validate) {\n        validateStates.push(state);\n      } else {\n        validateStates.push(Object.assign(Object.assign({}, state), {\n          sortOrder: null\n        }));\n      }\n    }\n\n    var multipleMode = null;\n    collectedStates.forEach(function (state) {\n      if (multipleMode === null) {\n        patchStates(state);\n\n        if (state.sortOrder) {\n          if (state.multiplePriority === false) {\n            validate = false;\n          } else {\n            multipleMode = true;\n          }\n        }\n      } else if (multipleMode && state.multiplePriority !== false) {\n        patchStates(state);\n      } else {\n        validate = false;\n        patchStates(state);\n      }\n    });\n    return validateStates;\n  }, [mergedColumns, sortStates]); // Get render columns title required props\n\n  var columnTitleSorterProps = React.useMemo(function () {\n    var _a, _b;\n\n    var sortColumns = mergedSorterStates.map(function (_ref6) {\n      var column = _ref6.column,\n          sortOrder = _ref6.sortOrder;\n      return {\n        column: column,\n        order: sortOrder\n      };\n    });\n    return {\n      sortColumns: sortColumns,\n      // Legacy\n      sortColumn: (_a = sortColumns[0]) === null || _a === void 0 ? void 0 : _a.column,\n      sortOrder: (_b = sortColumns[0]) === null || _b === void 0 ? void 0 : _b.order\n    };\n  }, [mergedSorterStates]);\n\n  var triggerSorter = function triggerSorter(sortState) {\n    var newSorterStates;\n\n    if (sortState.multiplePriority === false || !mergedSorterStates.length || mergedSorterStates[0].multiplePriority === false) {\n      newSorterStates = [sortState];\n    } else {\n      newSorterStates = [].concat(_toConsumableArray(mergedSorterStates.filter(function (_ref7) {\n        var key = _ref7.key;\n        return key !== sortState.key;\n      })), [sortState]);\n    }\n\n    setSortStates(newSorterStates);\n    onSorterChange(generateSorterInfo(newSorterStates), newSorterStates);\n  };\n\n  var transformColumns = function transformColumns(innerColumns) {\n    return injectSorter(prefixCls, innerColumns, mergedSorterStates, triggerSorter, sortDirections, tableLocale, showSorterTooltip);\n  };\n\n  var getSorters = function getSorters() {\n    return generateSorterInfo(mergedSorterStates);\n  };\n\n  return [transformColumns, mergedSorterStates, columnTitleSorterProps, getSorters];\n};\n\nexport default useFilterSorter;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/table/hooks/useSorter.js"],"names":["_toConsumableArray","React","CaretDownOutlined","CaretUpOutlined","classNames","KeyCode","Tooltip","getColumnKey","getColumnPos","renderColumnTitle","safeColumnTitle","ASCEND","DESCEND","getMultiplePriority","column","sorter","multiple","getSortFunction","compare","nextSortDirection","sortDirections","current","indexOf","collectSortStates","columns","init","pos","sortStates","pushState","columnPos","push","key","multiplePriority","sortOrder","forEach","index","children","concat","defaultSortOrder","injectSorter","prefixCls","sorterStates","triggerSorter","defaultSortDirections","tableLocale","tableShowSorterTooltip","finalColumns","map","newColumn","showSorterTooltip","undefined","columnKey","sorterState","find","nextSortOrder","sortIcon","upNode","includes","createElement","className","active","downNode","cancelSort","triggerAsc","triggerDesc","sortTip","tooltipProps","Object","assign","title","renderProps","columnSortersClass","renderColumnTitleWrapper","renderSortTitle","target","onHeaderCell","col","_a","cell","call","originOnClick","onClick","originOKeyDown","onKeyDown","event","keyCode","ENTER","renderTitle","displayTitle","toString","tabIndex","ellipsis","stateToInfo","order","field","dataIndex","generateSorterInfo","activeSorters","filter","length","lastIndex","getSortData","data","childrenColumnName","innerSorterStates","slice","sort","a","b","cloneData","runningSorters","record1","record2","i","compareFn","compareResult","record","subRecords","useFilterSorter","props","mergedColumns","onSorterChange","useState","setSortStates","getColumnKeys","newKeys","item","Array","isArray","childKeys","apply","mergedSorterStates","useMemo","validate","collectedStates","mergedColumnsKeys","validateStates","patchStates","state","multipleMode","columnTitleSorterProps","_b","sortColumns","sortColumn","sortState","newSorterStates","transformColumns","innerColumns","getSorters"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport CaretDownOutlined from \"@ant-design/icons/es/icons/CaretDownOutlined\";\nimport CaretUpOutlined from \"@ant-design/icons/es/icons/CaretUpOutlined\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport Tooltip from '../../tooltip';\nimport { getColumnKey, getColumnPos, renderColumnTitle, safeColumnTitle } from '../util';\nconst ASCEND = 'ascend';\nconst DESCEND = 'descend';\nconst getMultiplePriority = column => {\n  if (typeof column.sorter === 'object' && typeof column.sorter.multiple === 'number') {\n    return column.sorter.multiple;\n  }\n  return false;\n};\nconst getSortFunction = sorter => {\n  if (typeof sorter === 'function') {\n    return sorter;\n  }\n  if (sorter && typeof sorter === 'object' && sorter.compare) {\n    return sorter.compare;\n  }\n  return false;\n};\nconst nextSortDirection = (sortDirections, current) => {\n  if (!current) {\n    return sortDirections[0];\n  }\n  return sortDirections[sortDirections.indexOf(current) + 1];\n};\nconst collectSortStates = (columns, init, pos) => {\n  let sortStates = [];\n  const pushState = (column, columnPos) => {\n    sortStates.push({\n      column,\n      key: getColumnKey(column, columnPos),\n      multiplePriority: getMultiplePriority(column),\n      sortOrder: column.sortOrder\n    });\n  };\n  (columns || []).forEach((column, index) => {\n    const columnPos = getColumnPos(index, pos);\n    if (column.children) {\n      if ('sortOrder' in column) {\n        // Controlled\n        pushState(column, columnPos);\n      }\n      sortStates = [].concat(_toConsumableArray(sortStates), _toConsumableArray(collectSortStates(column.children, init, columnPos)));\n    } else if (column.sorter) {\n      if ('sortOrder' in column) {\n        // Controlled\n        pushState(column, columnPos);\n      } else if (init && column.defaultSortOrder) {\n        // Default sorter\n        sortStates.push({\n          column,\n          key: getColumnKey(column, columnPos),\n          multiplePriority: getMultiplePriority(column),\n          sortOrder: column.defaultSortOrder\n        });\n      }\n    }\n  });\n  return sortStates;\n};\nconst injectSorter = (prefixCls, columns, sorterStates, triggerSorter, defaultSortDirections, tableLocale, tableShowSorterTooltip, pos) => {\n  const finalColumns = (columns || []).map((column, index) => {\n    const columnPos = getColumnPos(index, pos);\n    let newColumn = column;\n    if (newColumn.sorter) {\n      const sortDirections = newColumn.sortDirections || defaultSortDirections;\n      const showSorterTooltip = newColumn.showSorterTooltip === undefined ? tableShowSorterTooltip : newColumn.showSorterTooltip;\n      const columnKey = getColumnKey(newColumn, columnPos);\n      const sorterState = sorterStates.find(({\n        key\n      }) => key === columnKey);\n      const sortOrder = sorterState ? sorterState.sortOrder : null;\n      const nextSortOrder = nextSortDirection(sortDirections, sortOrder);\n      let sorter;\n      if (column.sortIcon) {\n        sorter = column.sortIcon({\n          sortOrder\n        });\n      } else {\n        const upNode = sortDirections.includes(ASCEND) && (/*#__PURE__*/React.createElement(CaretUpOutlined, {\n          className: classNames(`${prefixCls}-column-sorter-up`, {\n            active: sortOrder === ASCEND\n          })\n        }));\n        const downNode = sortDirections.includes(DESCEND) && (/*#__PURE__*/React.createElement(CaretDownOutlined, {\n          className: classNames(`${prefixCls}-column-sorter-down`, {\n            active: sortOrder === DESCEND\n          })\n        }));\n        sorter = /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(`${prefixCls}-column-sorter`, {\n            [`${prefixCls}-column-sorter-full`]: !!(upNode && downNode)\n          })\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: `${prefixCls}-column-sorter-inner`,\n          \"aria-hidden\": \"true\"\n        }, upNode, downNode));\n      }\n      const {\n        cancelSort,\n        triggerAsc,\n        triggerDesc\n      } = tableLocale || {};\n      let sortTip = cancelSort;\n      if (nextSortOrder === DESCEND) {\n        sortTip = triggerDesc;\n      } else if (nextSortOrder === ASCEND) {\n        sortTip = triggerAsc;\n      }\n      const tooltipProps = typeof showSorterTooltip === 'object' ? Object.assign({\n        title: sortTip\n      }, showSorterTooltip) : {\n        title: sortTip\n      };\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        className: classNames(newColumn.className, {\n          [`${prefixCls}-column-sort`]: sortOrder\n        }),\n        title: renderProps => {\n          const columnSortersClass = `${prefixCls}-column-sorters`;\n          const renderColumnTitleWrapper = /*#__PURE__*/React.createElement(\"span\", {\n            className: `${prefixCls}-column-title`\n          }, renderColumnTitle(column.title, renderProps));\n          const renderSortTitle = /*#__PURE__*/React.createElement(\"div\", {\n            className: columnSortersClass\n          }, renderColumnTitleWrapper, sorter);\n          if (showSorterTooltip) {\n            if (typeof showSorterTooltip !== 'boolean' && (showSorterTooltip === null || showSorterTooltip === void 0 ? void 0 : showSorterTooltip.target) === 'sorter-icon') {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `${columnSortersClass} ${prefixCls}-column-sorters-tooltip-target-sorter`\n              }, renderColumnTitleWrapper, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps), sorter));\n            }\n            return /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps), renderSortTitle);\n          }\n          return renderSortTitle;\n        },\n        onHeaderCell: col => {\n          var _a;\n          const cell = ((_a = column.onHeaderCell) === null || _a === void 0 ? void 0 : _a.call(column, col)) || {};\n          const originOnClick = cell.onClick;\n          const originOKeyDown = cell.onKeyDown;\n          cell.onClick = event => {\n            triggerSorter({\n              column,\n              key: columnKey,\n              sortOrder: nextSortOrder,\n              multiplePriority: getMultiplePriority(column)\n            });\n            originOnClick === null || originOnClick === void 0 ? void 0 : originOnClick(event);\n          };\n          cell.onKeyDown = event => {\n            if (event.keyCode === KeyCode.ENTER) {\n              triggerSorter({\n                column,\n                key: columnKey,\n                sortOrder: nextSortOrder,\n                multiplePriority: getMultiplePriority(column)\n              });\n              originOKeyDown === null || originOKeyDown === void 0 ? void 0 : originOKeyDown(event);\n            }\n          };\n          const renderTitle = safeColumnTitle(column.title, {});\n          const displayTitle = renderTitle === null || renderTitle === void 0 ? void 0 : renderTitle.toString();\n          // Inform the screen-reader so it can tell the visually impaired user which column is sorted\n          if (sortOrder) {\n            cell['aria-sort'] = sortOrder === 'ascend' ? 'ascending' : 'descending';\n          }\n          cell['aria-label'] = displayTitle || '';\n          cell.className = classNames(cell.className, `${prefixCls}-column-has-sorters`);\n          cell.tabIndex = 0;\n          if (column.ellipsis) {\n            cell.title = (renderTitle !== null && renderTitle !== void 0 ? renderTitle : '').toString();\n          }\n          return cell;\n        }\n      });\n    }\n    if ('children' in newColumn) {\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        children: injectSorter(prefixCls, newColumn.children, sorterStates, triggerSorter, defaultSortDirections, tableLocale, tableShowSorterTooltip, columnPos)\n      });\n    }\n    return newColumn;\n  });\n  return finalColumns;\n};\nconst stateToInfo = sorterState => {\n  const {\n    column,\n    sortOrder\n  } = sorterState;\n  return {\n    column,\n    order: sortOrder,\n    field: column.dataIndex,\n    columnKey: column.key\n  };\n};\nconst generateSorterInfo = sorterStates => {\n  const activeSorters = sorterStates.filter(({\n    sortOrder\n  }) => sortOrder).map(stateToInfo);\n  // =========== Legacy compatible support ===========\n  // https://github.com/ant-design/ant-design/pull/19226\n  if (activeSorters.length === 0 && sorterStates.length) {\n    const lastIndex = sorterStates.length - 1;\n    return Object.assign(Object.assign({}, stateToInfo(sorterStates[lastIndex])), {\n      column: undefined,\n      order: undefined,\n      field: undefined,\n      columnKey: undefined\n    });\n  }\n  if (activeSorters.length <= 1) {\n    return activeSorters[0] || {};\n  }\n  return activeSorters;\n};\nexport const getSortData = (data, sortStates, childrenColumnName) => {\n  const innerSorterStates = sortStates.slice().sort((a, b) => b.multiplePriority - a.multiplePriority);\n  const cloneData = data.slice();\n  const runningSorters = innerSorterStates.filter(({\n    column: {\n      sorter\n    },\n    sortOrder\n  }) => getSortFunction(sorter) && sortOrder);\n  // Skip if no sorter needed\n  if (!runningSorters.length) {\n    return cloneData;\n  }\n  return cloneData.sort((record1, record2) => {\n    for (let i = 0; i < runningSorters.length; i += 1) {\n      const sorterState = runningSorters[i];\n      const {\n        column: {\n          sorter\n        },\n        sortOrder\n      } = sorterState;\n      const compareFn = getSortFunction(sorter);\n      if (compareFn && sortOrder) {\n        const compareResult = compareFn(record1, record2, sortOrder);\n        if (compareResult !== 0) {\n          return sortOrder === ASCEND ? compareResult : -compareResult;\n        }\n      }\n    }\n    return 0;\n  }).map(record => {\n    const subRecords = record[childrenColumnName];\n    if (subRecords) {\n      return Object.assign(Object.assign({}, record), {\n        [childrenColumnName]: getSortData(subRecords, sortStates, childrenColumnName)\n      });\n    }\n    return record;\n  });\n};\nconst useFilterSorter = props => {\n  const {\n    prefixCls,\n    mergedColumns,\n    sortDirections,\n    tableLocale,\n    showSorterTooltip,\n    onSorterChange\n  } = props;\n  const [sortStates, setSortStates] = React.useState(() => collectSortStates(mergedColumns, true));\n  const getColumnKeys = (columns, pos) => {\n    const newKeys = [];\n    columns.forEach((item, index) => {\n      const columnPos = getColumnPos(index, pos);\n      newKeys.push(getColumnKey(item, columnPos));\n      if (Array.isArray(item.children)) {\n        const childKeys = getColumnKeys(item.children, columnPos);\n        newKeys.push.apply(newKeys, _toConsumableArray(childKeys));\n      }\n    });\n    return newKeys;\n  };\n  const mergedSorterStates = React.useMemo(() => {\n    let validate = true;\n    const collectedStates = collectSortStates(mergedColumns, false);\n    // Return if not controlled\n    if (!collectedStates.length) {\n      const mergedColumnsKeys = getColumnKeys(mergedColumns);\n      return sortStates.filter(({\n        key\n      }) => mergedColumnsKeys.includes(key));\n    }\n    const validateStates = [];\n    function patchStates(state) {\n      if (validate) {\n        validateStates.push(state);\n      } else {\n        validateStates.push(Object.assign(Object.assign({}, state), {\n          sortOrder: null\n        }));\n      }\n    }\n    let multipleMode = null;\n    collectedStates.forEach(state => {\n      if (multipleMode === null) {\n        patchStates(state);\n        if (state.sortOrder) {\n          if (state.multiplePriority === false) {\n            validate = false;\n          } else {\n            multipleMode = true;\n          }\n        }\n      } else if (multipleMode && state.multiplePriority !== false) {\n        patchStates(state);\n      } else {\n        validate = false;\n        patchStates(state);\n      }\n    });\n    return validateStates;\n  }, [mergedColumns, sortStates]);\n  // Get render columns title required props\n  const columnTitleSorterProps = React.useMemo(() => {\n    var _a, _b;\n    const sortColumns = mergedSorterStates.map(({\n      column,\n      sortOrder\n    }) => ({\n      column,\n      order: sortOrder\n    }));\n    return {\n      sortColumns,\n      // Legacy\n      sortColumn: (_a = sortColumns[0]) === null || _a === void 0 ? void 0 : _a.column,\n      sortOrder: (_b = sortColumns[0]) === null || _b === void 0 ? void 0 : _b.order\n    };\n  }, [mergedSorterStates]);\n  const triggerSorter = sortState => {\n    let newSorterStates;\n    if (sortState.multiplePriority === false || !mergedSorterStates.length || mergedSorterStates[0].multiplePriority === false) {\n      newSorterStates = [sortState];\n    } else {\n      newSorterStates = [].concat(_toConsumableArray(mergedSorterStates.filter(({\n        key\n      }) => key !== sortState.key)), [sortState]);\n    }\n    setSortStates(newSorterStates);\n    onSorterChange(generateSorterInfo(newSorterStates), newSorterStates);\n  };\n  const transformColumns = innerColumns => injectSorter(prefixCls, innerColumns, mergedSorterStates, triggerSorter, sortDirections, tableLocale, showSorterTooltip);\n  const getSorters = () => generateSorterInfo(mergedSorterStates);\n  return [transformColumns, mergedSorterStates, columnTitleSorterProps, getSorters];\n};\nexport default useFilterSorter;"]},"metadata":{},"sourceType":"module"}