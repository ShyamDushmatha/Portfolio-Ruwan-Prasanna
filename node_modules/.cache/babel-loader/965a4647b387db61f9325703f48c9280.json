{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useEffect, useState } from 'react';\nimport Input from '../../input/Input';\nimport { toHexFormat } from '../color';\nimport { generateColor } from '../util';\nvar hexReg = /(^#[\\da-f]{6}$)|(^#[\\da-f]{8}$)/i;\n\nvar isHexString = function isHexString(hex) {\n  return hexReg.test(\"#\".concat(hex));\n};\n\nvar ColorHexInput = function ColorHexInput(_ref) {\n  var prefixCls = _ref.prefixCls,\n      value = _ref.value,\n      onChange = _ref.onChange;\n  var colorHexInputPrefixCls = \"\".concat(prefixCls, \"-hex-input\");\n\n  var _useState = useState(function () {\n    return value ? toHexFormat(value.toHexString()) : undefined;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      hexValue = _useState2[0],\n      setHexValue = _useState2[1]; // Update step value\n\n\n  useEffect(function () {\n    if (value) {\n      setHexValue(toHexFormat(value.toHexString()));\n    }\n  }, [value]);\n\n  var handleHexChange = function handleHexChange(e) {\n    var originValue = e.target.value;\n    setHexValue(toHexFormat(originValue));\n\n    if (isHexString(toHexFormat(originValue, true))) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(generateColor(originValue));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Input, {\n    className: colorHexInputPrefixCls,\n    value: hexValue,\n    prefix: \"#\",\n    onChange: handleHexChange,\n    size: \"small\"\n  });\n};\n\nexport default ColorHexInput;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/color-picker/components/ColorHexInput.js"],"names":["React","useEffect","useState","Input","toHexFormat","generateColor","hexReg","isHexString","hex","test","ColorHexInput","prefixCls","value","onChange","colorHexInputPrefixCls","toHexString","undefined","hexValue","setHexValue","handleHexChange","e","originValue","target","createElement","className","prefix","size"],"mappings":"AAAA;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,IAAMC,MAAM,GAAG,kCAAf;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG;AAAA,SAAIF,MAAM,CAACG,IAAP,YAAgBD,GAAhB,EAAJ;AAAA,CAAvB;;AACA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,OAIhB;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAMC,sBAAsB,aAAMH,SAAN,eAA5B;;AACA,kBAAgCT,QAAQ,CAAC;AAAA,WAAMU,KAAK,GAAGR,WAAW,CAACQ,KAAK,CAACG,WAAN,EAAD,CAAd,GAAsCC,SAAjD;AAAA,GAAD,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB,iBAFI,CAGJ;;;AACAjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,KAAJ,EAAW;AACTM,MAAAA,WAAW,CAACd,WAAW,CAACQ,KAAK,CAACG,WAAN,EAAD,CAAZ,CAAX;AACD;AACF,GAJQ,EAIN,CAACH,KAAD,CAJM,CAAT;;AAKA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAI;AAC3B,QAAMC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAASV,KAA7B;AACAM,IAAAA,WAAW,CAACd,WAAW,CAACiB,WAAD,CAAZ,CAAX;;AACA,QAAId,WAAW,CAACH,WAAW,CAACiB,WAAD,EAAc,IAAd,CAAZ,CAAf,EAAiD;AAC/CR,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACR,aAAa,CAACgB,WAAD,CAAd,CAA5D;AACD;AACF,GAND;;AAOA,SAAO,aAAarB,KAAK,CAACuB,aAAN,CAAoBpB,KAApB,EAA2B;AAC7CqB,IAAAA,SAAS,EAAEV,sBADkC;AAE7CF,IAAAA,KAAK,EAAEK,QAFsC;AAG7CQ,IAAAA,MAAM,EAAE,GAHqC;AAI7CZ,IAAAA,QAAQ,EAAEM,eAJmC;AAK7CO,IAAAA,IAAI,EAAE;AALuC,GAA3B,CAApB;AAOD,CA3BD;;AA4BA,eAAehB,aAAf","sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from 'react';\nimport Input from '../../input/Input';\nimport { toHexFormat } from '../color';\nimport { generateColor } from '../util';\nconst hexReg = /(^#[\\da-f]{6}$)|(^#[\\da-f]{8}$)/i;\nconst isHexString = hex => hexReg.test(`#${hex}`);\nconst ColorHexInput = ({\n  prefixCls,\n  value,\n  onChange\n}) => {\n  const colorHexInputPrefixCls = `${prefixCls}-hex-input`;\n  const [hexValue, setHexValue] = useState(() => value ? toHexFormat(value.toHexString()) : undefined);\n  // Update step value\n  useEffect(() => {\n    if (value) {\n      setHexValue(toHexFormat(value.toHexString()));\n    }\n  }, [value]);\n  const handleHexChange = e => {\n    const originValue = e.target.value;\n    setHexValue(toHexFormat(originValue));\n    if (isHexString(toHexFormat(originValue, true))) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(generateColor(originValue));\n    }\n  };\n  return /*#__PURE__*/React.createElement(Input, {\n    className: colorHexInputPrefixCls,\n    value: hexValue,\n    prefix: \"#\",\n    onChange: handleHexChange,\n    size: \"small\"\n  });\n};\nexport default ColorHexInput;"]},"metadata":{},"sourceType":"module"}