{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef, useMemo } from 'react';\nimport { ColorBlock } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { useLocale } from '../../locale';\nimport { getColorAlpha } from '../util';\nimport ColorClear from './ColorClear';\nvar ColorTrigger = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _classNames;\n\n  var color = props.color,\n      prefixCls = props.prefixCls,\n      open = props.open,\n      disabled = props.disabled,\n      format = props.format,\n      className = props.className,\n      showText = props.showText,\n      activeIndex = props.activeIndex,\n      rest = __rest(props, [\"color\", \"prefixCls\", \"open\", \"disabled\", \"format\", \"className\", \"showText\", \"activeIndex\"]);\n\n  var colorTriggerPrefixCls = \"\".concat(prefixCls, \"-trigger\");\n  var colorTextPrefixCls = \"\".concat(colorTriggerPrefixCls, \"-text\");\n  var colorTextCellPrefixCls = \"\".concat(colorTextPrefixCls, \"-cell\");\n\n  var _useLocale = useLocale('ColorPicker'),\n      _useLocale2 = _slicedToArray(_useLocale, 1),\n      locale = _useLocale2[0]; // ============================== Text ==============================\n\n\n  var desc = React.useMemo(function () {\n    if (!showText) {\n      return '';\n    }\n\n    if (typeof showText === 'function') {\n      return showText(color);\n    }\n\n    if (color.cleared) {\n      return locale.transparent;\n    }\n\n    if (color.isGradient()) {\n      return color.getColors().map(function (c, index) {\n        var inactive = activeIndex !== -1 && activeIndex !== index;\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: index,\n          className: classNames(colorTextCellPrefixCls, inactive && \"\".concat(colorTextCellPrefixCls, \"-inactive\"))\n        }, c.color.toRgbString(), \" \", c.percent, \"%\");\n      });\n    }\n\n    var hexString = color.toHexString().toUpperCase();\n    var alpha = getColorAlpha(color);\n\n    switch (format) {\n      case 'rgb':\n        return color.toRgbString();\n\n      case 'hsb':\n        return color.toHsbString();\n      // case 'hex':\n\n      default:\n        return alpha < 100 ? \"\".concat(hexString.slice(0, 7), \",\").concat(alpha, \"%\") : hexString;\n    }\n  }, [color, format, showText, activeIndex]); // ============================= Render =============================\n\n  var containerNode = useMemo(function () {\n    return color.cleared ? /*#__PURE__*/React.createElement(ColorClear, {\n      prefixCls: prefixCls\n    }) : /*#__PURE__*/React.createElement(ColorBlock, {\n      prefixCls: prefixCls,\n      color: color.toCssString()\n    });\n  }, [color, prefixCls]);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: classNames(colorTriggerPrefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(colorTriggerPrefixCls, \"-active\"), open), _defineProperty(_classNames, \"\".concat(colorTriggerPrefixCls, \"-disabled\"), disabled), _classNames))\n  }, pickAttrs(rest)), containerNode, showText && /*#__PURE__*/React.createElement(\"div\", {\n    className: colorTextPrefixCls\n  }, desc));\n});\nexport default ColorTrigger;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/color-picker/components/ColorTrigger.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","forwardRef","useMemo","ColorBlock","classNames","pickAttrs","useLocale","getColorAlpha","ColorClear","ColorTrigger","props","ref","color","prefixCls","open","disabled","format","className","showText","activeIndex","rest","colorTriggerPrefixCls","colorTextPrefixCls","colorTextCellPrefixCls","locale","desc","cleared","transparent","isGradient","getColors","map","c","index","inactive","createElement","key","toRgbString","percent","hexString","toHexString","toUpperCase","alpha","toHsbString","slice","containerNode","toCssString","assign"],"mappings":"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","sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { forwardRef, useMemo } from 'react';\nimport { ColorBlock } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { useLocale } from '../../locale';\nimport { getColorAlpha } from '../util';\nimport ColorClear from './ColorClear';\nconst ColorTrigger = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n      color,\n      prefixCls,\n      open,\n      disabled,\n      format,\n      className,\n      showText,\n      activeIndex\n    } = props,\n    rest = __rest(props, [\"color\", \"prefixCls\", \"open\", \"disabled\", \"format\", \"className\", \"showText\", \"activeIndex\"]);\n  const colorTriggerPrefixCls = `${prefixCls}-trigger`;\n  const colorTextPrefixCls = `${colorTriggerPrefixCls}-text`;\n  const colorTextCellPrefixCls = `${colorTextPrefixCls}-cell`;\n  const [locale] = useLocale('ColorPicker');\n  // ============================== Text ==============================\n  const desc = React.useMemo(() => {\n    if (!showText) {\n      return '';\n    }\n    if (typeof showText === 'function') {\n      return showText(color);\n    }\n    if (color.cleared) {\n      return locale.transparent;\n    }\n    if (color.isGradient()) {\n      return color.getColors().map((c, index) => {\n        const inactive = activeIndex !== -1 && activeIndex !== index;\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: index,\n          className: classNames(colorTextCellPrefixCls, inactive && `${colorTextCellPrefixCls}-inactive`)\n        }, c.color.toRgbString(), \" \", c.percent, \"%\");\n      });\n    }\n    const hexString = color.toHexString().toUpperCase();\n    const alpha = getColorAlpha(color);\n    switch (format) {\n      case 'rgb':\n        return color.toRgbString();\n      case 'hsb':\n        return color.toHsbString();\n      // case 'hex':\n      default:\n        return alpha < 100 ? `${hexString.slice(0, 7)},${alpha}%` : hexString;\n    }\n  }, [color, format, showText, activeIndex]);\n  // ============================= Render =============================\n  const containerNode = useMemo(() => color.cleared ? (/*#__PURE__*/React.createElement(ColorClear, {\n    prefixCls: prefixCls\n  })) : (/*#__PURE__*/React.createElement(ColorBlock, {\n    prefixCls: prefixCls,\n    color: color.toCssString()\n  })), [color, prefixCls]);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: classNames(colorTriggerPrefixCls, className, {\n      [`${colorTriggerPrefixCls}-active`]: open,\n      [`${colorTriggerPrefixCls}-disabled`]: disabled\n    })\n  }, pickAttrs(rest)), containerNode, showText && /*#__PURE__*/React.createElement(\"div\", {\n    className: colorTextPrefixCls\n  }, desc));\n});\nexport default ColorTrigger;"]},"metadata":{},"sourceType":"module"}