{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Checkbox from './Checkbox';\nimport GroupContext from './GroupContext';\nimport useStyle from './style';\nvar CheckboxGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var defaultValue = props.defaultValue,\n      children = props.children,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      customizePrefixCls = props.prefixCls,\n      className = props.className,\n      rootClassName = props.rootClassName,\n      style = props.style,\n      onChange = props.onChange,\n      restProps = __rest(props, [\"defaultValue\", \"children\", \"options\", \"prefixCls\", \"className\", \"rootClassName\", \"style\", \"onChange\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState(restProps.value || defaultValue || []),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      registeredValues = _React$useState4[0],\n      setRegisteredValues = _React$useState4[1];\n\n  React.useEffect(function () {\n    if ('value' in restProps) {\n      setValue(restProps.value || []);\n    }\n  }, [restProps.value]);\n  var memoizedOptions = React.useMemo(function () {\n    return options.map(function (option) {\n      if (typeof option === 'string' || typeof option === 'number') {\n        return {\n          label: option,\n          value: option\n        };\n      }\n\n      return option;\n    });\n  }, [options]);\n\n  var cancelValue = function cancelValue(val) {\n    setRegisteredValues(function (prevValues) {\n      return prevValues.filter(function (v) {\n        return v !== val;\n      });\n    });\n  };\n\n  var registerValue = function registerValue(val) {\n    setRegisteredValues(function (prevValues) {\n      return [].concat(_toConsumableArray(prevValues), [val]);\n    });\n  };\n\n  var toggleOption = function toggleOption(option) {\n    var optionIndex = value.indexOf(option.value);\n\n    var newValue = _toConsumableArray(value);\n\n    if (optionIndex === -1) {\n      newValue.push(option.value);\n    } else {\n      newValue.splice(optionIndex, 1);\n    }\n\n    if (!('value' in restProps)) {\n      setValue(newValue);\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(newValue.filter(function (val) {\n      return registeredValues.includes(val);\n    }).sort(function (a, b) {\n      var indexA = memoizedOptions.findIndex(function (opt) {\n        return opt.value === a;\n      });\n      var indexB = memoizedOptions.findIndex(function (opt) {\n        return opt.value === b;\n      });\n      return indexA - indexB;\n    }));\n  };\n\n  var prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n  var groupPrefixCls = \"\".concat(prefixCls, \"-group\");\n  var rootCls = useCSSVarCls(prefixCls);\n\n  var _useStyle = useStyle(prefixCls, rootCls),\n      _useStyle2 = _slicedToArray(_useStyle, 3),\n      wrapCSSVar = _useStyle2[0],\n      hashId = _useStyle2[1],\n      cssVarCls = _useStyle2[2];\n\n  var domProps = omit(restProps, ['value', 'disabled']);\n  var childrenNode = options.length ? memoizedOptions.map(function (option) {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      prefixCls: prefixCls,\n      key: option.value.toString(),\n      disabled: 'disabled' in option ? option.disabled : restProps.disabled,\n      value: option.value,\n      checked: value.includes(option.value),\n      onChange: option.onChange,\n      className: classNames(\"\".concat(groupPrefixCls, \"-item\"), option.className),\n      style: option.style,\n      title: option.title,\n      id: option.id,\n      required: option.required\n    }, option.label);\n  }) : children;\n  var memoizedContext = React.useMemo(function () {\n    return {\n      toggleOption: toggleOption,\n      value: value,\n      disabled: restProps.disabled,\n      name: restProps.name,\n      // https://github.com/ant-design/ant-design/issues/16376\n      registerValue: registerValue,\n      cancelValue: cancelValue\n    };\n  }, [toggleOption, value, restProps.disabled, restProps.name, registerValue, cancelValue]);\n  var classString = classNames(groupPrefixCls, _defineProperty({}, \"\".concat(groupPrefixCls, \"-rtl\"), direction === 'rtl'), className, rootClassName, cssVarCls, rootCls, hashId);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: style\n  }, domProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(GroupContext.Provider, {\n    value: memoizedContext\n  }, childrenNode)));\n});\nexport { GroupContext };\nexport default CheckboxGroup;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/checkbox/Group.js"],"names":["_toConsumableArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","omit","ConfigContext","useCSSVarCls","Checkbox","GroupContext","useStyle","CheckboxGroup","forwardRef","props","ref","defaultValue","children","options","customizePrefixCls","prefixCls","className","rootClassName","style","onChange","restProps","useContext","getPrefixCls","direction","useState","value","setValue","registeredValues","setRegisteredValues","useEffect","memoizedOptions","useMemo","map","option","label","cancelValue","val","prevValues","filter","v","registerValue","concat","toggleOption","optionIndex","newValue","push","splice","includes","sort","a","b","indexA","findIndex","opt","indexB","groupPrefixCls","rootCls","wrapCSSVar","hashId","cssVarCls","domProps","childrenNode","createElement","key","toString","disabled","checked","title","id","required","memoizedContext","name","classString","assign","Provider"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Checkbox from './Checkbox';\nimport GroupContext from './GroupContext';\nimport useStyle from './style';\nconst CheckboxGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      defaultValue,\n      children,\n      options = [],\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      style,\n      onChange\n    } = props,\n    restProps = __rest(props, [\"defaultValue\", \"children\", \"options\", \"prefixCls\", \"className\", \"rootClassName\", \"style\", \"onChange\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [value, setValue] = React.useState(restProps.value || defaultValue || []);\n  const [registeredValues, setRegisteredValues] = React.useState([]);\n  React.useEffect(() => {\n    if ('value' in restProps) {\n      setValue(restProps.value || []);\n    }\n  }, [restProps.value]);\n  const memoizedOptions = React.useMemo(() => options.map(option => {\n    if (typeof option === 'string' || typeof option === 'number') {\n      return {\n        label: option,\n        value: option\n      };\n    }\n    return option;\n  }), [options]);\n  const cancelValue = val => {\n    setRegisteredValues(prevValues => prevValues.filter(v => v !== val));\n  };\n  const registerValue = val => {\n    setRegisteredValues(prevValues => [].concat(_toConsumableArray(prevValues), [val]));\n  };\n  const toggleOption = option => {\n    const optionIndex = value.indexOf(option.value);\n    const newValue = _toConsumableArray(value);\n    if (optionIndex === -1) {\n      newValue.push(option.value);\n    } else {\n      newValue.splice(optionIndex, 1);\n    }\n    if (!('value' in restProps)) {\n      setValue(newValue);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(newValue.filter(val => registeredValues.includes(val)).sort((a, b) => {\n      const indexA = memoizedOptions.findIndex(opt => opt.value === a);\n      const indexB = memoizedOptions.findIndex(opt => opt.value === b);\n      return indexA - indexB;\n    }));\n  };\n  const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const domProps = omit(restProps, ['value', 'disabled']);\n  const childrenNode = options.length ? memoizedOptions.map(option => (/*#__PURE__*/React.createElement(Checkbox, {\n    prefixCls: prefixCls,\n    key: option.value.toString(),\n    disabled: 'disabled' in option ? option.disabled : restProps.disabled,\n    value: option.value,\n    checked: value.includes(option.value),\n    onChange: option.onChange,\n    className: classNames(`${groupPrefixCls}-item`, option.className),\n    style: option.style,\n    title: option.title,\n    id: option.id,\n    required: option.required\n  }, option.label))) : children;\n  const memoizedContext = React.useMemo(() => ({\n    toggleOption,\n    value,\n    disabled: restProps.disabled,\n    name: restProps.name,\n    // https://github.com/ant-design/ant-design/issues/16376\n    registerValue,\n    cancelValue\n  }), [toggleOption, value, restProps.disabled, restProps.name, registerValue, cancelValue]);\n  const classString = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, cssVarCls, rootCls, hashId);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: style\n  }, domProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(GroupContext.Provider, {\n    value: memoizedContext\n  }, childrenNode)));\n});\nexport { GroupContext };\nexport default CheckboxGroup;"]},"metadata":{},"sourceType":"module"}