{"ast":null,"code":"import _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n\nvar genBaseStyle = function genBaseStyle(token) {\n  var antCls = token.antCls,\n      componentCls = token.componentCls,\n      iconCls = token.iconCls,\n      avatarBg = token.avatarBg,\n      avatarColor = token.avatarColor,\n      containerSize = token.containerSize,\n      containerSizeLG = token.containerSizeLG,\n      containerSizeSM = token.containerSizeSM,\n      textFontSize = token.textFontSize,\n      textFontSizeLG = token.textFontSizeLG,\n      textFontSizeSM = token.textFontSizeSM,\n      borderRadius = token.borderRadius,\n      borderRadiusLG = token.borderRadiusLG,\n      borderRadiusSM = token.borderRadiusSM,\n      lineWidth = token.lineWidth,\n      lineType = token.lineType; // Avatar size style\n\n  var avatarSizeStyle = function avatarSizeStyle(size, fontSize, radius) {\n    var _ref;\n\n    return _ref = {\n      width: size,\n      height: size,\n      borderRadius: '50%'\n    }, _defineProperty(_ref, \"&\".concat(componentCls, \"-square\"), {\n      borderRadius: radius\n    }), _defineProperty(_ref, \"&\".concat(componentCls, \"-icon\"), _defineProperty({\n      fontSize: fontSize\n    }, \"> \".concat(iconCls), {\n      margin: 0\n    })), _ref;\n  };\n\n  return _defineProperty({}, componentCls, Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), _defineProperty({\n    position: 'relative',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    color: avatarColor,\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    background: avatarBg,\n    border: \"\".concat(unit(lineWidth), \" \").concat(lineType, \" transparent\"),\n    '&-image': {\n      background: 'transparent'\n    }\n  }, \"\".concat(antCls, \"-image-img\"), {\n    display: 'block'\n  })), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\n    '&-lg': Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\n    '&-sm': Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\n    '> img': {\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover'\n    }\n  }));\n};\n\nvar genGroupStyle = function genGroupStyle(token) {\n  var _$concat2, _ref3;\n\n  var componentCls = token.componentCls,\n      groupBorderColor = token.groupBorderColor,\n      groupOverlapping = token.groupOverlapping,\n      groupSpace = token.groupSpace;\n  return _ref3 = {}, _defineProperty(_ref3, \"\".concat(componentCls, \"-group\"), (_$concat2 = {\n    display: 'inline-flex'\n  }, _defineProperty(_$concat2, componentCls, {\n    borderColor: groupBorderColor\n  }), _defineProperty(_$concat2, '> *:not(:first-child)', {\n    marginInlineStart: groupOverlapping\n  }), _$concat2)), _defineProperty(_ref3, \"\".concat(componentCls, \"-group-popover\"), _defineProperty({}, \"\".concat(componentCls, \" + \").concat(componentCls), {\n    marginInlineStart: groupSpace\n  })), _ref3;\n};\n\nexport var prepareComponentToken = function prepareComponentToken(token) {\n  var controlHeight = token.controlHeight,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM,\n      fontSize = token.fontSize,\n      fontSizeLG = token.fontSizeLG,\n      fontSizeXL = token.fontSizeXL,\n      fontSizeHeading3 = token.fontSizeHeading3,\n      marginXS = token.marginXS,\n      marginXXS = token.marginXXS,\n      colorBorderBg = token.colorBorderBg;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    textFontSizeLG: fontSizeHeading3,\n    textFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n};\nexport default genStyleHooks('Avatar', function (token) {\n  var colorTextLightSolid = token.colorTextLightSolid,\n      colorTextPlaceholder = token.colorTextPlaceholder;\n  var avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, prepareComponentToken);","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/avatar/style/index.js"],"names":["unit","resetComponent","genStyleHooks","mergeToken","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","containerSize","containerSizeLG","containerSizeSM","textFontSize","textFontSizeLG","textFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","margin","Object","assign","position","display","justifyContent","alignItems","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","objectFit","genGroupStyle","groupBorderColor","groupOverlapping","groupSpace","borderColor","marginInlineStart","prepareComponentToken","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","marginXXS","colorBorderBg","Math","round","colorTextLightSolid","colorTextPlaceholder","avatarToken"],"mappings":"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","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${unit(lineWidth)} ${lineType} transparent`,\n      '&-image': {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\n      '&-lg': Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\n      '&-sm': Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [componentCls]: {\n        borderColor: groupBorderColor\n      },\n      '> *:not(:first-child)': {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [`${componentCls}-group-popover`]: {\n      [`${componentCls} + ${componentCls}`]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    textFontSizeLG: fontSizeHeading3,\n    textFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n};\nexport default genStyleHooks('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}