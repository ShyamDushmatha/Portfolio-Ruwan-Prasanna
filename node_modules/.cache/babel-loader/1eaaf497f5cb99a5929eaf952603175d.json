{"ast":null,"code":"import _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Keyframes, unit } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { genDirectoryStyle } from './directory'; // ============================ Keyframes =============================\n\nvar treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n}); // ============================== Switch ==============================\n\nvar getSwitchStyle = function getSwitchStyle(prefixCls, token) {\n  return _defineProperty({}, \".\".concat(prefixCls, \"-switcher-icon\"), {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: \"transform \".concat(token.motionDurationSlow)\n    }\n  });\n}; // =============================== Drop ===============================\n\n\nvar getDropIndicatorStyle = function getDropIndicatorStyle(prefixCls, token) {\n  return _defineProperty({}, \".\".concat(prefixCls, \"-drop-indicator\"), {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: \"\".concat(unit(token.lineWidthBold), \" solid \").concat(token.colorPrimary),\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  });\n};\n\nexport var genBaseStyle = function genBaseStyle(prefixCls, token) {\n  var _$concat, _draggable, _treeNodeCls, _Object$assign, _Object$assign2, _showLine, _Object$assign3;\n\n  var treeCls = token.treeCls,\n      treeNodeCls = token.treeNodeCls,\n      treeNodePadding = token.treeNodePadding,\n      titleHeight = token.titleHeight,\n      indentSize = token.indentSize,\n      nodeSelectedBg = token.nodeSelectedBg,\n      nodeHoverBg = token.nodeHoverBg,\n      colorTextQuaternary = token.colorTextQuaternary,\n      controlItemBgActiveDisabled = token.controlItemBgActiveDisabled;\n  return _defineProperty({}, treeCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign3 = {\n    background: token.colorBgContainer,\n    borderRadius: token.borderRadius,\n    transition: \"background-color \".concat(token.motionDurationSlow),\n    '&-rtl': {\n      direction: 'rtl'\n    }\n  }, _defineProperty(_Object$assign3, \"&\".concat(treeCls, \"-rtl \").concat(treeCls, \"-switcher_close \").concat(treeCls, \"-switcher-icon svg\"), {\n    transform: 'rotate(90deg)'\n  }), _defineProperty(_Object$assign3, \"&-focused:not(:hover):not(\".concat(treeCls, \"-active-focused)\"), Object.assign({}, genFocusOutline(token))), _defineProperty(_Object$assign3, \"\".concat(treeCls, \"-list-holder-inner\"), {\n    alignItems: 'flex-start'\n  }), _defineProperty(_Object$assign3, \"&\".concat(treeCls, \"-block-node\"), _defineProperty({}, \"\".concat(treeCls, \"-list-holder-inner\"), (_$concat = {\n    alignItems: 'stretch'\n  }, _defineProperty(_$concat, \"\".concat(treeCls, \"-node-content-wrapper\"), {\n    flex: 'auto'\n  }), _defineProperty(_$concat, \"\".concat(treeNodeCls, \".dragging:after\"), {\n    position: 'absolute',\n    inset: 0,\n    border: \"1px solid \".concat(token.colorPrimary),\n    opacity: 0,\n    animationName: treeNodeFX,\n    animationDuration: token.motionDurationSlow,\n    animationPlayState: 'running',\n    animationFillMode: 'forwards',\n    content: '\"\"',\n    pointerEvents: 'none',\n    borderRadius: token.borderRadius\n  }), _$concat))), _defineProperty(_Object$assign3, treeNodeCls, (_treeNodeCls = {\n    display: 'flex',\n    alignItems: 'flex-start',\n    marginBottom: treeNodePadding,\n    lineHeight: unit(titleHeight),\n    position: 'relative',\n    // 非常重要，避免 drop-indicator 在拖拽过程中闪烁\n    '&:before': {\n      content: '\"\"',\n      position: 'absolute',\n      zIndex: 1,\n      insetInlineStart: 0,\n      width: '100%',\n      top: '100%',\n      height: treeNodePadding\n    }\n  }, _defineProperty(_treeNodeCls, \"&-disabled \".concat(treeCls, \"-node-content-wrapper\"), {\n    color: token.colorTextDisabled,\n    cursor: 'not-allowed',\n    '&:hover': {\n      background: 'transparent'\n    }\n  }), _defineProperty(_treeNodeCls, \"\".concat(treeCls, \"-checkbox-disabled + \").concat(treeCls, \"-node-selected,&\").concat(treeNodeCls, \"-disabled\").concat(treeNodeCls, \"-selected \").concat(treeCls, \"-node-content-wrapper\"), {\n    backgroundColor: controlItemBgActiveDisabled\n  }), _defineProperty(_treeNodeCls, \"\".concat(treeCls, \"-checkbox-disabled\"), {\n    pointerEvents: 'unset'\n  }), _defineProperty(_treeNodeCls, \"&:not(\".concat(treeNodeCls, \"-disabled)\"), _defineProperty({}, \"\".concat(treeCls, \"-node-content-wrapper\"), {\n    '&:hover': {\n      color: token.nodeHoverColor\n    }\n  })), _defineProperty(_treeNodeCls, \"&-active \".concat(treeCls, \"-node-content-wrapper\"), {\n    background: token.controlItemBgHover\n  }), _defineProperty(_treeNodeCls, \"&:not(\".concat(treeNodeCls, \"-disabled).filter-node \").concat(treeCls, \"-title\"), {\n    color: token.colorPrimary,\n    fontWeight: 500\n  }), _defineProperty(_treeNodeCls, '&-draggable', (_draggable = {\n    cursor: 'grab'\n  }, _defineProperty(_draggable, \"\".concat(treeCls, \"-draggable-icon\"), {\n    // https://github.com/ant-design/ant-design/issues/41915\n    flexShrink: 0,\n    width: titleHeight,\n    textAlign: 'center',\n    visibility: 'visible',\n    color: colorTextQuaternary\n  }), _defineProperty(_draggable, \"&\".concat(treeNodeCls, \"-disabled \").concat(treeCls, \"-draggable-icon\"), {\n    visibility: 'hidden'\n  }), _draggable)), _treeNodeCls)), _defineProperty(_Object$assign3, \"\".concat(treeCls, \"-indent\"), {\n    alignSelf: 'stretch',\n    whiteSpace: 'nowrap',\n    userSelect: 'none',\n    '&-unit': {\n      display: 'inline-block',\n      width: indentSize\n    }\n  }), _defineProperty(_Object$assign3, \"\".concat(treeCls, \"-draggable-icon\"), {\n    visibility: 'hidden'\n  }), _defineProperty(_Object$assign3, \"\".concat(treeCls, \"-switcher, \").concat(treeCls, \"-checkbox\"), {\n    marginInlineEnd: token.calc(token.calc(titleHeight).sub(token.controlInteractiveSize)).div(2).equal()\n  }), _defineProperty(_Object$assign3, \"\".concat(treeCls, \"-switcher\"), Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), (_Object$assign = {\n    position: 'relative',\n    flex: 'none',\n    alignSelf: 'stretch',\n    width: titleHeight,\n    textAlign: 'center',\n    cursor: 'pointer',\n    userSelect: 'none',\n    transition: \"all \".concat(token.motionDurationSlow),\n    '&-noop': {\n      cursor: 'unset'\n    },\n    '&:before': {\n      pointerEvents: 'none',\n      content: '\"\"',\n      width: titleHeight,\n      height: titleHeight,\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: 0\n      },\n      top: 0,\n      borderRadius: token.borderRadius,\n      transition: \"all \".concat(token.motionDurationSlow)\n    }\n  }, _defineProperty(_Object$assign, \"&:not(\".concat(treeCls, \"-switcher-noop):hover:before\"), {\n    backgroundColor: token.colorBgTextHover\n  }), _defineProperty(_Object$assign, \"&_close \".concat(treeCls, \"-switcher-icon svg\"), {\n    transform: 'rotate(-90deg)'\n  }), _defineProperty(_Object$assign, '&-loading-icon', {\n    color: token.colorPrimary\n  }), _defineProperty(_Object$assign, '&-leaf-line', {\n    position: 'relative',\n    zIndex: 1,\n    display: 'inline-block',\n    width: '100%',\n    height: '100%',\n    // https://github.com/ant-design/ant-design/issues/31884\n    '&:before': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: token.calc(titleHeight).div(2).equal(),\n      bottom: token.calc(treeNodePadding).mul(-1).equal(),\n      marginInlineStart: -1,\n      borderInlineEnd: \"1px solid \".concat(token.colorBorder),\n      content: '\"\"'\n    },\n    '&:after': {\n      position: 'absolute',\n      width: token.calc(token.calc(titleHeight).div(2).equal()).mul(0.8).equal(),\n      height: token.calc(titleHeight).div(2).equal(),\n      borderBottom: \"1px solid \".concat(token.colorBorder),\n      content: '\"\"'\n    }\n  }), _Object$assign))), _defineProperty(_Object$assign3, \"\".concat(treeCls, \"-node-content-wrapper\"), Object.assign(Object.assign({\n    position: 'relative',\n    minHeight: titleHeight,\n    paddingBlock: 0,\n    paddingInline: token.paddingXS,\n    background: 'transparent',\n    borderRadius: token.borderRadius,\n    cursor: 'pointer',\n    transition: \"all \".concat(token.motionDurationMid, \", border 0s, line-height 0s, box-shadow 0s\")\n  }, getDropIndicatorStyle(prefixCls, token)), (_Object$assign2 = {\n    '&:hover': {\n      backgroundColor: nodeHoverBg\n    }\n  }, _defineProperty(_Object$assign2, \"&\".concat(treeCls, \"-node-selected\"), {\n    color: token.nodeSelectedColor,\n    backgroundColor: nodeSelectedBg\n  }), _defineProperty(_Object$assign2, \"\".concat(treeCls, \"-iconEle\"), {\n    display: 'inline-block',\n    width: titleHeight,\n    height: titleHeight,\n    textAlign: 'center',\n    verticalAlign: 'top',\n    '&:empty': {\n      display: 'none'\n    }\n  }), _Object$assign2))), _defineProperty(_Object$assign3, \"\".concat(treeCls, \"-unselectable \").concat(treeCls, \"-node-content-wrapper:hover\"), {\n    backgroundColor: 'transparent'\n  }), _defineProperty(_Object$assign3, \"\".concat(treeNodeCls, \".drop-container > [draggable]\"), {\n    boxShadow: \"0 0 0 2px \".concat(token.colorPrimary)\n  }), _defineProperty(_Object$assign3, '&-show-line', (_showLine = {}, _defineProperty(_showLine, \"\".concat(treeCls, \"-indent-unit\"), {\n    position: 'relative',\n    height: '100%',\n    '&:before': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: token.calc(titleHeight).div(2).equal(),\n      bottom: token.calc(treeNodePadding).mul(-1).equal(),\n      borderInlineEnd: \"1px solid \".concat(token.colorBorder),\n      content: '\"\"'\n    },\n    '&-end:before': {\n      display: 'none'\n    }\n  }), _defineProperty(_showLine, \"\".concat(treeCls, \"-switcher\"), {\n    background: 'transparent',\n    '&-line-icon': {\n      // https://github.com/ant-design/ant-design/issues/32813\n      verticalAlign: '-0.15em'\n    }\n  }), _showLine)), _defineProperty(_Object$assign3, \"\".concat(treeNodeCls, \"-leaf-last \").concat(treeCls, \"-switcher-leaf-line:before\"), {\n    top: 'auto !important',\n    bottom: 'auto !important',\n    height: \"\".concat(unit(token.calc(titleHeight).div(2).equal()), \" !important\")\n  }), _Object$assign3)));\n}; // ============================== Merged ==============================\n\nexport var genTreeStyle = function genTreeStyle(prefixCls, token) {\n  var enableDirectory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var treeCls = \".\".concat(prefixCls);\n  var treeNodeCls = \"\".concat(treeCls, \"-treenode\");\n  var treeNodePadding = token.calc(token.paddingXS).div(2).equal();\n  var treeToken = mergeToken(token, {\n    treeCls: treeCls,\n    treeNodeCls: treeNodeCls,\n    treeNodePadding: treeNodePadding\n  });\n  return [// Basic\n  genBaseStyle(prefixCls, treeToken), // Directory\n  enableDirectory && genDirectoryStyle(treeToken)].filter(Boolean);\n};\nexport var initComponentToken = function initComponentToken(token) {\n  var controlHeightSM = token.controlHeightSM,\n      controlItemBgHover = token.controlItemBgHover,\n      controlItemBgActive = token.controlItemBgActive;\n  var titleHeight = controlHeightSM;\n  return {\n    titleHeight: titleHeight,\n    indentSize: titleHeight,\n    nodeHoverBg: controlItemBgHover,\n    nodeHoverColor: token.colorText,\n    nodeSelectedBg: controlItemBgActive,\n    nodeSelectedColor: token.colorText\n  };\n};\nexport var prepareComponentToken = function prepareComponentToken(token) {\n  var colorTextLightSolid = token.colorTextLightSolid,\n      colorPrimary = token.colorPrimary;\n  return Object.assign(Object.assign({}, initComponentToken(token)), {\n    directoryNodeSelectedColor: colorTextLightSolid,\n    directoryNodeSelectedBg: colorPrimary\n  });\n};\nexport default genStyleHooks('Tree', function (token, _ref4) {\n  var prefixCls = _ref4.prefixCls;\n  return [_defineProperty({}, token.componentCls, getCheckboxStyle(\"\".concat(prefixCls, \"-checkbox\"), token)), genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n}, prepareComponentToken);","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/tree/style/index.js"],"names":["Keyframes","unit","getStyle","getCheckboxStyle","genFocusOutline","resetComponent","genCollapseMotion","genStyleHooks","mergeToken","genDirectoryStyle","treeNodeFX","opacity","getSwitchStyle","prefixCls","token","display","fontSize","verticalAlign","svg","transition","motionDurationSlow","getDropIndicatorStyle","position","zIndex","height","backgroundColor","colorPrimary","borderRadius","pointerEvents","top","insetInlineStart","width","border","lineWidthBold","content","genBaseStyle","treeCls","treeNodeCls","treeNodePadding","titleHeight","indentSize","nodeSelectedBg","nodeHoverBg","colorTextQuaternary","controlItemBgActiveDisabled","Object","assign","background","colorBgContainer","direction","transform","alignItems","flex","inset","animationName","animationDuration","animationPlayState","animationFillMode","marginBottom","lineHeight","color","colorTextDisabled","cursor","nodeHoverColor","controlItemBgHover","fontWeight","flexShrink","textAlign","visibility","alignSelf","whiteSpace","userSelect","marginInlineEnd","calc","sub","controlInteractiveSize","div","equal","left","_skip_check_","value","colorBgTextHover","insetInlineEnd","bottom","mul","marginInlineStart","borderInlineEnd","colorBorder","borderBottom","minHeight","paddingBlock","paddingInline","paddingXS","motionDurationMid","nodeSelectedColor","boxShadow","genTreeStyle","enableDirectory","treeToken","filter","Boolean","initComponentToken","controlHeightSM","controlItemBgActive","colorText","prepareComponentToken","colorTextLightSolid","directoryNodeSelectedColor","directoryNodeSelectedBg","componentCls"],"mappings":"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","sourcesContent":["import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { genDirectoryStyle } from './directory';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${unit(token.lineWidthBold)} solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    titleHeight,\n    indentSize,\n    nodeSelectedBg,\n    nodeHoverBg,\n    colorTextQuaternary,\n    controlItemBgActiveDisabled\n  } = token;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`&${treeCls}-rtl ${treeCls}-switcher_close ${treeCls}-switcher-icon svg`]: {\n        transform: 'rotate(90deg)'\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging:after`]: {\n            position: 'absolute',\n            inset: 0,\n            border: `1px solid ${token.colorPrimary}`,\n            opacity: 0,\n            animationName: treeNodeFX,\n            animationDuration: token.motionDurationSlow,\n            animationPlayState: 'running',\n            animationFillMode: 'forwards',\n            content: '\"\"',\n            pointerEvents: 'none',\n            borderRadius: token.borderRadius\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [treeNodeCls]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        marginBottom: treeNodePadding,\n        lineHeight: unit(titleHeight),\n        position: 'relative',\n        // 非常重要，避免 drop-indicator 在拖拽过程中闪烁\n        '&:before': {\n          content: '\"\"',\n          position: 'absolute',\n          zIndex: 1,\n          insetInlineStart: 0,\n          width: '100%',\n          top: '100%',\n          height: treeNodePadding\n        },\n        // Disabled\n        [`&-disabled ${treeCls}-node-content-wrapper`]: {\n          color: token.colorTextDisabled,\n          cursor: 'not-allowed',\n          '&:hover': {\n            background: 'transparent'\n          }\n        },\n        [`${treeCls}-checkbox-disabled + ${treeCls}-node-selected,&${treeNodeCls}-disabled${treeNodeCls}-selected ${treeCls}-node-content-wrapper`]: {\n          backgroundColor: controlItemBgActiveDisabled\n        },\n        // we can not set pointer-events to none for checkbox in tree\n        // ref: https://github.com/ant-design/ant-design/issues/39822#issuecomment-2605234058\n        [`${treeCls}-checkbox-disabled`]: {\n          pointerEvents: 'unset'\n        },\n        // not disable\n        [`&:not(${treeNodeCls}-disabled)`]: {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            '&:hover': {\n              color: token.nodeHoverColor\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: {\n          background: token.controlItemBgHover\n        },\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: token.colorPrimary,\n          fontWeight: 500\n        },\n        '&-draggable': {\n          cursor: 'grab',\n          [`${treeCls}-draggable-icon`]: {\n            // https://github.com/ant-design/ant-design/issues/41915\n            flexShrink: 0,\n            width: titleHeight,\n            textAlign: 'center',\n            visibility: 'visible',\n            color: colorTextQuaternary\n          },\n          [`&${treeNodeCls}-disabled ${treeCls}-draggable-icon`]: {\n            visibility: 'hidden'\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: indentSize\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // Switcher / Checkbox\n      [`${treeCls}-switcher, ${treeCls}-checkbox`]: {\n        marginInlineEnd: token.calc(token.calc(titleHeight).sub(token.controlInteractiveSize)).div(2).equal()\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: titleHeight,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        transition: `all ${token.motionDurationSlow}`,\n        '&-noop': {\n          cursor: 'unset'\n        },\n        '&:before': {\n          pointerEvents: 'none',\n          content: '\"\"',\n          width: titleHeight,\n          height: titleHeight,\n          position: 'absolute',\n          left: {\n            _skip_check_: true,\n            value: 0\n          },\n          top: 0,\n          borderRadius: token.borderRadius,\n          transition: `all ${token.motionDurationSlow}`\n        },\n        [`&:not(${treeCls}-switcher-noop):hover:before`]: {\n          backgroundColor: token.colorBgTextHover\n        },\n        [`&_close ${treeCls}-switcher-icon svg`]: {\n          transform: 'rotate(-90deg)'\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: token.calc(titleHeight).div(2).equal(),\n            bottom: token.calc(treeNodePadding).mul(-1).equal(),\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: token.calc(token.calc(titleHeight).div(2).equal()).mul(0.8).equal(),\n            height: token.calc(titleHeight).div(2).equal(),\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper`]: Object.assign(Object.assign({\n        position: 'relative',\n        minHeight: titleHeight,\n        paddingBlock: 0,\n        paddingInline: token.paddingXS,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`\n      }, getDropIndicatorStyle(prefixCls, token)), {\n        '&:hover': {\n          backgroundColor: nodeHoverBg\n        },\n        [`&${treeCls}-node-selected`]: {\n          color: token.nodeSelectedColor,\n          backgroundColor: nodeSelectedBg\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: titleHeight,\n          height: titleHeight,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      }),\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      [`${treeNodeCls}.drop-container > [draggable]`]: {\n        boxShadow: `0 0 0 2px ${token.colorPrimary}`\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent-unit`]: {\n          position: 'relative',\n          height: '100%',\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: token.calc(titleHeight).div(2).equal(),\n            bottom: token.calc(treeNodePadding).mul(-1).equal(),\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&-end:before': {\n            display: 'none'\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last ${treeCls}-switcher-leaf-line:before`]: {\n        top: 'auto !important',\n        bottom: 'auto !important',\n        height: `${unit(token.calc(titleHeight).div(2).equal())} !important`\n      }\n    })\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token,\n/**\n * @descCN 是否启用目录树样式\n * @descEN Whether to enable directory style\n * @default true\n */\nenableDirectory = true) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.calc(token.paddingXS).div(2).equal();\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  enableDirectory && genDirectoryStyle(treeToken)].filter(Boolean);\n};\nexport const initComponentToken = token => {\n  const {\n    controlHeightSM,\n    controlItemBgHover,\n    controlItemBgActive\n  } = token;\n  const titleHeight = controlHeightSM;\n  return {\n    titleHeight,\n    indentSize: titleHeight,\n    nodeHoverBg: controlItemBgHover,\n    nodeHoverColor: token.colorText,\n    nodeSelectedBg: controlItemBgActive,\n    nodeSelectedColor: token.colorText\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    colorTextLightSolid,\n    colorPrimary\n  } = token;\n  return Object.assign(Object.assign({}, initComponentToken(token)), {\n    directoryNodeSelectedColor: colorTextLightSolid,\n    directoryNodeSelectedBg: colorPrimary\n  });\n};\nexport default genStyleHooks('Tree', (token, {\n  prefixCls\n}) => [{\n  [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n}, genTreeStyle(prefixCls, token), genCollapseMotion(token)], prepareComponentToken);"]},"metadata":{},"sourceType":"module"}