{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React from 'react';\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport initCollapseMotion from '../_util/motion';\nimport { ConfigContext } from '../config-provider';\nimport { useToken } from '../theme/internal';\nimport useStyle from './style';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport SwitcherIconCom from './utils/iconUtil';\nvar Tree = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _a;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual,\n      tree = _React$useContext.tree;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      _props$showIcon = props.showIcon,\n      showIcon = _props$showIcon === void 0 ? false : _props$showIcon,\n      showLine = props.showLine,\n      switcherIcon = props.switcherIcon,\n      switcherLoadingIcon = props.switcherLoadingIcon,\n      _props$blockNode = props.blockNode,\n      blockNode = _props$blockNode === void 0 ? false : _props$blockNode,\n      children = props.children,\n      _props$checkable = props.checkable,\n      checkable = _props$checkable === void 0 ? false : _props$checkable,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? true : _props$selectable,\n      draggable = props.draggable,\n      customMotion = props.motion,\n      style = props.style;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  var rootPrefixCls = getPrefixCls();\n  var motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  var newProps = Object.assign(Object.assign({}, props), {\n    checkable: checkable,\n    selectable: selectable,\n    showIcon: showIcon,\n    motion: motion,\n    blockNode: blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender: dropIndicatorRender\n  });\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 3),\n      wrapCSSVar = _useStyle2[0],\n      hashId = _useStyle2[1],\n      cssVarCls = _useStyle2[2];\n\n  var _useToken = useToken(),\n      _useToken2 = _slicedToArray(_useToken, 2),\n      token = _useToken2[1];\n\n  var itemHeight = token.paddingXS / 2 + (((_a = token.Tree) === null || _a === void 0 ? void 0 : _a.titleHeight) || token.controlHeightSM);\n  var draggableConfig = React.useMemo(function () {\n    if (!draggable) {\n      return false;\n    }\n\n    var mergedDraggable = {};\n\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n\n    return mergedDraggable;\n  }, [draggable]);\n\n  var renderSwitcherIcon = function renderSwitcherIcon(nodeProps) {\n    return /*#__PURE__*/React.createElement(SwitcherIconCom, {\n      prefixCls: prefixCls,\n      switcherIcon: switcherIcon,\n      switcherLoadingIcon: switcherLoadingIcon,\n      treeNodeProps: nodeProps,\n      showLine: showLine\n    });\n  };\n\n  return wrapCSSVar(\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(RcTree, Object.assign({\n    itemHeight: itemHeight,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    // newProps may contain style so declare style below it\n    style: Object.assign(Object.assign({}, tree === null || tree === void 0 ? void 0 : tree.style), style),\n    prefixCls: prefixCls,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-unselectable\"), !selectable), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), tree === null || tree === void 0 ? void 0 : tree.className, className, hashId, cssVarCls),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-checkbox-inner\")\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: renderSwitcherIcon,\n    draggable: draggableConfig\n  }), children));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Tree.displayName = 'Tree';\n}\n\nexport default Tree;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/tree/Tree.js"],"names":["React","HolderOutlined","classNames","RcTree","initCollapseMotion","ConfigContext","useToken","useStyle","dropIndicatorRender","SwitcherIconCom","Tree","forwardRef","props","ref","_a","useContext","getPrefixCls","direction","virtual","tree","customizePrefixCls","prefixCls","className","showIcon","showLine","switcherIcon","switcherLoadingIcon","blockNode","children","checkable","selectable","draggable","customMotion","motion","style","rootPrefixCls","Object","assign","motionAppear","newProps","Boolean","wrapCSSVar","hashId","cssVarCls","token","itemHeight","paddingXS","titleHeight","controlHeightSM","draggableConfig","useMemo","mergedDraggable","nodeDraggable","icon","createElement","renderSwitcherIcon","nodeProps","treeNodeProps","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport initCollapseMotion from '../_util/motion';\nimport { ConfigContext } from '../config-provider';\nimport { useToken } from '../theme/internal';\nimport useStyle from './style';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport SwitcherIconCom from './utils/iconUtil';\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a;\n  const {\n    getPrefixCls,\n    direction,\n    virtual,\n    tree\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    showIcon = false,\n    showLine,\n    switcherIcon,\n    switcherLoadingIcon,\n    blockNode = false,\n    children,\n    checkable = false,\n    selectable = true,\n    draggable,\n    motion: customMotion,\n    style\n  } = props;\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  const newProps = Object.assign(Object.assign({}, props), {\n    checkable,\n    selectable,\n    showIcon,\n    motion,\n    blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender\n  });\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const [, token] = useToken();\n  const itemHeight = token.paddingXS / 2 + (((_a = token.Tree) === null || _a === void 0 ? void 0 : _a.titleHeight) || token.controlHeightSM);\n  const draggableConfig = React.useMemo(() => {\n    if (!draggable) {\n      return false;\n    }\n    let mergedDraggable = {};\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n      default:\n        break;\n      // Do nothing\n    }\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n    return mergedDraggable;\n  }, [draggable]);\n  const renderSwitcherIcon = nodeProps => (/*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: prefixCls,\n    switcherIcon: switcherIcon,\n    switcherLoadingIcon: switcherLoadingIcon,\n    treeNodeProps: nodeProps,\n    showLine: showLine\n  }));\n  return wrapCSSVar(\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(RcTree, Object.assign({\n    itemHeight: itemHeight,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    // newProps may contain style so declare style below it\n    style: Object.assign(Object.assign({}, tree === null || tree === void 0 ? void 0 : tree.style), style),\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode,\n      [`${prefixCls}-unselectable`]: !selectable,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, tree === null || tree === void 0 ? void 0 : tree.className, className, hashId, cssVarCls),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: renderSwitcherIcon,\n    draggable: draggableConfig\n  }), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Tree.displayName = 'Tree';\n}\nexport default Tree;"]},"metadata":{},"sourceType":"module"}