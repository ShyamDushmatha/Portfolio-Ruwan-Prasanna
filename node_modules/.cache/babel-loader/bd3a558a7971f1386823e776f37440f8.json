{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Item } from 'rc-menu';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { cloneElement } from '../_util/reactNode';\nimport { SiderContext } from '../layout/Sider';\nimport Tooltip from '../tooltip';\nimport MenuContext from './MenuContext';\n\nvar MenuItem = function MenuItem(props) {\n  var _classNames2;\n\n  var _a;\n\n  var className = props.className,\n      children = props.children,\n      icon = props.icon,\n      title = props.title,\n      danger = props.danger,\n      extra = props.extra;\n\n  var _React$useContext = React.useContext(MenuContext),\n      prefixCls = _React$useContext.prefixCls,\n      firstLevel = _React$useContext.firstLevel,\n      direction = _React$useContext.direction,\n      disableMenuItemTitleTooltip = _React$useContext.disableMenuItemTitleTooltip,\n      isInlineCollapsed = _React$useContext.inlineCollapsed;\n\n  var renderItemChildren = function renderItemChildren(inlineCollapsed) {\n    var label = children === null || children === void 0 ? void 0 : children[0];\n    var wrapNode = /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(prefixCls, \"-title-content\"), _defineProperty({}, \"\".concat(prefixCls, \"-title-content-with-extra\"), !!extra || extra === 0))\n    }, children); // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n\n    if (!icon || /*#__PURE__*/React.isValidElement(children) && children.type === 'span') {\n      if (children && inlineCollapsed && firstLevel && typeof label === 'string') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-inline-collapsed-noicon\")\n        }, label.charAt(0));\n      }\n    }\n\n    return wrapNode;\n  };\n\n  var _React$useContext2 = React.useContext(SiderContext),\n      siderCollapsed = _React$useContext2.siderCollapsed;\n\n  var tooltipTitle = title;\n\n  if (typeof title === 'undefined') {\n    tooltipTitle = firstLevel ? children : '';\n  } else if (title === false) {\n    tooltipTitle = '';\n  }\n\n  var tooltipProps = {\n    title: tooltipTitle\n  };\n\n  if (!siderCollapsed && !isInlineCollapsed) {\n    tooltipProps.title = null; // Reset `open` to fix control mode tooltip display not correct\n    // ref: https://github.com/ant-design/ant-design/issues/16742\n\n    tooltipProps.open = false;\n  }\n\n  var childrenLength = toArray(children).length;\n  var returnNode = /*#__PURE__*/React.createElement(Item, Object.assign({}, omit(props, ['title', 'icon', 'danger']), {\n    className: classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-danger\"), danger), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-only-child\"), (icon ? childrenLength + 1 : childrenLength) === 1), _classNames2), className),\n    title: typeof title === 'string' ? title : undefined\n  }), cloneElement(icon, {\n    className: classNames( /*#__PURE__*/React.isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', \"\".concat(prefixCls, \"-item-icon\"))\n  }), renderItemChildren(isInlineCollapsed));\n\n  if (!disableMenuItemTitleTooltip) {\n    returnNode = /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps, {\n      placement: direction === 'rtl' ? 'left' : 'right',\n      classNames: {\n        root: \"\".concat(prefixCls, \"-inline-collapsed-tooltip\")\n      }\n    }), returnNode);\n  }\n\n  return returnNode;\n};\n\nexport default MenuItem;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/menu/MenuItem.js"],"names":["React","classNames","Item","toArray","omit","cloneElement","SiderContext","Tooltip","MenuContext","MenuItem","props","_a","className","children","icon","title","danger","extra","useContext","prefixCls","firstLevel","direction","disableMenuItemTitleTooltip","isInlineCollapsed","inlineCollapsed","renderItemChildren","label","wrapNode","createElement","isValidElement","type","charAt","siderCollapsed","tooltipTitle","tooltipProps","open","childrenLength","length","returnNode","Object","assign","undefined","placement","root"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Item } from 'rc-menu';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { cloneElement } from '../_util/reactNode';\nimport { SiderContext } from '../layout/Sider';\nimport Tooltip from '../tooltip';\nimport MenuContext from './MenuContext';\nconst MenuItem = props => {\n  var _a;\n  const {\n    className,\n    children,\n    icon,\n    title,\n    danger,\n    extra\n  } = props;\n  const {\n    prefixCls,\n    firstLevel,\n    direction,\n    disableMenuItemTitleTooltip,\n    inlineCollapsed: isInlineCollapsed\n  } = React.useContext(MenuContext);\n  const renderItemChildren = inlineCollapsed => {\n    const label = children === null || children === void 0 ? void 0 : children[0];\n    const wrapNode = /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(`${prefixCls}-title-content`, {\n        [`${prefixCls}-title-content-with-extra`]: !!extra || extra === 0\n      })\n    }, children);\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    if (!icon || /*#__PURE__*/React.isValidElement(children) && children.type === 'span') {\n      if (children && inlineCollapsed && firstLevel && typeof label === 'string') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: `${prefixCls}-inline-collapsed-noicon`\n        }, label.charAt(0));\n      }\n    }\n    return wrapNode;\n  };\n  const {\n    siderCollapsed\n  } = React.useContext(SiderContext);\n  let tooltipTitle = title;\n  if (typeof title === 'undefined') {\n    tooltipTitle = firstLevel ? children : '';\n  } else if (title === false) {\n    tooltipTitle = '';\n  }\n  const tooltipProps = {\n    title: tooltipTitle\n  };\n  if (!siderCollapsed && !isInlineCollapsed) {\n    tooltipProps.title = null;\n    // Reset `open` to fix control mode tooltip display not correct\n    // ref: https://github.com/ant-design/ant-design/issues/16742\n    tooltipProps.open = false;\n  }\n  const childrenLength = toArray(children).length;\n  let returnNode = /*#__PURE__*/React.createElement(Item, Object.assign({}, omit(props, ['title', 'icon', 'danger']), {\n    className: classNames({\n      [`${prefixCls}-item-danger`]: danger,\n      [`${prefixCls}-item-only-child`]: (icon ? childrenLength + 1 : childrenLength) === 1\n    }, className),\n    title: typeof title === 'string' ? title : undefined\n  }), cloneElement(icon, {\n    className: classNames(/*#__PURE__*/React.isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', `${prefixCls}-item-icon`)\n  }), renderItemChildren(isInlineCollapsed));\n  if (!disableMenuItemTitleTooltip) {\n    returnNode = /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps, {\n      placement: direction === 'rtl' ? 'left' : 'right',\n      classNames: {\n        root: `${prefixCls}-inline-collapsed-tooltip`\n      }\n    }), returnNode);\n  }\n  return returnNode;\n};\nexport default MenuItem;"]},"metadata":{},"sourceType":"module"}