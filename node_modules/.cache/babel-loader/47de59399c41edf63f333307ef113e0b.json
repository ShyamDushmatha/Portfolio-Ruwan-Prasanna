{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { collectScroller, getWin } from \"../util\";\nexport default function useWatch(open, target, popup, onAlign, onScroll) {\n  useLayoutEffect(function () {\n    if (open && target && popup) {\n      var notifyScroll = function notifyScroll() {\n        onAlign();\n        onScroll();\n      };\n\n      var targetElement = target;\n      var popupElement = popup;\n      var targetScrollList = collectScroller(targetElement);\n      var popupScrollList = collectScroller(popupElement);\n      var win = getWin(popupElement);\n      var mergedList = new Set([win].concat(_toConsumableArray(targetScrollList), _toConsumableArray(popupScrollList)));\n      mergedList.forEach(function (scroller) {\n        scroller.addEventListener('scroll', notifyScroll, {\n          passive: true\n        });\n      });\n      win.addEventListener('resize', notifyScroll, {\n        passive: true\n      }); // First time always do align\n\n      onAlign();\n      return function () {\n        mergedList.forEach(function (scroller) {\n          scroller.removeEventListener('scroll', notifyScroll);\n          win.removeEventListener('resize', notifyScroll);\n        });\n      };\n    }\n  }, [open, target, popup]);\n}","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@rc-component/trigger/es/hooks/useWatch.js"],"names":["_toConsumableArray","useLayoutEffect","collectScroller","getWin","useWatch","open","target","popup","onAlign","onScroll","notifyScroll","targetElement","popupElement","targetScrollList","popupScrollList","win","mergedList","Set","concat","forEach","scroller","addEventListener","passive","removeEventListener"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,eAAT,EAA0BC,MAA1B,QAAwC,SAAxC;AACA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,OAAvC,EAAgDC,QAAhD,EAA0D;AACvER,EAAAA,eAAe,CAAC,YAAY;AAC1B,QAAII,IAAI,IAAIC,MAAR,IAAkBC,KAAtB,EAA6B;AAAA,UAOlBG,YAPkB,GAO3B,SAASA,YAAT,GAAwB;AACtBF,QAAAA,OAAO;AACPC,QAAAA,QAAQ;AACT,OAV0B;;AAC3B,UAAIE,aAAa,GAAGL,MAApB;AACA,UAAIM,YAAY,GAAGL,KAAnB;AACA,UAAIM,gBAAgB,GAAGX,eAAe,CAACS,aAAD,CAAtC;AACA,UAAIG,eAAe,GAAGZ,eAAe,CAACU,YAAD,CAArC;AACA,UAAIG,GAAG,GAAGZ,MAAM,CAACS,YAAD,CAAhB;AACA,UAAII,UAAU,GAAG,IAAIC,GAAJ,CAAQ,CAACF,GAAD,EAAMG,MAAN,CAAalB,kBAAkB,CAACa,gBAAD,CAA/B,EAAmDb,kBAAkB,CAACc,eAAD,CAArE,CAAR,CAAjB;AAKAE,MAAAA,UAAU,CAACG,OAAX,CAAmB,UAAUC,QAAV,EAAoB;AACrCA,QAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoCX,YAApC,EAAkD;AAChDY,UAAAA,OAAO,EAAE;AADuC,SAAlD;AAGD,OAJD;AAKAP,MAAAA,GAAG,CAACM,gBAAJ,CAAqB,QAArB,EAA+BX,YAA/B,EAA6C;AAC3CY,QAAAA,OAAO,EAAE;AADkC,OAA7C,EAhB2B,CAoB3B;;AACAd,MAAAA,OAAO;AACP,aAAO,YAAY;AACjBQ,QAAAA,UAAU,CAACG,OAAX,CAAmB,UAAUC,QAAV,EAAoB;AACrCA,UAAAA,QAAQ,CAACG,mBAAT,CAA6B,QAA7B,EAAuCb,YAAvC;AACAK,UAAAA,GAAG,CAACQ,mBAAJ,CAAwB,QAAxB,EAAkCb,YAAlC;AACD,SAHD;AAID,OALD;AAMD;AACF,GA9Bc,EA8BZ,CAACL,IAAD,EAAOC,MAAP,EAAeC,KAAf,CA9BY,CAAf;AA+BD","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { collectScroller, getWin } from \"../util\";\nexport default function useWatch(open, target, popup, onAlign, onScroll) {\n  useLayoutEffect(function () {\n    if (open && target && popup) {\n      var targetElement = target;\n      var popupElement = popup;\n      var targetScrollList = collectScroller(targetElement);\n      var popupScrollList = collectScroller(popupElement);\n      var win = getWin(popupElement);\n      var mergedList = new Set([win].concat(_toConsumableArray(targetScrollList), _toConsumableArray(popupScrollList)));\n      function notifyScroll() {\n        onAlign();\n        onScroll();\n      }\n      mergedList.forEach(function (scroller) {\n        scroller.addEventListener('scroll', notifyScroll, {\n          passive: true\n        });\n      });\n      win.addEventListener('resize', notifyScroll, {\n        passive: true\n      });\n\n      // First time always do align\n      onAlign();\n      return function () {\n        mergedList.forEach(function (scroller) {\n          scroller.removeEventListener('scroll', notifyScroll);\n          win.removeEventListener('resize', notifyScroll);\n        });\n      };\n    }\n  }, [open, target, popup]);\n}"]},"metadata":{},"sourceType":"module"}