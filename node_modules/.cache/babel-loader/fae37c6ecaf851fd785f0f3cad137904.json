{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { devUseWarning } from '../../../_util/warning';\nimport { getColumnKey, getColumnPos, renderColumnTitle } from '../../util';\nimport FilterDropdown, { flattenKeys } from './FilterDropdown';\n\nvar collectFilterStates = function collectFilterStates(columns, init, pos) {\n  var filterStates = [];\n  (columns || []).forEach(function (column, index) {\n    var _a;\n\n    var columnPos = getColumnPos(index, pos);\n    var filterDropdownIsDefined = column.filterDropdown !== undefined;\n\n    if (column.filters || filterDropdownIsDefined || 'onFilter' in column) {\n      if ('filteredValue' in column) {\n        // Controlled\n        var filteredValues = column.filteredValue;\n\n        if (!filterDropdownIsDefined) {\n          filteredValues = (_a = filteredValues === null || filteredValues === void 0 ? void 0 : filteredValues.map(String)) !== null && _a !== void 0 ? _a : filteredValues;\n        }\n\n        filterStates.push({\n          column: column,\n          key: getColumnKey(column, columnPos),\n          filteredKeys: filteredValues,\n          forceFiltered: column.filtered\n        });\n      } else {\n        // Uncontrolled\n        filterStates.push({\n          column: column,\n          key: getColumnKey(column, columnPos),\n          filteredKeys: init && column.defaultFilteredValue ? column.defaultFilteredValue : undefined,\n          forceFiltered: column.filtered\n        });\n      }\n    }\n\n    if ('children' in column) {\n      filterStates = [].concat(_toConsumableArray(filterStates), _toConsumableArray(collectFilterStates(column.children, init, columnPos)));\n    }\n  });\n  return filterStates;\n};\n\nfunction injectFilter(prefixCls, dropdownPrefixCls, columns, filterStates, locale, triggerFilter, getPopupContainer, pos, rootClassName) {\n  return columns.map(function (column, index) {\n    var columnPos = getColumnPos(index, pos);\n    var _column$filterOnClose = column.filterOnClose,\n        filterOnClose = _column$filterOnClose === void 0 ? true : _column$filterOnClose,\n        _column$filterMultipl = column.filterMultiple,\n        filterMultiple = _column$filterMultipl === void 0 ? true : _column$filterMultipl,\n        filterMode = column.filterMode,\n        filterSearch = column.filterSearch;\n    var newColumn = column;\n\n    if (newColumn.filters || newColumn.filterDropdown) {\n      var columnKey = getColumnKey(newColumn, columnPos);\n      var filterState = filterStates.find(function (_ref) {\n        var key = _ref.key;\n        return columnKey === key;\n      });\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        title: function title(renderProps) {\n          return /*#__PURE__*/React.createElement(FilterDropdown, {\n            tablePrefixCls: prefixCls,\n            prefixCls: \"\".concat(prefixCls, \"-filter\"),\n            dropdownPrefixCls: dropdownPrefixCls,\n            column: newColumn,\n            columnKey: columnKey,\n            filterState: filterState,\n            filterOnClose: filterOnClose,\n            filterMultiple: filterMultiple,\n            filterMode: filterMode,\n            filterSearch: filterSearch,\n            triggerFilter: triggerFilter,\n            locale: locale,\n            getPopupContainer: getPopupContainer,\n            rootClassName: rootClassName\n          }, renderColumnTitle(column.title, renderProps));\n        }\n      });\n    }\n\n    if ('children' in newColumn) {\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        children: injectFilter(prefixCls, dropdownPrefixCls, newColumn.children, filterStates, locale, triggerFilter, getPopupContainer, columnPos, rootClassName)\n      });\n    }\n\n    return newColumn;\n  });\n}\n\nvar generateFilterInfo = function generateFilterInfo(filterStates) {\n  var currentFilters = {};\n  filterStates.forEach(function (_ref2) {\n    var key = _ref2.key,\n        filteredKeys = _ref2.filteredKeys,\n        column = _ref2.column;\n    var keyAsString = key;\n    var filters = column.filters,\n        filterDropdown = column.filterDropdown;\n\n    if (filterDropdown) {\n      currentFilters[keyAsString] = filteredKeys || null;\n    } else if (Array.isArray(filteredKeys)) {\n      var keys = flattenKeys(filters);\n      currentFilters[keyAsString] = keys.filter(function (originKey) {\n        return filteredKeys.includes(String(originKey));\n      });\n    } else {\n      currentFilters[keyAsString] = null;\n    }\n  });\n  return currentFilters;\n};\n\nexport var getFilterData = function getFilterData(data, filterStates, childrenColumnName) {\n  var filterDatas = filterStates.reduce(function (currentData, filterState) {\n    var _filterState$column = filterState.column,\n        onFilter = _filterState$column.onFilter,\n        filters = _filterState$column.filters,\n        filteredKeys = filterState.filteredKeys;\n\n    if (onFilter && filteredKeys && filteredKeys.length) {\n      return currentData // shallow copy\n      .map(function (record) {\n        return Object.assign({}, record);\n      }).filter(function (record) {\n        return filteredKeys.some(function (key) {\n          var keys = flattenKeys(filters);\n          var keyIndex = keys.findIndex(function (k) {\n            return String(k) === String(key);\n          });\n          var realKey = keyIndex !== -1 ? keys[keyIndex] : key; // filter children\n\n          if (record[childrenColumnName]) {\n            record[childrenColumnName] = getFilterData(record[childrenColumnName], filterStates, childrenColumnName);\n          }\n\n          return onFilter(realKey, record);\n        });\n      });\n    }\n\n    return currentData;\n  }, data);\n  return filterDatas;\n};\n\nvar getMergedColumns = function getMergedColumns(rawMergedColumns) {\n  return rawMergedColumns.flatMap(function (column) {\n    if ('children' in column) {\n      return [column].concat(_toConsumableArray(getMergedColumns(column.children || [])));\n    }\n\n    return [column];\n  });\n};\n\nvar useFilter = function useFilter(props) {\n  var prefixCls = props.prefixCls,\n      dropdownPrefixCls = props.dropdownPrefixCls,\n      rawMergedColumns = props.mergedColumns,\n      onFilterChange = props.onFilterChange,\n      getPopupContainer = props.getPopupContainer,\n      tableLocale = props.locale,\n      rootClassName = props.rootClassName;\n  var warning = devUseWarning('Table');\n  var mergedColumns = React.useMemo(function () {\n    return getMergedColumns(rawMergedColumns || []);\n  }, [rawMergedColumns]);\n\n  var _React$useState = React.useState(function () {\n    return collectFilterStates(mergedColumns, true);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      filterStates = _React$useState2[0],\n      setFilterStates = _React$useState2[1];\n\n  var mergedFilterStates = React.useMemo(function () {\n    var collectedStates = collectFilterStates(mergedColumns, false);\n\n    if (collectedStates.length === 0) {\n      return collectedStates;\n    }\n\n    var filteredKeysIsAllNotControlled = true;\n    var filteredKeysIsAllControlled = true;\n    collectedStates.forEach(function (_ref3) {\n      var filteredKeys = _ref3.filteredKeys;\n\n      if (filteredKeys !== undefined) {\n        filteredKeysIsAllNotControlled = false;\n      } else {\n        filteredKeysIsAllControlled = false;\n      }\n    }); // Return if not controlled\n\n    if (filteredKeysIsAllNotControlled) {\n      // Filter column may have been removed\n      var keyList = (mergedColumns || []).map(function (column, index) {\n        return getColumnKey(column, getColumnPos(index));\n      });\n      return filterStates.filter(function (_ref4) {\n        var key = _ref4.key;\n        return keyList.includes(key);\n      }).map(function (item) {\n        var col = mergedColumns[keyList.findIndex(function (key) {\n          return key === item.key;\n        })];\n        return Object.assign(Object.assign({}, item), {\n          column: Object.assign(Object.assign({}, item.column), col),\n          forceFiltered: col.filtered\n        });\n      });\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(filteredKeysIsAllControlled, 'usage', 'Columns should all contain `filteredValue` or not contain `filteredValue`.') : void 0;\n    return collectedStates;\n  }, [mergedColumns, filterStates]);\n  var filters = React.useMemo(function () {\n    return generateFilterInfo(mergedFilterStates);\n  }, [mergedFilterStates]);\n\n  var triggerFilter = function triggerFilter(filterState) {\n    var newFilterStates = mergedFilterStates.filter(function (_ref5) {\n      var key = _ref5.key;\n      return key !== filterState.key;\n    });\n    newFilterStates.push(filterState);\n    setFilterStates(newFilterStates);\n    onFilterChange(generateFilterInfo(newFilterStates), newFilterStates);\n  };\n\n  var transformColumns = function transformColumns(innerColumns) {\n    return injectFilter(prefixCls, dropdownPrefixCls, innerColumns, mergedFilterStates, tableLocale, triggerFilter, getPopupContainer, undefined, rootClassName);\n  };\n\n  return [transformColumns, mergedFilterStates, filters];\n};\n\nexport { flattenKeys };\nexport default useFilter;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/table/hooks/useFilter/index.js"],"names":["_toConsumableArray","React","devUseWarning","getColumnKey","getColumnPos","renderColumnTitle","FilterDropdown","flattenKeys","collectFilterStates","columns","init","pos","filterStates","forEach","column","index","_a","columnPos","filterDropdownIsDefined","filterDropdown","undefined","filters","filteredValues","filteredValue","map","String","push","key","filteredKeys","forceFiltered","filtered","defaultFilteredValue","concat","children","injectFilter","prefixCls","dropdownPrefixCls","locale","triggerFilter","getPopupContainer","rootClassName","filterOnClose","filterMultiple","filterMode","filterSearch","newColumn","columnKey","filterState","find","Object","assign","title","renderProps","createElement","tablePrefixCls","generateFilterInfo","currentFilters","keyAsString","Array","isArray","keys","filter","originKey","includes","getFilterData","data","childrenColumnName","filterDatas","reduce","currentData","onFilter","length","record","some","keyIndex","findIndex","k","realKey","getMergedColumns","rawMergedColumns","flatMap","useFilter","props","mergedColumns","onFilterChange","tableLocale","warning","useMemo","useState","setFilterStates","mergedFilterStates","collectedStates","filteredKeysIsAllNotControlled","filteredKeysIsAllControlled","keyList","item","col","process","env","NODE_ENV","newFilterStates","transformColumns","innerColumns"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { devUseWarning } from '../../../_util/warning';\nimport { getColumnKey, getColumnPos, renderColumnTitle } from '../../util';\nimport FilterDropdown, { flattenKeys } from './FilterDropdown';\nconst collectFilterStates = (columns, init, pos) => {\n  let filterStates = [];\n  (columns || []).forEach((column, index) => {\n    var _a;\n    const columnPos = getColumnPos(index, pos);\n    const filterDropdownIsDefined = column.filterDropdown !== undefined;\n    if (column.filters || filterDropdownIsDefined || 'onFilter' in column) {\n      if ('filteredValue' in column) {\n        // Controlled\n        let filteredValues = column.filteredValue;\n        if (!filterDropdownIsDefined) {\n          filteredValues = (_a = filteredValues === null || filteredValues === void 0 ? void 0 : filteredValues.map(String)) !== null && _a !== void 0 ? _a : filteredValues;\n        }\n        filterStates.push({\n          column,\n          key: getColumnKey(column, columnPos),\n          filteredKeys: filteredValues,\n          forceFiltered: column.filtered\n        });\n      } else {\n        // Uncontrolled\n        filterStates.push({\n          column,\n          key: getColumnKey(column, columnPos),\n          filteredKeys: init && column.defaultFilteredValue ? column.defaultFilteredValue : undefined,\n          forceFiltered: column.filtered\n        });\n      }\n    }\n    if ('children' in column) {\n      filterStates = [].concat(_toConsumableArray(filterStates), _toConsumableArray(collectFilterStates(column.children, init, columnPos)));\n    }\n  });\n  return filterStates;\n};\nfunction injectFilter(prefixCls, dropdownPrefixCls, columns, filterStates, locale, triggerFilter, getPopupContainer, pos, rootClassName) {\n  return columns.map((column, index) => {\n    const columnPos = getColumnPos(index, pos);\n    const {\n      filterOnClose = true,\n      filterMultiple = true,\n      filterMode,\n      filterSearch\n    } = column;\n    let newColumn = column;\n    if (newColumn.filters || newColumn.filterDropdown) {\n      const columnKey = getColumnKey(newColumn, columnPos);\n      const filterState = filterStates.find(({\n        key\n      }) => columnKey === key);\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        title: renderProps => (/*#__PURE__*/React.createElement(FilterDropdown, {\n          tablePrefixCls: prefixCls,\n          prefixCls: `${prefixCls}-filter`,\n          dropdownPrefixCls: dropdownPrefixCls,\n          column: newColumn,\n          columnKey: columnKey,\n          filterState: filterState,\n          filterOnClose: filterOnClose,\n          filterMultiple: filterMultiple,\n          filterMode: filterMode,\n          filterSearch: filterSearch,\n          triggerFilter: triggerFilter,\n          locale: locale,\n          getPopupContainer: getPopupContainer,\n          rootClassName: rootClassName\n        }, renderColumnTitle(column.title, renderProps)))\n      });\n    }\n    if ('children' in newColumn) {\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        children: injectFilter(prefixCls, dropdownPrefixCls, newColumn.children, filterStates, locale, triggerFilter, getPopupContainer, columnPos, rootClassName)\n      });\n    }\n    return newColumn;\n  });\n}\nconst generateFilterInfo = filterStates => {\n  const currentFilters = {};\n  filterStates.forEach(({\n    key,\n    filteredKeys,\n    column\n  }) => {\n    const keyAsString = key;\n    const {\n      filters,\n      filterDropdown\n    } = column;\n    if (filterDropdown) {\n      currentFilters[keyAsString] = filteredKeys || null;\n    } else if (Array.isArray(filteredKeys)) {\n      const keys = flattenKeys(filters);\n      currentFilters[keyAsString] = keys.filter(originKey => filteredKeys.includes(String(originKey)));\n    } else {\n      currentFilters[keyAsString] = null;\n    }\n  });\n  return currentFilters;\n};\nexport const getFilterData = (data, filterStates, childrenColumnName) => {\n  const filterDatas = filterStates.reduce((currentData, filterState) => {\n    const {\n      column: {\n        onFilter,\n        filters\n      },\n      filteredKeys\n    } = filterState;\n    if (onFilter && filteredKeys && filteredKeys.length) {\n      return currentData\n      // shallow copy\n      .map(record => Object.assign({}, record)).filter(record => filteredKeys.some(key => {\n        const keys = flattenKeys(filters);\n        const keyIndex = keys.findIndex(k => String(k) === String(key));\n        const realKey = keyIndex !== -1 ? keys[keyIndex] : key;\n        // filter children\n        if (record[childrenColumnName]) {\n          record[childrenColumnName] = getFilterData(record[childrenColumnName], filterStates, childrenColumnName);\n        }\n        return onFilter(realKey, record);\n      }));\n    }\n    return currentData;\n  }, data);\n  return filterDatas;\n};\nconst getMergedColumns = rawMergedColumns => rawMergedColumns.flatMap(column => {\n  if ('children' in column) {\n    return [column].concat(_toConsumableArray(getMergedColumns(column.children || [])));\n  }\n  return [column];\n});\nconst useFilter = props => {\n  const {\n    prefixCls,\n    dropdownPrefixCls,\n    mergedColumns: rawMergedColumns,\n    onFilterChange,\n    getPopupContainer,\n    locale: tableLocale,\n    rootClassName\n  } = props;\n  const warning = devUseWarning('Table');\n  const mergedColumns = React.useMemo(() => getMergedColumns(rawMergedColumns || []), [rawMergedColumns]);\n  const [filterStates, setFilterStates] = React.useState(() => collectFilterStates(mergedColumns, true));\n  const mergedFilterStates = React.useMemo(() => {\n    const collectedStates = collectFilterStates(mergedColumns, false);\n    if (collectedStates.length === 0) {\n      return collectedStates;\n    }\n    let filteredKeysIsAllNotControlled = true;\n    let filteredKeysIsAllControlled = true;\n    collectedStates.forEach(({\n      filteredKeys\n    }) => {\n      if (filteredKeys !== undefined) {\n        filteredKeysIsAllNotControlled = false;\n      } else {\n        filteredKeysIsAllControlled = false;\n      }\n    });\n    // Return if not controlled\n    if (filteredKeysIsAllNotControlled) {\n      // Filter column may have been removed\n      const keyList = (mergedColumns || []).map((column, index) => getColumnKey(column, getColumnPos(index)));\n      return filterStates.filter(({\n        key\n      }) => keyList.includes(key)).map(item => {\n        const col = mergedColumns[keyList.findIndex(key => key === item.key)];\n        return Object.assign(Object.assign({}, item), {\n          column: Object.assign(Object.assign({}, item.column), col),\n          forceFiltered: col.filtered\n        });\n      });\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(filteredKeysIsAllControlled, 'usage', 'Columns should all contain `filteredValue` or not contain `filteredValue`.') : void 0;\n    return collectedStates;\n  }, [mergedColumns, filterStates]);\n  const filters = React.useMemo(() => generateFilterInfo(mergedFilterStates), [mergedFilterStates]);\n  const triggerFilter = filterState => {\n    const newFilterStates = mergedFilterStates.filter(({\n      key\n    }) => key !== filterState.key);\n    newFilterStates.push(filterState);\n    setFilterStates(newFilterStates);\n    onFilterChange(generateFilterInfo(newFilterStates), newFilterStates);\n  };\n  const transformColumns = innerColumns => injectFilter(prefixCls, dropdownPrefixCls, innerColumns, mergedFilterStates, tableLocale, triggerFilter, getPopupContainer, undefined, rootClassName);\n  return [transformColumns, mergedFilterStates, filters];\n};\nexport { flattenKeys };\nexport default useFilter;"]},"metadata":{},"sourceType":"module"}