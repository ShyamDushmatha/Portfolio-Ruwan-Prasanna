{"ast":null,"code":"import _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { unit } from '@ant-design/cssinjs';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal'; // ============================== Styles ==============================\n\nexport var genCheckboxStyle = function genCheckboxStyle(token) {\n  var _Object$assign2, _Object$assign3, _ref, _$concat$concat, _ref2, _ref3, _, _$concat3, _ref5;\n\n  var checkboxCls = token.checkboxCls;\n  var wrapperCls = \"\".concat(checkboxCls, \"-wrapper\");\n  return [(_ref = {}, _defineProperty(_ref, \"\".concat(checkboxCls, \"-group\"), Object.assign(Object.assign({}, resetComponent(token)), _defineProperty({\n    display: 'inline-flex',\n    flexWrap: 'wrap',\n    columnGap: token.marginXS\n  }, \"> \".concat(token.antCls, \"-row\"), {\n    flex: 1\n  }))), _defineProperty(_ref, wrapperCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign2 = {\n    display: 'inline-flex',\n    alignItems: 'baseline',\n    cursor: 'pointer',\n    // Fix checkbox & radio in flex align #30260\n    '&:after': {\n      display: 'inline-block',\n      width: 0,\n      overflow: 'hidden',\n      content: \"'\\\\a0'\"\n    }\n  }, _defineProperty(_Object$assign2, \"& + \".concat(wrapperCls), {\n    marginInlineStart: 0\n  }), _defineProperty(_Object$assign2, \"&\".concat(wrapperCls, \"-in-form-item\"), {\n    'input[type=\"checkbox\"]': {\n      width: 14,\n      // FIXME: magic\n      height: 14 // FIXME: magic\n\n    }\n  }), _Object$assign2))), _defineProperty(_ref, checkboxCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign3 = {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    lineHeight: 1,\n    cursor: 'pointer',\n    borderRadius: token.borderRadiusSM,\n    // To make alignment right when `controlHeight` is changed\n    // Ref: https://github.com/ant-design/ant-design/issues/41564\n    alignSelf: 'center'\n  }, _defineProperty(_Object$assign3, \"\".concat(checkboxCls, \"-input\"), _defineProperty({\n    position: 'absolute',\n    // Since baseline align will get additional space offset,\n    // we need to move input to top to make it align with text.\n    // Ref: https://github.com/ant-design/ant-design/issues/38926#issuecomment-1486137799\n    inset: 0,\n    zIndex: 1,\n    cursor: 'pointer',\n    opacity: 0,\n    margin: 0\n  }, \"&:focus-visible + \".concat(checkboxCls, \"-inner\"), Object.assign({}, genFocusOutline(token)))), _defineProperty(_Object$assign3, \"\".concat(checkboxCls, \"-inner\"), {\n    boxSizing: 'border-box',\n    display: 'block',\n    width: token.checkboxSize,\n    height: token.checkboxSize,\n    direction: 'ltr',\n    backgroundColor: token.colorBgContainer,\n    border: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorBorder),\n    borderRadius: token.borderRadiusSM,\n    borderCollapse: 'separate',\n    transition: \"all \".concat(token.motionDurationSlow),\n    '&:after': {\n      boxSizing: 'border-box',\n      position: 'absolute',\n      top: '50%',\n      insetInlineStart: '25%',\n      display: 'table',\n      width: token.calc(token.checkboxSize).div(14).mul(5).equal(),\n      height: token.calc(token.checkboxSize).div(14).mul(8).equal(),\n      border: \"\".concat(unit(token.lineWidthBold), \" solid \").concat(token.colorWhite),\n      borderTop: 0,\n      borderInlineStart: 0,\n      transform: 'rotate(45deg) scale(0) translate(-50%,-50%)',\n      opacity: 0,\n      content: '\"\"',\n      transition: \"all \".concat(token.motionDurationFast, \" \").concat(token.motionEaseInBack, \", opacity \").concat(token.motionDurationFast)\n    }\n  }), _defineProperty(_Object$assign3, '& + span', {\n    paddingInlineStart: token.paddingXS,\n    paddingInlineEnd: token.paddingXS\n  }), _Object$assign3))), _ref), (_ref2 = {}, _defineProperty(_ref2, \"\\n        \".concat(wrapperCls, \":not(\").concat(wrapperCls, \"-disabled),\\n        \").concat(checkboxCls, \":not(\").concat(checkboxCls, \"-disabled)\\n      \"), _defineProperty({}, \"&:hover \".concat(checkboxCls, \"-inner\"), {\n    borderColor: token.colorPrimary\n  })), _defineProperty(_ref2, \"\".concat(wrapperCls, \":not(\").concat(wrapperCls, \"-disabled)\"), (_$concat$concat = {}, _defineProperty(_$concat$concat, \"&:hover \".concat(checkboxCls, \"-checked:not(\").concat(checkboxCls, \"-disabled) \").concat(checkboxCls, \"-inner\"), {\n    backgroundColor: token.colorPrimaryHover,\n    borderColor: 'transparent'\n  }), _defineProperty(_$concat$concat, \"&:hover \".concat(checkboxCls, \"-checked:not(\").concat(checkboxCls, \"-disabled):after\"), {\n    borderColor: token.colorPrimaryHover\n  }), _$concat$concat)), _ref2), (_ref3 = {}, _defineProperty(_ref3, \"\".concat(checkboxCls, \"-checked\"), _defineProperty({}, \"\".concat(checkboxCls, \"-inner\"), {\n    backgroundColor: token.colorPrimary,\n    borderColor: token.colorPrimary,\n    '&:after': {\n      opacity: 1,\n      transform: 'rotate(45deg) scale(1) translate(-50%,-50%)',\n      transition: \"all \".concat(token.motionDurationMid, \" \").concat(token.motionEaseOutBack, \" \").concat(token.motionDurationFast)\n    }\n  })), _defineProperty(_ref3, \"\\n        \".concat(wrapperCls, \"-checked:not(\").concat(wrapperCls, \"-disabled),\\n        \").concat(checkboxCls, \"-checked:not(\").concat(checkboxCls, \"-disabled)\\n      \"), _defineProperty({}, \"&:hover \".concat(checkboxCls, \"-inner\"), {\n    backgroundColor: token.colorPrimaryHover,\n    borderColor: 'transparent'\n  })), _ref3), // ================= Indeterminate =================\n  _defineProperty({}, checkboxCls, {\n    '&-indeterminate': {\n      '&': (_ = {}, _defineProperty(_, \"\".concat(checkboxCls, \"-inner\"), {\n        backgroundColor: \"\".concat(token.colorBgContainer),\n        borderColor: \"\".concat(token.colorBorder),\n        '&:after': {\n          top: '50%',\n          insetInlineStart: '50%',\n          width: token.calc(token.fontSizeLG).div(2).equal(),\n          height: token.calc(token.fontSizeLG).div(2).equal(),\n          backgroundColor: token.colorPrimary,\n          border: 0,\n          transform: 'translate(-50%, -50%) scale(1)',\n          opacity: 1,\n          content: '\"\"'\n        }\n      }), _defineProperty(_, \"&:hover \".concat(checkboxCls, \"-inner\"), {\n        backgroundColor: \"\".concat(token.colorBgContainer),\n        borderColor: \"\".concat(token.colorPrimary)\n      }), _)\n    }\n  }), (_ref5 = {}, _defineProperty(_ref5, \"\".concat(wrapperCls, \"-disabled\"), {\n    cursor: 'not-allowed'\n  }), _defineProperty(_ref5, \"\".concat(checkboxCls, \"-disabled\"), (_$concat3 = {}, _defineProperty(_$concat3, \"&, \".concat(checkboxCls, \"-input\"), {\n    cursor: 'not-allowed',\n    // Disabled for native input to enable Tooltip event handler\n    // ref: https://github.com/ant-design/ant-design/issues/39822#issuecomment-1365075901\n    pointerEvents: 'none'\n  }), _defineProperty(_$concat3, \"\".concat(checkboxCls, \"-inner\"), {\n    background: token.colorBgContainerDisabled,\n    borderColor: token.colorBorder,\n    '&:after': {\n      borderColor: token.colorTextDisabled\n    }\n  }), _defineProperty(_$concat3, '&:after', {\n    display: 'none'\n  }), _defineProperty(_$concat3, '& + span', {\n    color: token.colorTextDisabled\n  }), _defineProperty(_$concat3, \"&\".concat(checkboxCls, \"-indeterminate \").concat(checkboxCls, \"-inner::after\"), {\n    background: token.colorTextDisabled\n  }), _$concat3)), _ref5)];\n}; // ============================== Export ==============================\n\nexport function getStyle(prefixCls, token) {\n  var checkboxToken = mergeToken(token, {\n    checkboxCls: \".\".concat(prefixCls),\n    checkboxSize: token.controlInteractiveSize\n  });\n  return [genCheckboxStyle(checkboxToken)];\n}\nexport default genStyleHooks('Checkbox', function (token, _ref6) {\n  var prefixCls = _ref6.prefixCls;\n  return [getStyle(prefixCls, token)];\n});","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/checkbox/style/index.js"],"names":["unit","genFocusOutline","resetComponent","genStyleHooks","mergeToken","genCheckboxStyle","token","checkboxCls","wrapperCls","Object","assign","display","flexWrap","columnGap","marginXS","antCls","flex","alignItems","cursor","width","overflow","content","marginInlineStart","height","position","whiteSpace","lineHeight","borderRadius","borderRadiusSM","alignSelf","inset","zIndex","opacity","margin","boxSizing","checkboxSize","direction","backgroundColor","colorBgContainer","border","lineWidth","lineType","colorBorder","borderCollapse","transition","motionDurationSlow","top","insetInlineStart","calc","div","mul","equal","lineWidthBold","colorWhite","borderTop","borderInlineStart","transform","motionDurationFast","motionEaseInBack","paddingInlineStart","paddingXS","paddingInlineEnd","borderColor","colorPrimary","colorPrimaryHover","motionDurationMid","motionEaseOutBack","fontSizeLG","pointerEvents","background","colorBgContainerDisabled","colorTextDisabled","color","getStyle","prefixCls","checkboxToken","controlInteractiveSize"],"mappings":"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","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nexport const genCheckboxStyle = token => {\n  const {\n    checkboxCls\n  } = token;\n  const wrapperCls = `${checkboxCls}-wrapper`;\n  return [\n  // ===================== Basic =====================\n  {\n    // Group\n    [`${checkboxCls}-group`]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-flex',\n      flexWrap: 'wrap',\n      columnGap: token.marginXS,\n      // Group > Grid\n      [`> ${token.antCls}-row`]: {\n        flex: 1\n      }\n    }),\n    // Wrapper\n    [wrapperCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-flex',\n      alignItems: 'baseline',\n      cursor: 'pointer',\n      // Fix checkbox & radio in flex align #30260\n      '&:after': {\n        display: 'inline-block',\n        width: 0,\n        overflow: 'hidden',\n        content: \"'\\\\a0'\"\n      },\n      // Checkbox near checkbox\n      [`& + ${wrapperCls}`]: {\n        marginInlineStart: 0\n      },\n      [`&${wrapperCls}-in-form-item`]: {\n        'input[type=\"checkbox\"]': {\n          width: 14,\n          // FIXME: magic\n          height: 14 // FIXME: magic\n        }\n      }\n    }),\n    // Wrapper > Checkbox\n    [checkboxCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      lineHeight: 1,\n      cursor: 'pointer',\n      borderRadius: token.borderRadiusSM,\n      // To make alignment right when `controlHeight` is changed\n      // Ref: https://github.com/ant-design/ant-design/issues/41564\n      alignSelf: 'center',\n      // Wrapper > Checkbox > input\n      [`${checkboxCls}-input`]: {\n        position: 'absolute',\n        // Since baseline align will get additional space offset,\n        // we need to move input to top to make it align with text.\n        // Ref: https://github.com/ant-design/ant-design/issues/38926#issuecomment-1486137799\n        inset: 0,\n        zIndex: 1,\n        cursor: 'pointer',\n        opacity: 0,\n        margin: 0,\n        [`&:focus-visible + ${checkboxCls}-inner`]: Object.assign({}, genFocusOutline(token))\n      },\n      // Wrapper > Checkbox > inner\n      [`${checkboxCls}-inner`]: {\n        boxSizing: 'border-box',\n        display: 'block',\n        width: token.checkboxSize,\n        height: token.checkboxSize,\n        direction: 'ltr',\n        backgroundColor: token.colorBgContainer,\n        border: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,\n        borderRadius: token.borderRadiusSM,\n        borderCollapse: 'separate',\n        transition: `all ${token.motionDurationSlow}`,\n        '&:after': {\n          boxSizing: 'border-box',\n          position: 'absolute',\n          top: '50%',\n          insetInlineStart: '25%',\n          display: 'table',\n          width: token.calc(token.checkboxSize).div(14).mul(5).equal(),\n          height: token.calc(token.checkboxSize).div(14).mul(8).equal(),\n          border: `${unit(token.lineWidthBold)} solid ${token.colorWhite}`,\n          borderTop: 0,\n          borderInlineStart: 0,\n          transform: 'rotate(45deg) scale(0) translate(-50%,-50%)',\n          opacity: 0,\n          content: '\"\"',\n          transition: `all ${token.motionDurationFast} ${token.motionEaseInBack}, opacity ${token.motionDurationFast}`\n        }\n      },\n      // Wrapper > Checkbox + Text\n      '& + span': {\n        paddingInlineStart: token.paddingXS,\n        paddingInlineEnd: token.paddingXS\n      }\n    })\n  },\n  // ===================== Hover =====================\n  {\n    // Wrapper & Wrapper > Checkbox\n    [`\n        ${wrapperCls}:not(${wrapperCls}-disabled),\n        ${checkboxCls}:not(${checkboxCls}-disabled)\n      `]: {\n      [`&:hover ${checkboxCls}-inner`]: {\n        borderColor: token.colorPrimary\n      }\n    },\n    [`${wrapperCls}:not(${wrapperCls}-disabled)`]: {\n      [`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled) ${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimaryHover,\n        borderColor: 'transparent'\n      },\n      [`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled):after`]: {\n        borderColor: token.colorPrimaryHover\n      }\n    }\n  },\n  // ==================== Checked ====================\n  {\n    // Wrapper > Checkbox\n    [`${checkboxCls}-checked`]: {\n      [`${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimary,\n        borderColor: token.colorPrimary,\n        '&:after': {\n          opacity: 1,\n          transform: 'rotate(45deg) scale(1) translate(-50%,-50%)',\n          transition: `all ${token.motionDurationMid} ${token.motionEaseOutBack} ${token.motionDurationFast}`\n        }\n      }\n    },\n    [`\n        ${wrapperCls}-checked:not(${wrapperCls}-disabled),\n        ${checkboxCls}-checked:not(${checkboxCls}-disabled)\n      `]: {\n      [`&:hover ${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimaryHover,\n        borderColor: 'transparent'\n      }\n    }\n  },\n  // ================= Indeterminate =================\n  {\n    [checkboxCls]: {\n      '&-indeterminate': {\n        '&': {\n          // Wrapper > Checkbox > inner\n          [`${checkboxCls}-inner`]: {\n            backgroundColor: `${token.colorBgContainer}`,\n            borderColor: `${token.colorBorder}`,\n            '&:after': {\n              top: '50%',\n              insetInlineStart: '50%',\n              width: token.calc(token.fontSizeLG).div(2).equal(),\n              height: token.calc(token.fontSizeLG).div(2).equal(),\n              backgroundColor: token.colorPrimary,\n              border: 0,\n              transform: 'translate(-50%, -50%) scale(1)',\n              opacity: 1,\n              content: '\"\"'\n            }\n          },\n          // https://github.com/ant-design/ant-design/issues/50074\n          [`&:hover ${checkboxCls}-inner`]: {\n            backgroundColor: `${token.colorBgContainer}`,\n            borderColor: `${token.colorPrimary}`\n          }\n        }\n      }\n    }\n  },\n  // ==================== Disable ====================\n  {\n    // Wrapper\n    [`${wrapperCls}-disabled`]: {\n      cursor: 'not-allowed'\n    },\n    // Wrapper > Checkbox\n    [`${checkboxCls}-disabled`]: {\n      // Wrapper > Checkbox > input\n      [`&, ${checkboxCls}-input`]: {\n        cursor: 'not-allowed',\n        // Disabled for native input to enable Tooltip event handler\n        // ref: https://github.com/ant-design/ant-design/issues/39822#issuecomment-1365075901\n        pointerEvents: 'none'\n      },\n      // Wrapper > Checkbox > inner\n      [`${checkboxCls}-inner`]: {\n        background: token.colorBgContainerDisabled,\n        borderColor: token.colorBorder,\n        '&:after': {\n          borderColor: token.colorTextDisabled\n        }\n      },\n      '&:after': {\n        display: 'none'\n      },\n      '& + span': {\n        color: token.colorTextDisabled\n      },\n      [`&${checkboxCls}-indeterminate ${checkboxCls}-inner::after`]: {\n        background: token.colorTextDisabled\n      }\n    }\n  }];\n};\n// ============================== Export ==============================\nexport function getStyle(prefixCls, token) {\n  const checkboxToken = mergeToken(token, {\n    checkboxCls: `.${prefixCls}`,\n    checkboxSize: token.controlInteractiveSize\n  });\n  return [genCheckboxStyle(checkboxToken)];\n}\nexport default genStyleHooks('Checkbox', (token, {\n  prefixCls\n}) => [getStyle(prefixCls, token)]);"]},"metadata":{},"sourceType":"module"}