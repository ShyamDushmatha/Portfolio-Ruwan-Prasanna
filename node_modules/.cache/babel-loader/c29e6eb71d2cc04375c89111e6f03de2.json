{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, DesignTokenContext as InternalDesignTokenContext, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default'; // ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n\n/** Get current context Design Token. Will be different if you are using nest theme config. */\n\nfunction useToken() {\n  var _useInternalToken = useInternalToken(),\n      _useInternalToken2 = _slicedToArray(_useInternalToken, 3),\n      theme = _useInternalToken2[0],\n      token = _useInternalToken2[1],\n      hashId = _useInternalToken2[2];\n\n  return {\n    theme: theme,\n    token: token,\n    hashId: hashId\n  };\n}\n\nexport default {\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken: useToken,\n  defaultAlgorithm: defaultAlgorithm,\n  darkAlgorithm: darkAlgorithm,\n  compactAlgorithm: compactAlgorithm,\n  getDesignToken: getDesignToken,\n\n  /**\n   * @private Private variable\n   * @warring ðŸ”¥ Do not use in production. ðŸ”¥\n   */\n  defaultConfig: defaultConfig,\n\n  /**\n   * @private Private variable\n   * @warring ðŸ”¥ Do not use in production. ðŸ”¥\n   */\n  _internalContext: InternalDesignTokenContext\n};","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/theme/index.js"],"names":["getDesignToken","defaultConfig","DesignTokenContext","InternalDesignTokenContext","useToken","useInternalToken","compactAlgorithm","darkAlgorithm","defaultAlgorithm","theme","token","hashId","defaultSeed","_internalContext"],"mappings":"AAAA;;;AAEA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAT,EAAwBC,kBAAkB,IAAIC,0BAA9C,EAA0EC,QAAQ,IAAIC,gBAAtF,QAA8G,YAA9G;AACA,OAAOC,gBAAP,MAA6B,kBAA7B;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,gBAAP,MAA6B,kBAA7B,C,CACA;AACA;AACA;;AACA;;AACA,SAASJ,QAAT,GAAoB;AAClB,0BAA+BC,gBAAgB,EAA/C;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,KAAd;AAAA,MAAqBC,MAArB;;AACA,SAAO;AACLF,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,KAAK,EAALA,KAFK;AAGLC,IAAAA,MAAM,EAANA;AAHK,GAAP;AAKD;;AACD,eAAe;AACb;AACAC,EAAAA,WAAW,EAAEX,aAAa,CAACS,KAFd;AAGbN,EAAAA,QAAQ,EAARA,QAHa;AAIbI,EAAAA,gBAAgB,EAAhBA,gBAJa;AAKbD,EAAAA,aAAa,EAAbA,aALa;AAMbD,EAAAA,gBAAgB,EAAhBA,gBANa;AAObN,EAAAA,cAAc,EAAdA,cAPa;;AAQb;AACF;AACA;AACA;AACEC,EAAAA,aAAa,EAAbA,aAZa;;AAab;AACF;AACA;AACA;AACEY,EAAAA,gBAAgB,EAAEV;AAjBL,CAAf","sourcesContent":["\"use client\";\n\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, DesignTokenContext as InternalDesignTokenContext, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default';\n// ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n/** Get current context Design Token. Will be different if you are using nest theme config. */\nfunction useToken() {\n  const [theme, token, hashId] = useInternalToken();\n  return {\n    theme,\n    token,\n    hashId\n  };\n}\nexport default {\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken,\n  defaultAlgorithm,\n  darkAlgorithm,\n  compactAlgorithm,\n  getDesignToken,\n  /**\n   * @private Private variable\n   * @warring ðŸ”¥ Do not use in production. ðŸ”¥\n   */\n  defaultConfig,\n  /**\n   * @private Private variable\n   * @warring ðŸ”¥ Do not use in production. ðŸ”¥\n   */\n  _internalContext: InternalDesignTokenContext\n};"]},"metadata":{},"sourceType":"module"}