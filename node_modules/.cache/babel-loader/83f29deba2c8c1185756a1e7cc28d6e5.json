{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport cls from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Select from '../select';\nvar Option = Select.Option;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return (child === null || child === void 0 ? void 0 : child.type) && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var _a, _b;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      popupClassName = props.popupClassName,\n      dropdownClassName = props.dropdownClassName,\n      children = props.children,\n      dataSource = props.dataSource,\n      dropdownStyle = props.dropdownStyle,\n      dropdownRender = props.dropdownRender,\n      popupRender = props.popupRender,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      onOpenChange = props.onOpenChange,\n      styles = props.styles,\n      classNames = props.classNames;\n  var childNodes = toArray(children);\n  var mergedPopupStyle = ((_a = styles === null || styles === void 0 ? void 0 : styles.popup) === null || _a === void 0 ? void 0 : _a.root) || dropdownStyle;\n  var mergedPopupClassName = ((_b = classNames === null || classNames === void 0 ? void 0 : classNames.popup) === null || _b === void 0 ? void 0 : _b.root) || popupClassName || dropdownClassName;\n  var mergedPopupRender = popupRender || dropdownRender;\n  var mergedOnOpenChange = onOpenChange || onDropdownVisibleChange; // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && /*#__PURE__*/React.isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    var _childNodes = _slicedToArray(childNodes, 1);\n\n    customizeInput = _childNodes[0];\n  }\n\n  var getInputElement = customizeInput ? function () {\n    return customizeInput;\n  } : undefined; // ============================ Options ============================\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if ( /*#__PURE__*/React.isValidElement(item)) {\n        return item;\n      }\n\n      switch (typeof item) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          return undefined;\n      }\n    }) : [];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    var warning = devUseWarning('AutoComplete');\n    process.env.NODE_ENV !== \"production\" ? warning(!customizeInput || !('size' in props), 'usage', 'You need to control style self instead of setting `size` when using customize input.') : void 0;\n    var deprecatedProps = {\n      dropdownMatchSelectWidth: 'popupMatchSelectWidth',\n      dropdownStyle: 'styles.popup.root',\n      dropdownClassName: 'classNames.popup.root',\n      popupClassName: 'classNames.popup.root',\n      dropdownRender: 'popupRender',\n      onDropdownVisibleChange: 'onOpenChange',\n      dataSource: 'options'\n    };\n    Object.entries(deprecatedProps).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          oldProp = _ref2[0],\n          newProp = _ref2[1];\n\n      warning.deprecated(!(oldProp in props), oldProp, newProp);\n    });\n  }\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('select', customizePrefixCls); // ============================ zIndex ============================\n\n  var _useZIndex = useZIndex('SelectLike', mergedPopupStyle === null || mergedPopupStyle === void 0 ? void 0 : mergedPopupStyle.zIndex),\n      _useZIndex2 = _slicedToArray(_useZIndex, 1),\n      zIndex = _useZIndex2[0];\n\n  return /*#__PURE__*/React.createElement(Select, Object.assign({\n    ref: ref,\n    suffixIcon: null\n  }, omit(props, ['dataSource', 'dropdownClassName', 'popupClassName']), {\n    prefixCls: prefixCls,\n    classNames: {\n      popup: {\n        root: mergedPopupClassName\n      },\n      root: classNames === null || classNames === void 0 ? void 0 : classNames.root\n    },\n    styles: {\n      popup: {\n        root: Object.assign(Object.assign({}, mergedPopupStyle), {\n          zIndex: zIndex\n        })\n      },\n      root: styles === null || styles === void 0 ? void 0 : styles.root\n    },\n    className: cls(\"\".concat(prefixCls, \"-auto-complete\"), className),\n    mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n    popupRender: mergedPopupRender,\n    onOpenChange: mergedOnOpenChange,\n    // Internal api\n    getInputElement: getInputElement\n  }), optionChildren);\n};\n\nvar RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\n\nif (process.env.NODE_ENV !== 'production') {\n  RefAutoComplete.displayName = 'AutoComplete';\n}\n\nexport default RefAutoComplete;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/auto-complete/AutoComplete.js"],"names":["React","cls","toArray","omit","useZIndex","devUseWarning","ConfigContext","Select","Option","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","props","ref","_a","_b","customizePrefixCls","prefixCls","className","popupClassName","dropdownClassName","children","dataSource","dropdownStyle","dropdownRender","popupRender","onDropdownVisibleChange","onOpenChange","styles","classNames","childNodes","mergedPopupStyle","popup","root","mergedPopupClassName","mergedPopupRender","mergedOnOpenChange","customizeInput","length","isValidElement","getInputElement","undefined","optionChildren","map","item","createElement","key","value","optionValue","text","process","env","NODE_ENV","warning","deprecatedProps","dropdownMatchSelectWidth","Object","entries","forEach","oldProp","newProp","deprecated","useContext","getPrefixCls","zIndex","assign","suffixIcon","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","RefAutoComplete","forwardRef","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport cls from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Select from '../select';\nconst {\n  Option\n} = Select;\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return (child === null || child === void 0 ? void 0 : child.type) && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\nconst AutoComplete = (props, ref) => {\n  var _a, _b;\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    popupClassName,\n    dropdownClassName,\n    children,\n    dataSource,\n    dropdownStyle,\n    dropdownRender,\n    popupRender,\n    onDropdownVisibleChange,\n    onOpenChange,\n    styles,\n    classNames\n  } = props;\n  const childNodes = toArray(children);\n  const mergedPopupStyle = ((_a = styles === null || styles === void 0 ? void 0 : styles.popup) === null || _a === void 0 ? void 0 : _a.root) || dropdownStyle;\n  const mergedPopupClassName = ((_b = classNames === null || classNames === void 0 ? void 0 : classNames.popup) === null || _b === void 0 ? void 0 : _b.root) || popupClassName || dropdownClassName;\n  const mergedPopupRender = popupRender || dropdownRender;\n  const mergedOnOpenChange = onOpenChange || onDropdownVisibleChange;\n  // ============================= Input =============================\n  let customizeInput;\n  if (childNodes.length === 1 && /*#__PURE__*/React.isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    [customizeInput] = childNodes;\n  }\n  const getInputElement = customizeInput ? () => customizeInput : undefined;\n  // ============================ Options ============================\n  let optionChildren;\n  // [Legacy] convert `children` or `dataSource` into option children\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(item => {\n      if (/*#__PURE__*/React.isValidElement(item)) {\n        return item;\n      }\n      switch (typeof item) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n        case 'object':\n          {\n            const {\n              value: optionValue\n            } = item;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n        default:\n          return undefined;\n      }\n    }) : [];\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('AutoComplete');\n    process.env.NODE_ENV !== \"production\" ? warning(!customizeInput || !('size' in props), 'usage', 'You need to control style self instead of setting `size` when using customize input.') : void 0;\n    const deprecatedProps = {\n      dropdownMatchSelectWidth: 'popupMatchSelectWidth',\n      dropdownStyle: 'styles.popup.root',\n      dropdownClassName: 'classNames.popup.root',\n      popupClassName: 'classNames.popup.root',\n      dropdownRender: 'popupRender',\n      onDropdownVisibleChange: 'onOpenChange',\n      dataSource: 'options'\n    };\n    Object.entries(deprecatedProps).forEach(([oldProp, newProp]) => {\n      warning.deprecated(!(oldProp in props), oldProp, newProp);\n    });\n  }\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('SelectLike', mergedPopupStyle === null || mergedPopupStyle === void 0 ? void 0 : mergedPopupStyle.zIndex);\n  return /*#__PURE__*/React.createElement(Select, Object.assign({\n    ref: ref,\n    suffixIcon: null\n  }, omit(props, ['dataSource', 'dropdownClassName', 'popupClassName']), {\n    prefixCls: prefixCls,\n    classNames: {\n      popup: {\n        root: mergedPopupClassName\n      },\n      root: classNames === null || classNames === void 0 ? void 0 : classNames.root\n    },\n    styles: {\n      popup: {\n        root: Object.assign(Object.assign({}, mergedPopupStyle), {\n          zIndex\n        })\n      },\n      root: styles === null || styles === void 0 ? void 0 : styles.root\n    },\n    className: cls(`${prefixCls}-auto-complete`, className),\n    mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n    popupRender: mergedPopupRender,\n    onOpenChange: mergedOnOpenChange,\n    // Internal api\n    getInputElement\n  }), optionChildren);\n};\nconst RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\nif (process.env.NODE_ENV !== 'production') {\n  RefAutoComplete.displayName = 'AutoComplete';\n}\nexport default RefAutoComplete;"]},"metadata":{},"sourceType":"module"}