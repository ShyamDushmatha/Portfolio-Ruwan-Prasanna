{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { getMergedStatus } from '../../_util/statusUtils';\nimport { devUseWarning } from '../../_util/warning';\nimport { ConfigContext } from '../../config-provider';\nimport useSize from '../../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../../form/context';\nimport useStyle from '../style/otp';\nimport OTPInput from './OTPInput';\n\nfunction strToArr(str) {\n  return (str || '').split('');\n}\n\nvar Separator = function Separator(props) {\n  var index = props.index,\n      prefixCls = props.prefixCls,\n      separator = props.separator;\n  var separatorNode = typeof separator === 'function' ? separator(index) : separator;\n\n  if (!separatorNode) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-separator\")\n  }, separatorNode);\n};\n\nvar OTP = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var customizePrefixCls = props.prefixCls,\n      _props$length = props.length,\n      length = _props$length === void 0 ? 6 : _props$length,\n      customSize = props.size,\n      defaultValue = props.defaultValue,\n      value = props.value,\n      onChange = props.onChange,\n      formatter = props.formatter,\n      separator = props.separator,\n      variant = props.variant,\n      disabled = props.disabled,\n      customStatus = props.status,\n      autoFocus = props.autoFocus,\n      mask = props.mask,\n      type = props.type,\n      onInput = props.onInput,\n      inputMode = props.inputMode,\n      restProps = __rest(props, [\"prefixCls\", \"length\", \"size\", \"defaultValue\", \"value\", \"onChange\", \"formatter\", \"separator\", \"variant\", \"disabled\", \"status\", \"autoFocus\", \"mask\", \"type\", \"onInput\", \"inputMode\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var warning = devUseWarning('Input.OTP');\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof mask === 'string' && mask.length > 1), 'usage', '`mask` prop should be a single character.') : void 0;\n  }\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('otp', customizePrefixCls);\n  var domAttrs = pickAttrs(restProps, {\n    aria: true,\n    data: true,\n    attr: true\n  }); // ========================= Root =========================\n  // Style\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 3),\n      wrapCSSVar = _useStyle2[0],\n      hashId = _useStyle2[1],\n      cssVarCls = _useStyle2[2]; // ========================= Size =========================\n\n\n  var mergedSize = useSize(function (ctx) {\n    return customSize !== null && customSize !== void 0 ? customSize : ctx;\n  }); // ======================== Status ========================\n\n  var formContext = React.useContext(FormItemInputContext);\n  var mergedStatus = getMergedStatus(formContext.status, customStatus);\n  var proxyFormContext = React.useMemo(function () {\n    return Object.assign(Object.assign({}, formContext), {\n      status: mergedStatus,\n      hasFeedback: false,\n      feedbackIcon: null\n    });\n  }, [formContext, mergedStatus]); // ========================= Refs =========================\n\n  var containerRef = React.useRef(null);\n  var refs = React.useRef({});\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _a;\n\n        (_a = refs.current[0]) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n\n        for (var i = 0; i < length; i += 1) {\n          (_a = refs.current[i]) === null || _a === void 0 ? void 0 : _a.blur();\n        }\n      },\n      nativeElement: containerRef.current\n    };\n  }); // ======================= Formatter ======================\n\n  var internalFormatter = function internalFormatter(txt) {\n    return formatter ? formatter(txt) : txt;\n  }; // ======================== Values ========================\n\n\n  var _React$useState = React.useState(function () {\n    return strToArr(internalFormatter(defaultValue || ''));\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      valueCells = _React$useState2[0],\n      setValueCells = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (value !== undefined) {\n      setValueCells(strToArr(value));\n    }\n  }, [value]);\n  var triggerValueCellsChange = useEvent(function (nextValueCells) {\n    setValueCells(nextValueCells);\n\n    if (onInput) {\n      onInput(nextValueCells);\n    } // Trigger if all cells are filled\n\n\n    if (onChange && nextValueCells.length === length && nextValueCells.every(function (c) {\n      return c;\n    }) && nextValueCells.some(function (c, index) {\n      return valueCells[index] !== c;\n    })) {\n      onChange(nextValueCells.join(''));\n    }\n  });\n  var patchValue = useEvent(function (index, txt) {\n    var nextCells = _toConsumableArray(valueCells); // Fill cells till index\n\n\n    for (var i = 0; i < index; i += 1) {\n      if (!nextCells[i]) {\n        nextCells[i] = '';\n      }\n    }\n\n    if (txt.length <= 1) {\n      nextCells[index] = txt;\n    } else {\n      nextCells = nextCells.slice(0, index).concat(strToArr(txt));\n    }\n\n    nextCells = nextCells.slice(0, length); // Clean the last empty cell\n\n    for (var _i = nextCells.length - 1; _i >= 0; _i -= 1) {\n      if (nextCells[_i]) {\n        break;\n      }\n\n      nextCells.pop();\n    } // Format if needed\n\n\n    var formattedValue = internalFormatter(nextCells.map(function (c) {\n      return c || ' ';\n    }).join(''));\n    nextCells = strToArr(formattedValue).map(function (c, i) {\n      if (c === ' ' && !nextCells[i]) {\n        return nextCells[i];\n      }\n\n      return c;\n    });\n    return nextCells;\n  }); // ======================== Change ========================\n\n  var onInputChange = function onInputChange(index, txt) {\n    var _a;\n\n    var nextCells = patchValue(index, txt);\n    var nextIndex = Math.min(index + txt.length, length - 1);\n\n    if (nextIndex !== index && nextCells[index] !== undefined) {\n      (_a = refs.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n\n    triggerValueCellsChange(nextCells);\n  };\n\n  var onInputActiveChange = function onInputActiveChange(nextIndex) {\n    var _a;\n\n    (_a = refs.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n  }; // ======================== Render ========================\n\n\n  var inputSharedProps = {\n    variant: variant,\n    disabled: disabled,\n    status: mergedStatus,\n    mask: mask,\n    type: type,\n    inputMode: inputMode\n  };\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({}, domAttrs, {\n    ref: containerRef,\n    className: classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), mergedSize === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), mergedSize === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), cssVarCls, hashId),\n    role: \"group\"\n  }), /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: proxyFormContext\n  }, Array.from({\n    length: length\n  }).map(function (_, index) {\n    var key = \"otp-\".concat(index);\n    var singleValue = valueCells[index] || '';\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: key\n    }, /*#__PURE__*/React.createElement(OTPInput, Object.assign({\n      ref: function ref(inputEle) {\n        refs.current[index] = inputEle;\n      },\n      index: index,\n      size: mergedSize,\n      htmlSize: 1,\n      className: \"\".concat(prefixCls, \"-input\"),\n      onChange: onInputChange,\n      value: singleValue,\n      onActiveChange: onInputActiveChange,\n      autoFocus: index === 0 && autoFocus\n    }, inputSharedProps)), index < length - 1 && /*#__PURE__*/React.createElement(Separator, {\n      separator: separator,\n      index: index,\n      prefixCls: prefixCls\n    }));\n  }))));\n});\nexport default OTP;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/input/OTP/index.js"],"names":["_toConsumableArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","useEvent","pickAttrs","getMergedStatus","devUseWarning","ConfigContext","useSize","FormItemInputContext","useStyle","OTPInput","strToArr","str","split","Separator","props","index","prefixCls","separator","separatorNode","createElement","className","OTP","forwardRef","ref","customizePrefixCls","customSize","size","defaultValue","value","onChange","formatter","variant","disabled","customStatus","status","autoFocus","mask","type","onInput","inputMode","restProps","process","env","NODE_ENV","warning","useContext","getPrefixCls","direction","domAttrs","aria","data","attr","wrapCSSVar","hashId","cssVarCls","mergedSize","ctx","formContext","mergedStatus","proxyFormContext","useMemo","assign","hasFeedback","feedbackIcon","containerRef","useRef","refs","useImperativeHandle","focus","_a","current","blur","nativeElement","internalFormatter","txt","useState","valueCells","setValueCells","useEffect","undefined","triggerValueCellsChange","nextValueCells","every","c","some","join","patchValue","nextCells","slice","concat","pop","formattedValue","map","onInputChange","nextIndex","Math","min","onInputActiveChange","inputSharedProps","role","Provider","Array","from","_","key","singleValue","Fragment","inputEle","htmlSize","onActiveChange"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { getMergedStatus } from '../../_util/statusUtils';\nimport { devUseWarning } from '../../_util/warning';\nimport { ConfigContext } from '../../config-provider';\nimport useSize from '../../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../../form/context';\nimport useStyle from '../style/otp';\nimport OTPInput from './OTPInput';\nfunction strToArr(str) {\n  return (str || '').split('');\n}\nconst Separator = props => {\n  const {\n    index,\n    prefixCls,\n    separator\n  } = props;\n  const separatorNode = typeof separator === 'function' ? separator(index) : separator;\n  if (!separatorNode) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-separator`\n  }, separatorNode);\n};\nconst OTP = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      length = 6,\n      size: customSize,\n      defaultValue,\n      value,\n      onChange,\n      formatter,\n      separator,\n      variant,\n      disabled,\n      status: customStatus,\n      autoFocus,\n      mask,\n      type,\n      onInput,\n      inputMode\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"length\", \"size\", \"defaultValue\", \"value\", \"onChange\", \"formatter\", \"separator\", \"variant\", \"disabled\", \"status\", \"autoFocus\", \"mask\", \"type\", \"onInput\", \"inputMode\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Input.OTP');\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof mask === 'string' && mask.length > 1), 'usage', '`mask` prop should be a single character.') : void 0;\n  }\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('otp', customizePrefixCls);\n  const domAttrs = pickAttrs(restProps, {\n    aria: true,\n    data: true,\n    attr: true\n  });\n  // ========================= Root =========================\n  // Style\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  // ========================= Size =========================\n  const mergedSize = useSize(ctx => customSize !== null && customSize !== void 0 ? customSize : ctx);\n  // ======================== Status ========================\n  const formContext = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(formContext.status, customStatus);\n  const proxyFormContext = React.useMemo(() => Object.assign(Object.assign({}, formContext), {\n    status: mergedStatus,\n    hasFeedback: false,\n    feedbackIcon: null\n  }), [formContext, mergedStatus]);\n  // ========================= Refs =========================\n  const containerRef = React.useRef(null);\n  const refs = React.useRef({});\n  React.useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n      (_a = refs.current[0]) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    blur: () => {\n      var _a;\n      for (let i = 0; i < length; i += 1) {\n        (_a = refs.current[i]) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    },\n    nativeElement: containerRef.current\n  }));\n  // ======================= Formatter ======================\n  const internalFormatter = txt => formatter ? formatter(txt) : txt;\n  // ======================== Values ========================\n  const [valueCells, setValueCells] = React.useState(() => strToArr(internalFormatter(defaultValue || '')));\n  React.useEffect(() => {\n    if (value !== undefined) {\n      setValueCells(strToArr(value));\n    }\n  }, [value]);\n  const triggerValueCellsChange = useEvent(nextValueCells => {\n    setValueCells(nextValueCells);\n    if (onInput) {\n      onInput(nextValueCells);\n    }\n    // Trigger if all cells are filled\n    if (onChange && nextValueCells.length === length && nextValueCells.every(c => c) && nextValueCells.some((c, index) => valueCells[index] !== c)) {\n      onChange(nextValueCells.join(''));\n    }\n  });\n  const patchValue = useEvent((index, txt) => {\n    let nextCells = _toConsumableArray(valueCells);\n    // Fill cells till index\n    for (let i = 0; i < index; i += 1) {\n      if (!nextCells[i]) {\n        nextCells[i] = '';\n      }\n    }\n    if (txt.length <= 1) {\n      nextCells[index] = txt;\n    } else {\n      nextCells = nextCells.slice(0, index).concat(strToArr(txt));\n    }\n    nextCells = nextCells.slice(0, length);\n    // Clean the last empty cell\n    for (let i = nextCells.length - 1; i >= 0; i -= 1) {\n      if (nextCells[i]) {\n        break;\n      }\n      nextCells.pop();\n    }\n    // Format if needed\n    const formattedValue = internalFormatter(nextCells.map(c => c || ' ').join(''));\n    nextCells = strToArr(formattedValue).map((c, i) => {\n      if (c === ' ' && !nextCells[i]) {\n        return nextCells[i];\n      }\n      return c;\n    });\n    return nextCells;\n  });\n  // ======================== Change ========================\n  const onInputChange = (index, txt) => {\n    var _a;\n    const nextCells = patchValue(index, txt);\n    const nextIndex = Math.min(index + txt.length, length - 1);\n    if (nextIndex !== index && nextCells[index] !== undefined) {\n      (_a = refs.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    triggerValueCellsChange(nextCells);\n  };\n  const onInputActiveChange = nextIndex => {\n    var _a;\n    (_a = refs.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  // ======================== Render ========================\n  const inputSharedProps = {\n    variant,\n    disabled,\n    status: mergedStatus,\n    mask,\n    type,\n    inputMode\n  };\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", Object.assign({}, domAttrs, {\n    ref: containerRef,\n    className: classNames(prefixCls, {\n      [`${prefixCls}-sm`]: mergedSize === 'small',\n      [`${prefixCls}-lg`]: mergedSize === 'large',\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, cssVarCls, hashId),\n    role: \"group\"\n  }), /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: proxyFormContext\n  }, Array.from({\n    length\n  }).map((_, index) => {\n    const key = `otp-${index}`;\n    const singleValue = valueCells[index] || '';\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: key\n    }, /*#__PURE__*/React.createElement(OTPInput, Object.assign({\n      ref: inputEle => {\n        refs.current[index] = inputEle;\n      },\n      index: index,\n      size: mergedSize,\n      htmlSize: 1,\n      className: `${prefixCls}-input`,\n      onChange: onInputChange,\n      value: singleValue,\n      onActiveChange: onInputActiveChange,\n      autoFocus: index === 0 && autoFocus\n    }, inputSharedProps)), index < length - 1 && (/*#__PURE__*/React.createElement(Separator, {\n      separator: separator,\n      index: index,\n      prefixCls: prefixCls\n    })));\n  }))));\n});\nexport default OTP;"]},"metadata":{},"sourceType":"module"}