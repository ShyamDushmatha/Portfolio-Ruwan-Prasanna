{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useCopyClick from '../hooks/useCopyClick';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport usePrevious from '../hooks/usePrevious';\nimport useTooltipProps from '../hooks/useTooltipProps';\nimport Typography from '../Typography';\nimport CopyBtn from './CopyBtn';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nimport { isEleEllipsis, isValidText } from './util';\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref.delete,\n      strong = _ref.strong,\n      keyboard = _ref.keyboard,\n      italic = _ref.italic;\n  var currentContent = content;\n\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\n\nvar ELLIPSIS_STR = '...';\nvar DECORATION_PROPS = ['delete', 'mark', 'code', 'underline', 'strong', 'keyboard', 'italic'];\nvar Base = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _a;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      type = props.type,\n      disabled = props.disabled,\n      children = props.children,\n      ellipsis = props.ellipsis,\n      editable = props.editable,\n      copyable = props.copyable,\n      component = props.component,\n      title = props.title,\n      restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _useLocale = useLocale('Text'),\n      _useLocale2 = _slicedToArray(_useLocale, 1),\n      textLocale = _useLocale2[0];\n\n  var typographyRef = React.useRef(null);\n  var editIconRef = React.useRef(null); // ============================ MISC ============================\n\n  var prefixCls = getPrefixCls('typography', customizePrefixCls);\n  var textProps = omit(restProps, DECORATION_PROPS); // ========================== Editable ==========================\n\n  var _useMergedConfig = useMergedConfig(editable),\n      _useMergedConfig2 = _slicedToArray(_useMergedConfig, 2),\n      enableEdit = _useMergedConfig2[0],\n      editConfig = _useMergedConfig2[1];\n\n  var _useMergedState = useMergedState(false, {\n    value: editConfig.editing\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      editing = _useMergedState2[0],\n      setEditing = _useMergedState2[1];\n\n  var _editConfig$triggerTy = editConfig.triggerType,\n      triggerType = _editConfig$triggerTy === void 0 ? ['icon'] : _editConfig$triggerTy;\n\n  var triggerEdit = function triggerEdit(edit) {\n    var _a;\n\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n\n    setEditing(edit);\n  }; // Focus edit icon when back\n\n\n  var prevEditing = usePrevious(editing);\n  useLayoutEffect(function () {\n    var _a;\n\n    if (!editing && prevEditing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n\n  var onEditClick = function onEditClick(e) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n\n  var onEditChange = function onEditChange(value) {\n    var _a;\n\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n\n  var onEditCancel = function onEditCancel() {\n    var _a;\n\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  }; // ========================== Copyable ==========================\n\n\n  var _useMergedConfig3 = useMergedConfig(copyable),\n      _useMergedConfig4 = _slicedToArray(_useMergedConfig3, 2),\n      enableCopy = _useMergedConfig4[0],\n      copyConfig = _useMergedConfig4[1];\n\n  var _useCopyClick = useCopyClick({\n    copyConfig: copyConfig,\n    children: children\n  }),\n      copied = _useCopyClick.copied,\n      copyLoading = _useCopyClick.copyLoading,\n      onCopyClick = _useCopyClick.onClick; // ========================== Ellipsis ==========================\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLineClampSupport = _React$useState2[0],\n      setIsLineClampSupport = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isTextOverflowSupport = _React$useState4[0],\n      setIsTextOverflowSupport = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isJsEllipsis = _React$useState6[0],\n      setIsJsEllipsis = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      isNativeEllipsis = _React$useState8[0],\n      setIsNativeEllipsis = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isNativeVisible = _React$useState10[0],\n      setIsNativeVisible = _React$useState10[1];\n\n  var _useMergedConfig5 = useMergedConfig(ellipsis, {\n    expandable: false,\n    symbol: function symbol(isExpanded) {\n      return isExpanded ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n  }),\n      _useMergedConfig6 = _slicedToArray(_useMergedConfig5, 2),\n      enableEllipsis = _useMergedConfig6[0],\n      ellipsisConfig = _useMergedConfig6[1];\n\n  var _useMergedState3 = useMergedState(ellipsisConfig.defaultExpanded || false, {\n    value: ellipsisConfig.expanded\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      expanded = _useMergedState4[0],\n      setExpanded = _useMergedState4[1];\n\n  var mergedEnableEllipsis = enableEllipsis && (!expanded || ellipsisConfig.expandable === 'collapsible'); // Shared prop to reduce bundle size\n\n  var _ellipsisConfig$rows = ellipsisConfig.rows,\n      rows = _ellipsisConfig$rows === void 0 ? 1 : _ellipsisConfig$rows;\n  var needMeasureEllipsis = React.useMemo(function () {\n    return (// Disable ellipsis\n      mergedEnableEllipsis && ( // Provide suffix\n      ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis || // Can't use css ellipsis since we need to provide the place for button\n      ellipsisConfig.expandable || enableEdit || enableCopy)\n    );\n  }, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useLayoutEffect(function () {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n\n  var _React$useState11 = React.useState(mergedEnableEllipsis),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      cssEllipsis = _React$useState12[0],\n      setCssEllipsis = _React$useState12[1];\n\n  var canUseCssEllipsis = React.useMemo(function () {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]); // We use effect to change from css ellipsis to js ellipsis.\n  // To make SSR still can see the ellipsis.\n\n  useLayoutEffect(function () {\n    setCssEllipsis(canUseCssEllipsis && mergedEnableEllipsis);\n  }, [canUseCssEllipsis, mergedEnableEllipsis]);\n  var isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  var cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  var cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis; // >>>>> Expand\n\n  var onExpandClick = function onExpandClick(e, info) {\n    var _a;\n\n    setExpanded(info.expanded);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e, info);\n  };\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      ellipsisWidth = _React$useState14[0],\n      setEllipsisWidth = _React$useState14[1];\n\n  var onResize = function onResize(_ref2) {\n    var offsetWidth = _ref2.offsetWidth;\n    setEllipsisWidth(offsetWidth);\n  }; // >>>>> JS Ellipsis\n\n\n  var onJsEllipsis = function onJsEllipsis(jsEllipsis) {\n    var _a;\n\n    setIsJsEllipsis(jsEllipsis); // Trigger if changed\n\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  }; // >>>>> Native ellipsis\n\n\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n\n    if (enableEllipsis && cssEllipsis && textEle) {\n      var currentEllipsis = isEleEllipsis(textEle);\n\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible, ellipsisWidth]); // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n\n\n    var observer = new IntersectionObserver(function () {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return function () {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]); // ========================== Tooltip ===========================\n\n  var tooltipProps = useTooltipProps(ellipsisConfig.tooltip, editConfig.text, children);\n  var topAriaLabel = React.useMemo(function () {\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n\n    return [editConfig.text, children, title, tooltipProps.title].find(isValidText);\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]); // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_a = editConfig.text) !== null && _a !== void 0 ? _a : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  } // >>>>>>>>>>> Typography\n  // Expand\n\n\n  var renderExpand = function renderExpand() {\n    var expandable = ellipsisConfig.expandable,\n        symbol = ellipsisConfig.symbol;\n    return expandable ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: \"expand\",\n      className: \"\".concat(prefixCls, \"-\").concat(expanded ? 'collapse' : 'expand'),\n      onClick: function onClick(e) {\n        return onExpandClick(e, {\n          expanded: !expanded\n        });\n      },\n      \"aria-label\": expanded ? textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, typeof symbol === 'function' ? symbol(expanded) : symbol) : null;\n  }; // Edit\n\n\n  var renderEdit = function renderEdit() {\n    if (!enableEdit) {\n      return;\n    }\n\n    var icon = editConfig.icon,\n        tooltip = editConfig.tooltip,\n        tabIndex = editConfig.tabIndex;\n    var editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    var ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      ref: editIconRef,\n      className: \"\".concat(prefixCls, \"-edit\"),\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel,\n      tabIndex: tabIndex\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  }; // Copy\n\n\n  var renderCopy = function renderCopy() {\n    if (!enableCopy) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(CopyBtn, Object.assign({\n      key: \"copy\"\n    }, copyConfig, {\n      prefixCls: prefixCls,\n      copied: copied,\n      locale: textLocale,\n      onCopy: onCopyClick,\n      loading: copyLoading,\n      iconOnly: children === null || children === undefined\n    }));\n  };\n\n  var renderOperations = function renderOperations(canEllipsis) {\n    return [canEllipsis && renderExpand(), renderEdit(), renderCopy()];\n  };\n\n  var renderEllipsis = function renderEllipsis(canEllipsis) {\n    return [canEllipsis && !expanded && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      key: \"ellipsis\"\n    }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(canEllipsis)];\n  };\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis\n  }, function (resizeRef) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(EllipsisTooltip, {\n      tooltipProps: tooltipProps,\n      enableEllipsis: mergedEnableEllipsis,\n      isEllipsis: isMergedEllipsis\n    }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), enableEllipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n      prefixCls: customizePrefixCls,\n      style: Object.assign(Object.assign({}, style), {\n        WebkitLineClamp: cssLineClamp ? rows : undefined\n      }),\n      component: component,\n      ref: composeRef(resizeRef, typographyRef, ref),\n      direction: direction,\n      onClick: triggerType.includes('text') ? onEditClick : undefined,\n      \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n      title: title\n    }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n      enableMeasure: mergedEnableEllipsis && !cssEllipsis,\n      text: children,\n      rows: rows,\n      width: ellipsisWidth,\n      onEllipsis: onJsEllipsis,\n      expanded: expanded,\n      miscDeps: [copied, expanded, copyLoading, enableEdit, enableCopy, textLocale].concat(_toConsumableArray(DECORATION_PROPS.map(function (key) {\n        return props[key];\n      })))\n    }, function (node, canEllipsis) {\n      return wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, node.length > 0 && canEllipsis && !expanded && topAriaLabel ? /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, node) : node, renderEllipsis(canEllipsis)));\n    })));\n  });\n});\nexport default Base;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/typography/Base/index.js"],"names":["_toConsumableArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","EditOutlined","classNames","ResizeObserver","toArray","useLayoutEffect","useMergedState","omit","composeRef","isStyleSupport","ConfigContext","useLocale","Tooltip","Editable","useCopyClick","useMergedConfig","usePrevious","useTooltipProps","Typography","CopyBtn","Ellipsis","EllipsisTooltip","isEleEllipsis","isValidText","wrapperDecorations","content","mark","code","underline","del","delete","strong","keyboard","italic","currentContent","wrap","tag","needed","createElement","ELLIPSIS_STR","DECORATION_PROPS","Base","forwardRef","props","ref","_a","customizePrefixCls","prefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","useContext","getPrefixCls","direction","textLocale","typographyRef","useRef","editIconRef","textProps","enableEdit","editConfig","value","editing","setEditing","triggerType","triggerEdit","edit","onStart","prevEditing","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","enableCopy","copyConfig","copied","copyLoading","onCopyClick","onClick","useState","isLineClampSupport","setIsLineClampSupport","isTextOverflowSupport","setIsTextOverflowSupport","isJsEllipsis","setIsJsEllipsis","isNativeEllipsis","setIsNativeEllipsis","isNativeVisible","setIsNativeVisible","expandable","symbol","isExpanded","collapse","expand","enableEllipsis","ellipsisConfig","defaultExpanded","expanded","setExpanded","mergedEnableEllipsis","rows","needMeasureEllipsis","useMemo","suffix","undefined","onEllipsis","cssEllipsis","setCssEllipsis","canUseCssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","info","onExpand","ellipsisWidth","setEllipsisWidth","onResize","offsetWidth","onJsEllipsis","jsEllipsis","useEffect","textEle","currentEllipsis","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","text","topAriaLabel","find","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","key","renderEdit","icon","tabIndex","editTitle","ariaLabel","includes","role","renderCopy","assign","locale","onCopy","loading","iconOnly","renderOperations","canEllipsis","renderEllipsis","resizeRef","isEllipsis","WebkitLineClamp","toString","enableMeasure","width","miscDeps","concat","map","node","Fragment"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useCopyClick from '../hooks/useCopyClick';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport usePrevious from '../hooks/usePrevious';\nimport useTooltipProps from '../hooks/useTooltipProps';\nimport Typography from '../Typography';\nimport CopyBtn from './CopyBtn';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nimport { isEleEllipsis, isValidText } from './util';\nfunction wrapperDecorations({\n  mark,\n  code,\n  underline,\n  delete: del,\n  strong,\n  keyboard,\n  italic\n}, content) {\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nconst ELLIPSIS_STR = '...';\nconst DECORATION_PROPS = ['delete', 'mark', 'code', 'underline', 'strong', 'keyboard', 'italic'];\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, DECORATION_PROPS);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  const prevEditing = usePrevious(editing);\n  useLayoutEffect(() => {\n    var _a;\n    if (!editing && prevEditing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const {\n    copied,\n    copyLoading,\n    onClick: onCopyClick\n  } = useCopyClick({\n    copyConfig,\n    children\n  });\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false,\n    symbol: isExpanded => isExpanded ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n  });\n  const [expanded, setExpanded] = useMergedState(ellipsisConfig.defaultExpanded || false, {\n    value: ellipsisConfig.expanded\n  });\n  const mergedEnableEllipsis = enableEllipsis && (!expanded || ellipsisConfig.expandable === 'collapsible');\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  mergedEnableEllipsis && (\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy), [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const [cssEllipsis, setCssEllipsis] = React.useState(mergedEnableEllipsis);\n  const canUseCssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  // We use effect to change from css ellipsis to js ellipsis.\n  // To make SSR still can see the ellipsis.\n  useLayoutEffect(() => {\n    setCssEllipsis(canUseCssEllipsis && mergedEnableEllipsis);\n  }, [canUseCssEllipsis, mergedEnableEllipsis]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = (e, info) => {\n    var _a;\n    setExpanded(info.expanded);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e, info);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const onResize = ({\n    offsetWidth\n  }) => {\n    setEllipsisWidth(offsetWidth);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = isEleEllipsis(textEle);\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible, ellipsisWidth]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  const tooltipProps = useTooltipProps(ellipsisConfig.tooltip, editConfig.text, children);\n  const topAriaLabel = React.useMemo(() => {\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    return [editConfig.text, children, title, tooltipProps.title].find(isValidText);\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_a = editConfig.text) !== null && _a !== void 0 ? _a : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    return expandable ? (/*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: \"expand\",\n      className: `${prefixCls}-${expanded ? 'collapse' : 'expand'}`,\n      onClick: e => onExpandClick(e, {\n        expanded: !expanded\n      }),\n      \"aria-label\": expanded ? textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, typeof symbol === 'function' ? symbol(expanded) : symbol)) : null;\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) {\n      return;\n    }\n    const {\n      icon,\n      tooltip,\n      tabIndex\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? (/*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel,\n      tabIndex: tabIndex\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    })))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(CopyBtn, Object.assign({\n      key: \"copy\"\n    }, copyConfig, {\n      prefixCls: prefixCls,\n      copied: copied,\n      locale: textLocale,\n      onCopy: onCopyClick,\n      loading: copyLoading,\n      iconOnly: children === null || children === undefined\n    }));\n  };\n  const renderOperations = canEllipsis => [canEllipsis && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = canEllipsis => [canEllipsis && !expanded && (/*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR)), ellipsisConfig.suffix, renderOperations(canEllipsis)];\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis\n  }, resizeRef => (/*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enableEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enableMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    onEllipsis: onJsEllipsis,\n    expanded: expanded,\n    miscDeps: [copied, expanded, copyLoading, enableEdit, enableCopy, textLocale].concat(_toConsumableArray(DECORATION_PROPS.map(key => props[key])))\n  }, (node, canEllipsis) => wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, node.length > 0 && canEllipsis && !expanded && topAriaLabel ? (/*#__PURE__*/React.createElement(\"span\", {\n    key: \"show-content\",\n    \"aria-hidden\": true\n  }, node)) : node, renderEllipsis(canEllipsis))))))));\n});\nexport default Base;"]},"metadata":{},"sourceType":"module"}