{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useState } from 'react';\nimport { generateColor, getColorAlpha } from '../util';\nimport ColorSteppers from './ColorSteppers';\n\nvar ColorAlphaInput = function ColorAlphaInput(_ref) {\n  var prefixCls = _ref.prefixCls,\n      value = _ref.value,\n      onChange = _ref.onChange;\n  var colorAlphaInputPrefixCls = \"\".concat(prefixCls, \"-alpha-input\");\n\n  var _useState = useState(function () {\n    return generateColor(value || '#000');\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      internalValue = _useState2[0],\n      setInternalValue = _useState2[1];\n\n  var alphaValue = value || internalValue;\n\n  var handleAlphaChange = function handleAlphaChange(step) {\n    var hsba = alphaValue.toHsb();\n    hsba.a = (step || 0) / 100;\n    var genColor = generateColor(hsba);\n    setInternalValue(genColor);\n    onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n  };\n\n  return /*#__PURE__*/React.createElement(ColorSteppers, {\n    value: getColorAlpha(alphaValue),\n    prefixCls: prefixCls,\n    formatter: function formatter(step) {\n      return \"\".concat(step, \"%\");\n    },\n    className: colorAlphaInputPrefixCls,\n    onChange: handleAlphaChange\n  });\n};\n\nexport default ColorAlphaInput;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/New/Portfolio-Ruwan-Prasanna/node_modules/antd/es/color-picker/components/ColorAlphaInput.js"],"names":["React","useState","generateColor","getColorAlpha","ColorSteppers","ColorAlphaInput","prefixCls","value","onChange","colorAlphaInputPrefixCls","internalValue","setInternalValue","alphaValue","handleAlphaChange","step","hsba","toHsb","a","genColor","createElement","formatter","className"],"mappings":"AAAA;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,SAA7C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAIlB;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAMC,wBAAwB,aAAMH,SAAN,iBAA9B;;AACA,kBAA0CL,QAAQ,CAAC;AAAA,WAAMC,aAAa,CAACK,KAAK,IAAI,MAAV,CAAnB;AAAA,GAAD,CAAlD;AAAA;AAAA,MAAOG,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,UAAU,GAAGL,KAAK,IAAIG,aAA5B;;AACA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,IAAI,EAAI;AAChC,QAAMC,IAAI,GAAGH,UAAU,CAACI,KAAX,EAAb;AACAD,IAAAA,IAAI,CAACE,CAAL,GAAS,CAACH,IAAI,IAAI,CAAT,IAAc,GAAvB;AACA,QAAMI,QAAQ,GAAGhB,aAAa,CAACa,IAAD,CAA9B;AACAJ,IAAAA,gBAAgB,CAACO,QAAD,CAAhB;AACAV,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACU,QAAD,CAA5D;AACD,GAND;;AAOA,SAAO,aAAalB,KAAK,CAACmB,aAAN,CAAoBf,aAApB,EAAmC;AACrDG,IAAAA,KAAK,EAAEJ,aAAa,CAACS,UAAD,CADiC;AAErDN,IAAAA,SAAS,EAAEA,SAF0C;AAGrDc,IAAAA,SAAS,EAAE,mBAAAN,IAAI;AAAA,uBAAOA,IAAP;AAAA,KAHsC;AAIrDO,IAAAA,SAAS,EAAEZ,wBAJ0C;AAKrDD,IAAAA,QAAQ,EAAEK;AAL2C,GAAnC,CAApB;AAOD,CAtBD;;AAuBA,eAAeR,eAAf","sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport { generateColor, getColorAlpha } from '../util';\nimport ColorSteppers from './ColorSteppers';\nconst ColorAlphaInput = ({\n  prefixCls,\n  value,\n  onChange\n}) => {\n  const colorAlphaInputPrefixCls = `${prefixCls}-alpha-input`;\n  const [internalValue, setInternalValue] = useState(() => generateColor(value || '#000'));\n  const alphaValue = value || internalValue;\n  const handleAlphaChange = step => {\n    const hsba = alphaValue.toHsb();\n    hsba.a = (step || 0) / 100;\n    const genColor = generateColor(hsba);\n    setInternalValue(genColor);\n    onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n  };\n  return /*#__PURE__*/React.createElement(ColorSteppers, {\n    value: getColorAlpha(alphaValue),\n    prefixCls: prefixCls,\n    formatter: step => `${step}%`,\n    className: colorAlphaInputPrefixCls,\n    onChange: handleAlphaChange\n  });\n};\nexport default ColorAlphaInput;"]},"metadata":{},"sourceType":"module"}