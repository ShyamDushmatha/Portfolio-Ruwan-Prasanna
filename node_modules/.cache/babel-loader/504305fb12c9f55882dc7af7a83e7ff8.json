{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as React from 'react';\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport Tooltip from '../../tooltip';\nimport { getNode, toList } from './util';\n\nvar CopyBtn = function CopyBtn(_ref) {\n  var _classNames;\n\n  var prefixCls = _ref.prefixCls,\n      copied = _ref.copied,\n      locale = _ref.locale,\n      iconOnly = _ref.iconOnly,\n      tooltips = _ref.tooltips,\n      icon = _ref.icon,\n      tabIndex = _ref.tabIndex,\n      onCopy = _ref.onCopy,\n      btnLoading = _ref.loading;\n  var tooltipNodes = toList(tooltips);\n  var iconNodes = toList(icon);\n\n  var _ref2 = locale !== null && locale !== void 0 ? locale : {},\n      copiedText = _ref2.copied,\n      copyText = _ref2.copy;\n\n  var systemStr = copied ? copiedText : copyText;\n  var copyTitle = getNode(tooltipNodes[copied ? 1 : 0], systemStr);\n  var ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: copyTitle\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: classNames(\"\".concat(prefixCls, \"-copy\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-copy-success\"), copied), _defineProperty(_classNames, \"\".concat(prefixCls, \"-copy-icon-only\"), iconOnly), _classNames)),\n    onClick: onCopy,\n    \"aria-label\": ariaLabel,\n    tabIndex: tabIndex\n  }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], btnLoading ? /*#__PURE__*/React.createElement(LoadingOutlined, null) : /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n};\n\nexport default CopyBtn;","map":{"version":3,"sources":["/Users/shamryshiraz/Documents/New/Untitled/Portfolio/node_modules/antd/es/typography/Base/CopyBtn.js"],"names":["React","CheckOutlined","CopyOutlined","LoadingOutlined","classNames","Tooltip","getNode","toList","CopyBtn","prefixCls","copied","locale","iconOnly","tooltips","icon","tabIndex","onCopy","btnLoading","loading","tooltipNodes","iconNodes","copiedText","copyText","copy","systemStr","copyTitle","ariaLabel","createElement","title","type","className","onClick"],"mappings":"AAAA;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,QAAhC;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAUV;AAAA;;AAAA,MATJC,SASI,QATJA,SASI;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADKC,UACL,QADJC,OACI;AACJ,MAAMC,YAAY,GAAGZ,MAAM,CAACM,QAAD,CAA3B;AACA,MAAMO,SAAS,GAAGb,MAAM,CAACO,IAAD,CAAxB;;AACA,cAGIH,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD,EAHpD;AAAA,MACUU,UADV,SACEX,MADF;AAAA,MAEQY,QAFR,SAEEC,IAFF;;AAIA,MAAMC,SAAS,GAAGd,MAAM,GAAGW,UAAH,GAAgBC,QAAxC;AACA,MAAMG,SAAS,GAAGnB,OAAO,CAACa,YAAY,CAACT,MAAM,GAAG,CAAH,GAAO,CAAd,CAAb,EAA+Bc,SAA/B,CAAzB;AACA,MAAME,SAAS,GAAG,OAAOD,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4CD,SAA9D;AACA,SAAO,aAAaxB,KAAK,CAAC2B,aAAN,CAAoBtB,OAApB,EAA6B;AAC/CuB,IAAAA,KAAK,EAAEH;AADwC,GAA7B,EAEjB,aAAazB,KAAK,CAAC2B,aAAN,CAAoB,QAApB,EAA8B;AAC5CE,IAAAA,IAAI,EAAE,QADsC;AAE5CC,IAAAA,SAAS,EAAE1B,UAAU,WAAIK,SAAJ,sEACfA,SADe,oBACYC,MADZ,0CAEfD,SAFe,sBAEcG,QAFd,gBAFuB;AAM5CmB,IAAAA,OAAO,EAAEf,MANmC;AAO5C,kBAAcU,SAP8B;AAQ5CX,IAAAA,QAAQ,EAAEA;AARkC,GAA9B,EASbL,MAAM,GAAGJ,OAAO,CAACc,SAAS,CAAC,CAAD,CAAV,EAAe,aAAapB,KAAK,CAAC2B,aAAN,CAAoB1B,aAApB,EAAmC,IAAnC,CAA5B,EAAsE,IAAtE,CAAV,GAAwFK,OAAO,CAACc,SAAS,CAAC,CAAD,CAAV,EAAeH,UAAU,GAAG,aAAajB,KAAK,CAAC2B,aAAN,CAAoBxB,eAApB,EAAqC,IAArC,CAAhB,GAA6D,aAAaH,KAAK,CAAC2B,aAAN,CAAoBzB,YAApB,EAAkC,IAAlC,CAAnG,EAA4I,IAA5I,CATxF,CAFI,CAApB;AAYD,CAhCD;;AAiCA,eAAeM,OAAf","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport Tooltip from '../../tooltip';\nimport { getNode, toList } from './util';\nconst CopyBtn = ({\n  prefixCls,\n  copied,\n  locale,\n  iconOnly,\n  tooltips,\n  icon,\n  tabIndex,\n  onCopy,\n  loading: btnLoading\n}) => {\n  const tooltipNodes = toList(tooltips);\n  const iconNodes = toList(icon);\n  const {\n    copied: copiedText,\n    copy: copyText\n  } = locale !== null && locale !== void 0 ? locale : {};\n  const systemStr = copied ? copiedText : copyText;\n  const copyTitle = getNode(tooltipNodes[copied ? 1 : 0], systemStr);\n  const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: copyTitle\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: classNames(`${prefixCls}-copy`, {\n      [`${prefixCls}-copy-success`]: copied,\n      [`${prefixCls}-copy-icon-only`]: iconOnly\n    }),\n    onClick: onCopy,\n    \"aria-label\": ariaLabel,\n    tabIndex: tabIndex\n  }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], btnLoading ? /*#__PURE__*/React.createElement(LoadingOutlined, null) : /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n};\nexport default CopyBtn;"]},"metadata":{},"sourceType":"module"}